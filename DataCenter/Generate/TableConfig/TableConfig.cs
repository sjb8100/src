// Classes and structures being serialized

// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.
using System;
using System.IO;
using System.Collections.Generic;

namespace table
{
    /// <summary> FILE: R令牌表.xlsx SHEET: 接取悬赏 KEY: id</summary>
    public partial class AcceptTokenDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new AcceptTokenDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return AcceptTokenDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return AcceptTokenDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return AcceptTokenDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return AcceptTokenDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return AcceptTokenDataBase.Deserialize(buffer, (AcceptTokenDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return AcceptTokenDataBase.Deserialize(stream, (AcceptTokenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return AcceptTokenDataBase.DeserializeLengthDelimited(stream, (AcceptTokenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return AcceptTokenDataBase.DeserializeLength(stream, length, (AcceptTokenDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { AcceptTokenDataBase.Serialize(stream, (AcceptTokenDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return AcceptTokenDataBase.SerializeToBytes((AcceptTokenDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { AcceptTokenDataBase.SerializeLengthDelimited(stream, (AcceptTokenDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> id</summary>
        public uint taskid { get; set; }

        /// <summary> 任务id</summary>
        public string title { get; set; }

        /// <summary> 令牌</summary>
        public string icon { get; set; }

        /// <summary> 图标名</summary>
        public uint bgId { get; set; }

        /// <summary> 大背景图</summary>
        public uint openLvele { get; set; }

        /// <summary> 解锁等级</summary>
        public uint costMoney { get; set; }

    }

    /// <summary> FILE: Achievement成就.xlsx SHEET: Sheet1 KEY: id</summary>
    public partial class AchievementDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new AchievementDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return AchievementDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return AchievementDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return AchievementDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return AchievementDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return AchievementDataBase.Deserialize(buffer, (AchievementDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return AchievementDataBase.Deserialize(stream, (AchievementDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return AchievementDataBase.DeserializeLengthDelimited(stream, (AchievementDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return AchievementDataBase.DeserializeLength(stream, length, (AchievementDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { AchievementDataBase.Serialize(stream, (AchievementDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return AchievementDataBase.SerializeToBytes((AchievementDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { AchievementDataBase.SerializeLengthDelimited(stream, (AchievementDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public uint whetherShow { get; set; }

        /// <summary> 是否显示</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public string typeName { get; set; }

        /// <summary> 类型名称</summary>
        public uint childType { get; set; }

        /// <summary> 子类型</summary>
        public string childTypeName { get; set; }

        /// <summary> 子类型名称</summary>
        public string condition { get; set; }

        /// <summary> 达成条件</summary>
        public uint aggregate { get; set; }

        /// <summary> 总进度</summary>
        public uint gold { get; set; }

        /// <summary> 金币奖励</summary>
        public uint money { get; set; }

        /// <summary> 文钱奖励</summary>
        public string items { get; set; }

        /// <summary> 道具奖励</summary>
        public uint jumpID { get; set; }

        /// <summary> 跳转途径</summary>
        public uint taskID { get; set; }

        /// <summary> 跳转任务</summary>
        public uint title { get; set; }

        /// <summary> 称号奖励</summary>
        public string tips { get; set; }

        /// <summary> 飘字提示</summary>
        public uint get_point { get; set; }

    }

    /// <summary> FILE: Arena武斗场.xlsx SHEET: 清除挑战CD费用 KEY: times</summary>
    public partial class ArenaClearCDCostDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ArenaClearCDCostDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ArenaClearCDCostDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ArenaClearCDCostDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ArenaClearCDCostDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ArenaClearCDCostDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ArenaClearCDCostDataBase.Deserialize(buffer, (ArenaClearCDCostDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ArenaClearCDCostDataBase.Deserialize(stream, (ArenaClearCDCostDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ArenaClearCDCostDataBase.DeserializeLengthDelimited(stream, (ArenaClearCDCostDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ArenaClearCDCostDataBase.DeserializeLength(stream, length, (ArenaClearCDCostDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ArenaClearCDCostDataBase.Serialize(stream, (ArenaClearCDCostDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ArenaClearCDCostDataBase.SerializeToBytes((ArenaClearCDCostDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ArenaClearCDCostDataBase.SerializeLengthDelimited(stream, (ArenaClearCDCostDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint times { get; set; }

        /// <summary> 次数</summary>
        public uint cost { get; set; }

    }

    /// <summary> FILE: Arena武斗场.xlsx SHEET: 每日排行奖励 KEY: id</summary>
    public partial class ArenaRankRewardDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ArenaRankRewardDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ArenaRankRewardDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ArenaRankRewardDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ArenaRankRewardDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ArenaRankRewardDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ArenaRankRewardDatabase.Deserialize(buffer, (ArenaRankRewardDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ArenaRankRewardDatabase.Deserialize(stream, (ArenaRankRewardDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ArenaRankRewardDatabase.DeserializeLengthDelimited(stream, (ArenaRankRewardDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ArenaRankRewardDatabase.DeserializeLength(stream, length, (ArenaRankRewardDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ArenaRankRewardDatabase.Serialize(stream, (ArenaRankRewardDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ArenaRankRewardDatabase.SerializeToBytes((ArenaRankRewardDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ArenaRankRewardDatabase.SerializeLengthDelimited(stream, (ArenaRankRewardDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public uint rank_cap { get; set; }

        /// <summary> 排名上限</summary>
        public uint rank_floor { get; set; }

        /// <summary> 排名下限</summary>
        public uint ticket_reward { get; set; }

        /// <summary> 文钱奖励</summary>
        public uint gold_reward { get; set; }

        /// <summary> 金币奖励</summary>
        public uint score_reward { get; set; }

        /// <summary> 积分奖励</summary>
        public uint experience_reward { get; set; }

    }

    /// <summary> FILE: Arena武斗场.xlsx SHEET: 重置挑战次数费用 KEY: times</summary>
    public partial class ArenaResetCostDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ArenaResetCostDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ArenaResetCostDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ArenaResetCostDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ArenaResetCostDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ArenaResetCostDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ArenaResetCostDataBase.Deserialize(buffer, (ArenaResetCostDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ArenaResetCostDataBase.Deserialize(stream, (ArenaResetCostDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ArenaResetCostDataBase.DeserializeLengthDelimited(stream, (ArenaResetCostDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ArenaResetCostDataBase.DeserializeLength(stream, length, (ArenaResetCostDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ArenaResetCostDataBase.Serialize(stream, (ArenaResetCostDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ArenaResetCostDataBase.SerializeToBytes((ArenaResetCostDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ArenaResetCostDataBase.SerializeLengthDelimited(stream, (ArenaResetCostDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint times { get; set; }

        /// <summary> 次数</summary>
        public uint cost { get; set; }

    }

    /// <summary> FILE: S神兵.xlsx SHEET: Sheet1 KEY: ID</summary>
    public partial class ArtifactDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ArtifactDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ArtifactDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ArtifactDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ArtifactDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ArtifactDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ArtifactDataBase.Deserialize(buffer, (ArtifactDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ArtifactDataBase.Deserialize(stream, (ArtifactDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ArtifactDataBase.DeserializeLengthDelimited(stream, (ArtifactDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ArtifactDataBase.DeserializeLength(stream, length, (ArtifactDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ArtifactDataBase.Serialize(stream, (ArtifactDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ArtifactDataBase.SerializeToBytes((ArtifactDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ArtifactDataBase.SerializeLengthDelimited(stream, (ArtifactDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint open_level { get; set; }

        /// <summary> 开启等级</summary>
        public uint taskid { get; set; }

        /// <summary> 完成任务</summary>
        public string decrib { get; set; }

        /// <summary> 文本描述</summary>
        public uint reward { get; set; }

    }

    /// <summary> FILE: 华夏宝典.xlsx SHEET: 宝典配置 KEY: firID + secID</summary>
    public partial class BibleDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new BibleDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return BibleDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return BibleDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return BibleDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return BibleDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return BibleDataBase.Deserialize(buffer, (BibleDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return BibleDataBase.Deserialize(stream, (BibleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return BibleDataBase.DeserializeLengthDelimited(stream, (BibleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return BibleDataBase.DeserializeLength(stream, length, (BibleDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { BibleDataBase.Serialize(stream, (BibleDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return BibleDataBase.SerializeToBytes((BibleDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { BibleDataBase.SerializeLengthDelimited(stream, (BibleDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint firID { get; set; }

        /// <summary> 大类</summary>
        public uint secID { get; set; }

        /// <summary> 小类</summary>
        public string firName { get; set; }

        /// <summary> 大类名称</summary>
        public string secName { get; set; }

        /// <summary> 小类名称</summary>
        public string content { get; set; }

        /// <summary> 文字内容</summary>
        public string Animation { get; set; }

        /// <summary> 调用动画</summary>
        public string AnimationPos { get; set; }

    }

    /// <summary> FILE: AI表.xlsx SHEET: Sheet1 KEY: id</summary>
    public partial class BossAIDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new BossAIDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return BossAIDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return BossAIDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return BossAIDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return BossAIDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return BossAIDataBase.Deserialize(buffer, (BossAIDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return BossAIDataBase.Deserialize(stream, (BossAIDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return BossAIDataBase.DeserializeLengthDelimited(stream, (BossAIDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return BossAIDataBase.DeserializeLength(stream, length, (BossAIDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { BossAIDataBase.Serialize(stream, (BossAIDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return BossAIDataBase.SerializeToBytes((BossAIDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { BossAIDataBase.SerializeLengthDelimited(stream, (BossAIDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> id</summary>
        public uint do_type { get; set; }

        /// <summary> 作用类型</summary>
        public uint do_param1 { get; set; }

    }

    /// <summary> FILE: NPC对话表.xlsm SHEET: Sheet2 KEY: npcID</summary>
    public partial class BossTalkDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new BossTalkDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return BossTalkDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return BossTalkDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return BossTalkDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return BossTalkDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return BossTalkDataBase.Deserialize(buffer, (BossTalkDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return BossTalkDataBase.Deserialize(stream, (BossTalkDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return BossTalkDataBase.DeserializeLengthDelimited(stream, (BossTalkDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return BossTalkDataBase.DeserializeLength(stream, length, (BossTalkDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { BossTalkDataBase.Serialize(stream, (BossTalkDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return BossTalkDataBase.SerializeToBytes((BossTalkDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { BossTalkDataBase.SerializeLengthDelimited(stream, (BossTalkDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint npcID { get; set; }

        /// <summary> NPCID</summary>
        public uint textID { get; set; }

        /// <summary> 文字ID</summary>
        public uint aliveTime { get; set; }

        /// <summary> 持续时间</summary>
        public uint loopTime { get; set; }

    }

    /// <summary> FILE: BUFF表.xlsm SHEET: Sheet1 KEY: dwID + buffLevel</summary>
    public partial class BuffDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new BuffDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return BuffDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return BuffDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return BuffDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return BuffDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return BuffDataBase.Deserialize(buffer, (BuffDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return BuffDataBase.Deserialize(stream, (BuffDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return BuffDataBase.DeserializeLengthDelimited(stream, (BuffDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return BuffDataBase.DeserializeLength(stream, length, (BuffDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { BuffDataBase.Serialize(stream, (BuffDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return BuffDataBase.SerializeToBytes((BuffDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { BuffDataBase.SerializeLengthDelimited(stream, (BuffDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public BuffDataBase()
        {
            buffEffect = new List<uint>();
        }
        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint dwType { get; set; }

        /// <summary> 类型</summary>
        public uint buffLevel { get; set; }

        /// <summary> 等级</summary>
        public uint dwShowTime { get; set; }

        /// <summary> BUFF时间显示</summary>
        public uint dwShield { get; set; }

        /// <summary> 显示屏蔽</summary>
        public uint dwShowPos { get; set; }

        /// <summary> 显示位置</summary>
        public uint dwCanel { get; set; }

        /// <summary> 主动取消</summary>
        public string strDesc { get; set; }

        /// <summary> 描述</summary>
        public uint forever { get; set; }

        /// <summary> 无限时间</summary>
        public uint buffBigType { get; set; }

        /// <summary> BUFF大类</summary>
        public uint buffSmallType { get; set; }

        /// <summary> BUFF小类</summary>
        public List<uint> buffEffect { get; set; }

        /// <summary> buff特效</summary>
        public uint buffRemoveEffect { get; set; }

        /// <summary> buff移除特效</summary>
        public string buffIcon { get; set; }

        /// <summary> BUFF图标</summary>
        public string effectid { get; set; }

        /// <summary> BUFF效果ID</summary>
        public string buffColor { get; set; }

    }

    /// <summary> FILE: BUFF升级表.xlsm SHEET: Sheet1 KEY: dwBuffID + dwLevel</summary>
    public partial class BuffUpgradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new BuffUpgradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return BuffUpgradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return BuffUpgradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return BuffUpgradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return BuffUpgradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return BuffUpgradeDataBase.Deserialize(buffer, (BuffUpgradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return BuffUpgradeDataBase.Deserialize(stream, (BuffUpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return BuffUpgradeDataBase.DeserializeLengthDelimited(stream, (BuffUpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return BuffUpgradeDataBase.DeserializeLength(stream, length, (BuffUpgradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { BuffUpgradeDataBase.Serialize(stream, (BuffUpgradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return BuffUpgradeDataBase.SerializeToBytes((BuffUpgradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { BuffUpgradeDataBase.SerializeLengthDelimited(stream, (BuffUpgradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwBuffID { get; set; }

        /// <summary> BuffID</summary>
        public uint dwLevel { get; set; }

        /// <summary> 等级</summary>
        public uint dwExp { get; set; }

        /// <summary> 经验</summary>
        public uint dwHpExt { get; set; }

        /// <summary> 生命附加</summary>
        public uint dwPDamExt { get; set; }

        /// <summary> 物攻附加</summary>
        public uint dwMDamExt { get; set; }

        /// <summary> 魔攻附加</summary>
        public uint dwPDefExt { get; set; }

        /// <summary> 物防附加</summary>
        public uint dwMDefExt { get; set; }

    }

    /// <summary> FILE: CangBaoTu.xlsm SHEET: Sheet1 KEY: map_id</summary>
    public partial class CangBaoTuDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CangBaoTuDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CangBaoTuDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CangBaoTuDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CangBaoTuDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CangBaoTuDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CangBaoTuDataBase.Deserialize(buffer, (CangBaoTuDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CangBaoTuDataBase.Deserialize(stream, (CangBaoTuDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CangBaoTuDataBase.DeserializeLengthDelimited(stream, (CangBaoTuDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CangBaoTuDataBase.DeserializeLength(stream, length, (CangBaoTuDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CangBaoTuDataBase.Serialize(stream, (CangBaoTuDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CangBaoTuDataBase.SerializeToBytes((CangBaoTuDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CangBaoTuDataBase.SerializeLengthDelimited(stream, (CangBaoTuDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint map_id { get; set; }

        /// <summary> 地图ID</summary>
        public uint max_level { get; set; }

        /// <summary> 最大等级</summary>
        public string goto_pos { get; set; }

        /// <summary> 跳转坐标</summary>
        public string pos_list { get; set; }

    }

    /// <summary> FILE: 剧情触发表.xlsx SHEET: 新章节开启 KEY: ID</summary>
    public partial class ChapterDabaBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ChapterDabaBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ChapterDabaBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ChapterDabaBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ChapterDabaBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ChapterDabaBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ChapterDabaBase.Deserialize(buffer, (ChapterDabaBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ChapterDabaBase.Deserialize(stream, (ChapterDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ChapterDabaBase.DeserializeLengthDelimited(stream, (ChapterDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ChapterDabaBase.DeserializeLength(stream, length, (ChapterDabaBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ChapterDabaBase.Serialize(stream, (ChapterDabaBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ChapterDabaBase.SerializeToBytes((ChapterDabaBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ChapterDabaBase.SerializeLengthDelimited(stream, (ChapterDabaBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> 章节ID</summary>
        public uint TriggerType { get; set; }

        /// <summary> 触发类型</summary>
        public uint Paramer1 { get; set; }

        /// <summary> 参数1</summary>
        public uint Paramer2 { get; set; }

        /// <summary> 参数2</summary>
        public string strTitle { get; set; }

        /// <summary> 章节</summary>
        public string strDes { get; set; }

    }

    /// <summary> FILE: 市列表.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class CityDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CityDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CityDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CityDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CityDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CityDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CityDataBase.Deserialize(buffer, (CityDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CityDataBase.Deserialize(stream, (CityDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CityDataBase.DeserializeLengthDelimited(stream, (CityDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CityDataBase.DeserializeLength(stream, length, (CityDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CityDataBase.Serialize(stream, (CityDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CityDataBase.SerializeToBytes((CityDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CityDataBase.SerializeLengthDelimited(stream, (CityDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 市ID</summary>
        public string strName { get; set; }

    }

    /// <summary> FILE: CityWar.xlsx SHEET: Sheet1 KEY: CopyId</summary>
    public partial class CityWarDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CityWarDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CityWarDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CityWarDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CityWarDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CityWarDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CityWarDataBase.Deserialize(buffer, (CityWarDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CityWarDataBase.Deserialize(stream, (CityWarDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CityWarDataBase.DeserializeLengthDelimited(stream, (CityWarDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CityWarDataBase.DeserializeLength(stream, length, (CityWarDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CityWarDataBase.Serialize(stream, (CityWarDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CityWarDataBase.SerializeToBytes((CityWarDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CityWarDataBase.SerializeLengthDelimited(stream, (CityWarDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint CopyId { get; set; }

        /// <summary> 城战ID</summary>
        public string Name { get; set; }

        /// <summary> 说明</summary>
        public string RegisterTime { get; set; }

        /// <summary> 报名时间</summary>
        public string OpenTime { get; set; }

        /// <summary> 开启时间</summary>
        public string OpenTime1 { get; set; }

        /// <summary> 开启时间1</summary>
        public string OpenTime2 { get; set; }

        /// <summary> 开启时间2</summary>
        public uint Bg { get; set; }

        /// <summary> 图片</summary>
        public string CityName { get; set; }

    }

    /// <summary> FILE: Clan信息.xlsm SHEET: 捐献 KEY: id</summary>
    public partial class ClanDonateDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ClanDonateDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ClanDonateDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ClanDonateDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ClanDonateDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ClanDonateDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ClanDonateDataBase.Deserialize(buffer, (ClanDonateDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ClanDonateDataBase.Deserialize(stream, (ClanDonateDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ClanDonateDataBase.DeserializeLengthDelimited(stream, (ClanDonateDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ClanDonateDataBase.DeserializeLength(stream, length, (ClanDonateDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ClanDonateDataBase.Serialize(stream, (ClanDonateDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ClanDonateDataBase.SerializeToBytes((ClanDonateDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ClanDonateDataBase.SerializeLengthDelimited(stream, (ClanDonateDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string donateName { get; set; }

        /// <summary> 名称</summary>
        public uint donateType { get; set; }

        /// <summary> 类型</summary>
        public uint donateNum { get; set; }

        /// <summary> 捐献数量</summary>
        public uint reputation { get; set; }

        /// <summary> 声望</summary>
        public uint clanSp { get; set; }

        /// <summary> 族贡</summary>
        public uint money { get; set; }

        /// <summary> 资金</summary>
        public uint times { get; set; }

    }

    /// <summary> FILE: Clan信息.xlsm SHEET: 职位命名 KEY: job</summary>
    public partial class ClanDutyNameDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ClanDutyNameDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ClanDutyNameDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ClanDutyNameDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ClanDutyNameDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ClanDutyNameDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ClanDutyNameDataBase.Deserialize(buffer, (ClanDutyNameDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ClanDutyNameDataBase.Deserialize(stream, (ClanDutyNameDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ClanDutyNameDataBase.DeserializeLengthDelimited(stream, (ClanDutyNameDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ClanDutyNameDataBase.DeserializeLength(stream, length, (ClanDutyNameDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ClanDutyNameDataBase.Serialize(stream, (ClanDutyNameDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ClanDutyNameDataBase.SerializeToBytes((ClanDutyNameDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ClanDutyNameDataBase.SerializeLengthDelimited(stream, (ClanDutyNameDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint job { get; set; }

        /// <summary> 职阶</summary>
        public string name { get; set; }

    }

    /// <summary> FILE: Clan信息.xlsm SHEET: 职位权限 KEY: job</summary>
    public partial class ClanDutyPermDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ClanDutyPermDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ClanDutyPermDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ClanDutyPermDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ClanDutyPermDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ClanDutyPermDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ClanDutyPermDataBase.Deserialize(buffer, (ClanDutyPermDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ClanDutyPermDataBase.Deserialize(stream, (ClanDutyPermDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ClanDutyPermDataBase.DeserializeLengthDelimited(stream, (ClanDutyPermDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ClanDutyPermDataBase.DeserializeLength(stream, length, (ClanDutyPermDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ClanDutyPermDataBase.Serialize(stream, (ClanDutyPermDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ClanDutyPermDataBase.SerializeToBytes((ClanDutyPermDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ClanDutyPermDataBase.SerializeLengthDelimited(stream, (ClanDutyPermDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint job { get; set; }

        /// <summary> 职阶</summary>
        public uint broadcastGG { get; set; }

        /// <summary> 发布公告</summary>
        public uint upgrade { get; set; }

        /// <summary> 建造</summary>
        public uint agreeApply { get; set; }

        /// <summary> 同意加入</summary>
        public uint appointment { get; set; }

        /// <summary> 任免</summary>
        public uint broadcastMsg { get; set; }

        /// <summary> 群发消息</summary>
        public uint expel { get; set; }

    }

    /// <summary> FILE: Clan信息.xlsm SHEET: 成员 KEY: lv</summary>
    public partial class ClanMemberDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ClanMemberDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ClanMemberDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ClanMemberDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ClanMemberDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ClanMemberDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ClanMemberDataBase.Deserialize(buffer, (ClanMemberDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ClanMemberDataBase.Deserialize(stream, (ClanMemberDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ClanMemberDataBase.DeserializeLengthDelimited(stream, (ClanMemberDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ClanMemberDataBase.DeserializeLength(stream, length, (ClanMemberDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ClanMemberDataBase.Serialize(stream, (ClanMemberDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ClanMemberDataBase.SerializeToBytes((ClanMemberDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ClanMemberDataBase.SerializeLengthDelimited(stream, (ClanMemberDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint lv { get; set; }

        /// <summary> 氏族等级</summary>
        public string duty { get; set; }

        /// <summary> 职阶</summary>
        public string dutyNum { get; set; }

        /// <summary> 职阶数量</summary>
        public string dutyName { get; set; }

        /// <summary> 职位名称</summary>
        public uint memberNum { get; set; }

        /// <summary> 成员数量</summary>
        public uint CostPerDay { get; set; }

        /// <summary> 每日消耗族贡</summary>
        public uint costfund { get; set; }

    }

    /// <summary> FILE: Clan信息.xlsm SHEET: 技能 KEY: skillID + lv</summary>
    public partial class ClanSkillDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ClanSkillDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ClanSkillDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ClanSkillDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ClanSkillDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ClanSkillDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ClanSkillDataBase.Deserialize(buffer, (ClanSkillDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ClanSkillDataBase.Deserialize(stream, (ClanSkillDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ClanSkillDataBase.DeserializeLengthDelimited(stream, (ClanSkillDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ClanSkillDataBase.DeserializeLength(stream, length, (ClanSkillDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ClanSkillDataBase.Serialize(stream, (ClanSkillDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ClanSkillDataBase.SerializeToBytes((ClanSkillDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ClanSkillDataBase.SerializeLengthDelimited(stream, (ClanSkillDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint skillID { get; set; }

        /// <summary> SkillID</summary>
        public uint lv { get; set; }

        /// <summary> 等级</summary>
        public uint needClanLv { get; set; }

        /// <summary> 解锁需要氏族等级</summary>
        public uint costZG { get; set; }

        /// <summary> 解锁消耗族贡</summary>
        public uint coseZJ { get; set; }

    }

    /// <summary> FILE: Clan信息.xlsm SHEET: 升级 KEY: lv</summary>
    public partial class ClanUpgradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ClanUpgradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ClanUpgradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ClanUpgradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ClanUpgradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ClanUpgradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ClanUpgradeDataBase.Deserialize(buffer, (ClanUpgradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ClanUpgradeDataBase.Deserialize(stream, (ClanUpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ClanUpgradeDataBase.DeserializeLengthDelimited(stream, (ClanUpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ClanUpgradeDataBase.DeserializeLength(stream, length, (ClanUpgradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ClanUpgradeDataBase.Serialize(stream, (ClanUpgradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ClanUpgradeDataBase.SerializeToBytes((ClanUpgradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ClanUpgradeDataBase.SerializeLengthDelimited(stream, (ClanUpgradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint lv { get; set; }

        /// <summary> 等级</summary>
        public uint buildLv { get; set; }

        /// <summary> 升级所需建设度</summary>
        public uint clanMoney { get; set; }

        /// <summary> 升级所需氏族资金</summary>
        public uint costItem1 { get; set; }

        /// <summary> 材料1ID</summary>
        public uint costItemNum1 { get; set; }

        /// <summary> 材料1数量</summary>
        public uint costItem2 { get; set; }

        /// <summary> 材料2ID</summary>
        public uint costItemNum2 { get; set; }

        /// <summary> 材料2数量</summary>
        public uint costItem3 { get; set; }

        /// <summary> 材料3ID</summary>
        public uint costItemNum3 { get; set; }

        /// <summary> 材料3数量</summary>
        public uint costItem4 { get; set; }

        /// <summary> 材料4ID</summary>
        public uint costItemNum4 { get; set; }

    }

    /// <summary> FILE: welfare福利.xlsm SHEET: 集字映射数据 KEY: ID</summary>
    public partial class CollectWordDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CollectWordDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CollectWordDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CollectWordDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CollectWordDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CollectWordDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CollectWordDataBase.Deserialize(buffer, (CollectWordDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CollectWordDataBase.Deserialize(stream, (CollectWordDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CollectWordDataBase.DeserializeLengthDelimited(stream, (CollectWordDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CollectWordDataBase.DeserializeLength(stream, length, (CollectWordDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CollectWordDataBase.Serialize(stream, (CollectWordDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CollectWordDataBase.SerializeToBytes((CollectWordDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CollectWordDataBase.SerializeLengthDelimited(stream, (CollectWordDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string rewardsList { get; set; }

        /// <summary> 兑换列表</summary>
        public uint type { get; set; }

        /// <summary> 兑换限制类型</summary>
        public uint times { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 颜色套装 KEY: level</summary>
    public partial class ColorSuitDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ColorSuitDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ColorSuitDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ColorSuitDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ColorSuitDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ColorSuitDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ColorSuitDataBase.Deserialize(buffer, (ColorSuitDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ColorSuitDataBase.Deserialize(stream, (ColorSuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ColorSuitDataBase.DeserializeLengthDelimited(stream, (ColorSuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ColorSuitDataBase.DeserializeLength(stream, length, (ColorSuitDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ColorSuitDataBase.Serialize(stream, (ColorSuitDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ColorSuitDataBase.SerializeToBytes((ColorSuitDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ColorSuitDataBase.SerializeLengthDelimited(stream, (ColorSuitDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint level { get; set; }

        /// <summary> 等级</summary>
        public uint equip_num { get; set; }

        /// <summary> 件数</summary>
        public uint grade { get; set; }

        /// <summary> 档次</summary>
        public uint color { get; set; }

        /// <summary> 颜色</summary>
        public uint effect_id { get; set; }

        /// <summary> Effectid</summary>
        public uint fight_power { get; set; }

        /// <summary> 战斗力</summary>
        public string Des { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 罗盘 KEY: dwID</summary>
    public partial class CompassDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CompassDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CompassDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CompassDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CompassDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CompassDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CompassDataBase.Deserialize(buffer, (CompassDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CompassDataBase.Deserialize(stream, (CompassDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CompassDataBase.DeserializeLengthDelimited(stream, (CompassDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CompassDataBase.DeserializeLength(stream, length, (CompassDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CompassDataBase.Serialize(stream, (CompassDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CompassDataBase.SerializeToBytes((CompassDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CompassDataBase.SerializeLengthDelimited(stream, (CompassDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 罗盘道具ID</summary>
        public uint probability1 { get; set; }

        /// <summary> 概率1</summary>
        public uint mineID1 { get; set; }

        /// <summary> 矿产1ID</summary>
        public uint minNum1 { get; set; }

        /// <summary> 数量下限1</summary>
        public uint maxNum1 { get; set; }

        /// <summary> 数量上限1</summary>
        public uint probability2 { get; set; }

        /// <summary> 概率2</summary>
        public uint mineID2 { get; set; }

        /// <summary> 矿产2ID</summary>
        public uint minNum2 { get; set; }

        /// <summary> 数量下限2</summary>
        public uint maxNum2 { get; set; }

        /// <summary> 数量上限2</summary>
        public uint probability3 { get; set; }

        /// <summary> 概率3</summary>
        public uint mineID3 { get; set; }

        /// <summary> 矿产3ID</summary>
        public uint minNum3 { get; set; }

        /// <summary> 数量下限3</summary>
        public uint maxNum3 { get; set; }

    }

    /// <summary> FILE: compose合成.xlsx SHEET: Sheet1 KEY: id</summary>
    public partial class ComposeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ComposeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ComposeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ComposeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ComposeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ComposeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ComposeDataBase.Deserialize(buffer, (ComposeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ComposeDataBase.Deserialize(stream, (ComposeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ComposeDataBase.DeserializeLengthDelimited(stream, (ComposeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ComposeDataBase.DeserializeLength(stream, length, (ComposeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ComposeDataBase.Serialize(stream, (ComposeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ComposeDataBase.SerializeToBytes((ComposeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ComposeDataBase.SerializeLengthDelimited(stream, (ComposeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public uint needShow { get; set; }

        /// <summary> 是否显示</summary>
        public uint nextId { get; set; }

        /// <summary> 下一级ID</summary>
        public uint fType { get; set; }

        /// <summary> 一级分类ID</summary>
        public string fTypeName { get; set; }

        /// <summary> 一级分类名</summary>
        public uint sType { get; set; }

        /// <summary> 二级分类ID</summary>
        public string sTypeName { get; set; }

        /// <summary> 二级分类名</summary>
        public uint moneyType { get; set; }

        /// <summary> 合成费用货币类型</summary>
        public uint costMoney { get; set; }

        /// <summary> 费用价格</summary>
        public uint costItem1 { get; set; }

        /// <summary> 材料道具1ID</summary>
        public uint costNum1 { get; set; }

        /// <summary> 材料道具1数量</summary>
        public uint costItem2 { get; set; }

        /// <summary> 材料道具2ID</summary>
        public uint costNum2 { get; set; }

        /// <summary> 材料道具2数量</summary>
        public uint costItem3 { get; set; }

        /// <summary> 材料道具3ID</summary>
        public uint costNum3 { get; set; }

        /// <summary> 材料道具3数量</summary>
        public uint costItem4 { get; set; }

        /// <summary> 材料道具4ID</summary>
        public uint costNum4 { get; set; }

        /// <summary> 材料道具4数量</summary>
        public uint costItem5 { get; set; }

        /// <summary> 材料道具5ID</summary>
        public uint costNum5 { get; set; }

    }

    /// <summary> FILE: Sale表格.xlsm SHEET: 可售物品 KEY: ID</summary>
    public partial class ConsignmentCanSellItem : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ConsignmentCanSellItem(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ConsignmentCanSellItem.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ConsignmentCanSellItem.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ConsignmentCanSellItem.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ConsignmentCanSellItem.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ConsignmentCanSellItem.Deserialize(buffer, (ConsignmentCanSellItem)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ConsignmentCanSellItem.Deserialize(stream, (ConsignmentCanSellItem)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ConsignmentCanSellItem.DeserializeLengthDelimited(stream, (ConsignmentCanSellItem)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ConsignmentCanSellItem.DeserializeLength(stream, length, (ConsignmentCanSellItem)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ConsignmentCanSellItem.Serialize(stream, (ConsignmentCanSellItem)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ConsignmentCanSellItem.SerializeToBytes((ConsignmentCanSellItem)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ConsignmentCanSellItem.SerializeLengthDelimited(stream, (ConsignmentCanSellItem)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> 物品ID</summary>
        public string Name { get; set; }

        /// <summary> 名称</summary>
        public uint FirstType { get; set; }

        /// <summary> 大类ID</summary>
        public uint SecondTyoe { get; set; }

        /// <summary> 细类ID</summary>
        public uint MinMoney { get; set; }

        /// <summary> 金币定价下限</summary>
        public uint MaxMoney { get; set; }

        /// <summary> 金币定价上限</summary>
        public uint MinYuanBao { get; set; }

        /// <summary> 元宝定价下限</summary>
        public uint MaxYuanBao { get; set; }

        /// <summary> 元宝定价上限</summary>
        public uint Factorage { get; set; }

    }

    /// <summary> FILE: Sale表格.xlsm SHEET: 分类登记 KEY: ID + SubID</summary>
    public partial class ConsignmentCateIDConf : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ConsignmentCateIDConf(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ConsignmentCateIDConf.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ConsignmentCateIDConf.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ConsignmentCateIDConf.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ConsignmentCateIDConf.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ConsignmentCateIDConf.Deserialize(buffer, (ConsignmentCateIDConf)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ConsignmentCateIDConf.Deserialize(stream, (ConsignmentCateIDConf)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ConsignmentCateIDConf.DeserializeLengthDelimited(stream, (ConsignmentCateIDConf)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ConsignmentCateIDConf.DeserializeLength(stream, length, (ConsignmentCateIDConf)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ConsignmentCateIDConf.Serialize(stream, (ConsignmentCateIDConf)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ConsignmentCateIDConf.SerializeToBytes((ConsignmentCateIDConf)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ConsignmentCateIDConf.SerializeLengthDelimited(stream, (ConsignmentCateIDConf)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> 大类ID</summary>
        public string Name { get; set; }

        /// <summary> 名称</summary>
        public uint SubID { get; set; }

        /// <summary> 细类ID</summary>
        public string SubName { get; set; }

        /// <summary> 细类名称</summary>
        public uint FilterID1 { get; set; }

        /// <summary> 筛选栏1</summary>
        public uint FilterID2 { get; set; }

    }

    /// <summary> FILE: Sale表格.xlsm SHEET: 筛选项目 KEY: ID</summary>
    public partial class ConsignmentFilterConf : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ConsignmentFilterConf(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ConsignmentFilterConf.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ConsignmentFilterConf.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ConsignmentFilterConf.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ConsignmentFilterConf.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ConsignmentFilterConf.Deserialize(buffer, (ConsignmentFilterConf)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ConsignmentFilterConf.Deserialize(stream, (ConsignmentFilterConf)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ConsignmentFilterConf.DeserializeLengthDelimited(stream, (ConsignmentFilterConf)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ConsignmentFilterConf.DeserializeLength(stream, length, (ConsignmentFilterConf)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ConsignmentFilterConf.Serialize(stream, (ConsignmentFilterConf)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ConsignmentFilterConf.SerializeToBytes((ConsignmentFilterConf)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ConsignmentFilterConf.SerializeLengthDelimited(stream, (ConsignmentFilterConf)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string Filters { get; set; }

    }

    /// <summary> FILE: Copy.xlsm SHEET: 副本 KEY: copyId</summary>
    public partial class CopyDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CopyDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CopyDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CopyDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CopyDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CopyDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CopyDataBase.Deserialize(buffer, (CopyDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CopyDataBase.Deserialize(stream, (CopyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CopyDataBase.DeserializeLengthDelimited(stream, (CopyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CopyDataBase.DeserializeLength(stream, length, (CopyDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CopyDataBase.Serialize(stream, (CopyDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CopyDataBase.SerializeToBytes((CopyDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CopyDataBase.SerializeLengthDelimited(stream, (CopyDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint copyId { get; set; }

        /// <summary> 副本ID</summary>
        public string copyName { get; set; }

        /// <summary> 副本名称</summary>
        public uint mapId { get; set; }

        /// <summary> 地图ID</summary>
        public bool bAreaTrigger { get; set; }

        /// <summary> 是否区域触发</summary>
        public uint copyType { get; set; }

        /// <summary> 副本类型</summary>
        public uint clientCopyType { get; set; }

        /// <summary> 客户端类型</summary>
        public uint copyFlag { get; set; }

        /// <summary> 副本标签</summary>
        public uint copySubFlag { get; set; }

        /// <summary> 子类</summary>
        public uint membType { get; set; }

        /// <summary> 成员类型</summary>
        public uint openLv { get; set; }

        /// <summary> 开放等级</summary>
        public uint keepTime { get; set; }

        /// <summary> 存在时间</summary>
        public uint closeTime { get; set; }

        /// <summary> 副本无人后关闭时间</summary>
        public uint staNumType { get; set; }

        /// <summary> 次数统计类型</summary>
        public uint recNumType { get; set; }

        /// <summary> 次数记录方式</summary>
        public uint forbitWhat { get; set; }

        /// <summary> 次数限制功能</summary>
        public uint numMax { get; set; }

        /// <summary> 次数最大值</summary>
        public uint resNumLimit { get; set; }

        /// <summary> 复活次数限制</summary>
        public string timeLimit { get; set; }

        /// <summary> 时间段</summary>
        public string useItem { get; set; }

        /// <summary> 进入收取道具</summary>
        public string des { get; set; }

        /// <summary> 文字说明</summary>
        public string dropDes { get; set; }

        /// <summary> 物品掉落</summary>
        public uint TeamActivityID { get; set; }

        /// <summary> 组队活动ID</summary>
        public string strIcon { get; set; }

        /// <summary> 图片资源</summary>
        public bool IsShowFinish { get; set; }

        /// <summary> 副本完成标示</summary>
        public bool IsAutoFight { get; set; }

        /// <summary> 是否自动战斗</summary>
        public uint copyLeftShowType { get; set; }

        /// <summary> 是否显示副本左侧提示</summary>
        public bool bSingleShow { get; set; }

        /// <summary> 单独显示</summary>
        public bool bShowCopyTarget { get; set; }

        /// <summary> 切换副本目标</summary>
        public uint guideId { get; set; }

        /// <summary> 引导ID</summary>
        public uint havePassReward { get; set; }

        /// <summary> 通关奖励</summary>
        public string rewardList { get; set; }

    }

    /// <summary> FILE: Copy.xlsm SHEET: 目标显示 KEY: copyId + waveId</summary>
    public partial class CopyDisplayDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CopyDisplayDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CopyDisplayDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CopyDisplayDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CopyDisplayDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CopyDisplayDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CopyDisplayDataBase.Deserialize(buffer, (CopyDisplayDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CopyDisplayDataBase.Deserialize(stream, (CopyDisplayDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CopyDisplayDataBase.DeserializeLengthDelimited(stream, (CopyDisplayDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CopyDisplayDataBase.DeserializeLength(stream, length, (CopyDisplayDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CopyDisplayDataBase.Serialize(stream, (CopyDisplayDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CopyDisplayDataBase.SerializeToBytes((CopyDisplayDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CopyDisplayDataBase.SerializeLengthDelimited(stream, (CopyDisplayDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint copyId { get; set; }

        /// <summary> 副本ID</summary>
        public uint waveId { get; set; }

        /// <summary> 波数</summary>
        public string des { get; set; }

    }

    /// <summary> FILE: Copy.xlsm SHEET: 副本目标 KEY: copyId + waveId</summary>
    public partial class CopyTargetDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CopyTargetDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CopyTargetDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CopyTargetDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CopyTargetDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CopyTargetDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CopyTargetDataBase.Deserialize(buffer, (CopyTargetDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CopyTargetDataBase.Deserialize(stream, (CopyTargetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CopyTargetDataBase.DeserializeLengthDelimited(stream, (CopyTargetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CopyTargetDataBase.DeserializeLength(stream, length, (CopyTargetDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CopyTargetDataBase.Serialize(stream, (CopyTargetDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CopyTargetDataBase.SerializeToBytes((CopyTargetDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CopyTargetDataBase.SerializeLengthDelimited(stream, (CopyTargetDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint waveId { get; set; }

        /// <summary> 波数</summary>
        public uint waveType { get; set; }

        /// <summary> 波数小类</summary>
        public uint stepId { get; set; }

        /// <summary> 阶段</summary>
        public string stepName { get; set; }

        /// <summary> 阶段名称</summary>
        public uint copyId { get; set; }

        /// <summary> 副本ID</summary>
        public string copyName { get; set; }

        /// <summary> 副本</summary>
        public string waveName { get; set; }

        /// <summary> 文字说明</summary>
        public string completeWaveName { get; set; }

        /// <summary> 完成文字说明</summary>
        public string waveListStr { get; set; }

        /// <summary> 波数列表</summary>
        public uint npcId { get; set; }

        /// <summary> 寻路ID</summary>
        public uint mapId { get; set; }

    }

    /// <summary> FILE: Copy.xlsm SHEET: 副本引导 KEY: Id</summary>
    public partial class CopyTargetGuideDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CopyTargetGuideDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CopyTargetGuideDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CopyTargetGuideDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CopyTargetGuideDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CopyTargetGuideDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CopyTargetGuideDataBase.Deserialize(buffer, (CopyTargetGuideDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CopyTargetGuideDataBase.Deserialize(stream, (CopyTargetGuideDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CopyTargetGuideDataBase.DeserializeLengthDelimited(stream, (CopyTargetGuideDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CopyTargetGuideDataBase.DeserializeLength(stream, length, (CopyTargetGuideDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CopyTargetGuideDataBase.Serialize(stream, (CopyTargetGuideDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CopyTargetGuideDataBase.SerializeToBytes((CopyTargetGuideDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CopyTargetGuideDataBase.SerializeLengthDelimited(stream, (CopyTargetGuideDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint Id { get; set; }

        /// <summary> ID</summary>
        public string guideStr { get; set; }

        /// <summary> 文字</summary>
        public string guideIcon { get; set; }

        /// <summary> 头像</summary>
        public uint time { get; set; }

    }

    /// <summary> FILE: 任务活动表.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class CountryBuffBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new CountryBuffBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return CountryBuffBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return CountryBuffBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return CountryBuffBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return CountryBuffBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return CountryBuffBase.Deserialize(buffer, (CountryBuffBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return CountryBuffBase.Deserialize(stream, (CountryBuffBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return CountryBuffBase.DeserializeLengthDelimited(stream, (CountryBuffBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return CountryBuffBase.DeserializeLength(stream, length, (CountryBuffBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { CountryBuffBase.Serialize(stream, (CountryBuffBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return CountryBuffBase.SerializeToBytes((CountryBuffBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { CountryBuffBase.SerializeLengthDelimited(stream, (CountryBuffBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint dwtype { get; set; }

        /// <summary> 类型</summary>
        public uint dwTime { get; set; }

        /// <summary> 无限时间</summary>
        public uint dwIcon { get; set; }

        /// <summary> 图标编号</summary>
        public uint dwIconGrp { get; set; }

        /// <summary> 图标组</summary>
        public string strExplain { get; set; }

    }

    /// <summary> FILE: Answer答题.xlsx SHEET: Sheet1 KEY: ID</summary>
    public partial class DailyAnswerDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new DailyAnswerDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return DailyAnswerDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return DailyAnswerDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return DailyAnswerDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return DailyAnswerDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return DailyAnswerDatabase.Deserialize(buffer, (DailyAnswerDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return DailyAnswerDatabase.Deserialize(stream, (DailyAnswerDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return DailyAnswerDatabase.DeserializeLengthDelimited(stream, (DailyAnswerDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return DailyAnswerDatabase.DeserializeLength(stream, length, (DailyAnswerDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { DailyAnswerDatabase.Serialize(stream, (DailyAnswerDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return DailyAnswerDatabase.SerializeToBytes((DailyAnswerDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { DailyAnswerDatabase.SerializeLengthDelimited(stream, (DailyAnswerDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string question { get; set; }

        /// <summary> 题目</summary>
        public string answer1 { get; set; }

        /// <summary> 选项1</summary>
        public string answer2 { get; set; }

        /// <summary> 选项2</summary>
        public string answer3 { get; set; }

        /// <summary> 选项3</summary>
        public string answer4 { get; set; }

    }

    /// <summary> FILE: Daily表格.xlsm SHEET: Sheet2 KEY: ID</summary>
    public partial class DailyAwardDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new DailyAwardDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return DailyAwardDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return DailyAwardDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return DailyAwardDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return DailyAwardDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return DailyAwardDataBase.Deserialize(buffer, (DailyAwardDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return DailyAwardDataBase.Deserialize(stream, (DailyAwardDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return DailyAwardDataBase.DeserializeLengthDelimited(stream, (DailyAwardDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return DailyAwardDataBase.DeserializeLength(stream, length, (DailyAwardDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { DailyAwardDataBase.Serialize(stream, (DailyAwardDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return DailyAwardDataBase.SerializeToBytes((DailyAwardDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { DailyAwardDataBase.SerializeLengthDelimited(stream, (DailyAwardDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint liveness { get; set; }

        /// <summary> 活跃</summary>
        public uint gold { get; set; }

        /// <summary> 奖励金币</summary>
        public uint ticket { get; set; }

        /// <summary> 奖励文钱</summary>
        public string awarditem { get; set; }

        /// <summary> 奖励道具</summary>
        public uint Exp { get; set; }

        /// <summary> 奖励经验</summary>
        public string closeicon { get; set; }

        /// <summary> 未开启宝箱ICON</summary>
        public string openicon { get; set; }

        /// <summary> 已开启宝箱ICON</summary>
        public string BgIcon { get; set; }

    }

    /// <summary> FILE: Daily表格.xlsm SHEET: Sheet4 KEY: dayIndex</summary>
    public partial class DailyCalendarDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new DailyCalendarDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return DailyCalendarDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return DailyCalendarDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return DailyCalendarDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return DailyCalendarDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return DailyCalendarDataBase.Deserialize(buffer, (DailyCalendarDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return DailyCalendarDataBase.Deserialize(stream, (DailyCalendarDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return DailyCalendarDataBase.DeserializeLengthDelimited(stream, (DailyCalendarDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return DailyCalendarDataBase.DeserializeLength(stream, length, (DailyCalendarDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { DailyCalendarDataBase.Serialize(stream, (DailyCalendarDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return DailyCalendarDataBase.SerializeToBytes((DailyCalendarDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { DailyCalendarDataBase.SerializeLengthDelimited(stream, (DailyCalendarDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dayIndex { get; set; }

        /// <summary> 周历</summary>
        public string active { get; set; }

    }

    /// <summary> FILE: Daily表格.xlsm SHEET: Sheet1 KEY: id</summary>
    public partial class DailyDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new DailyDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return DailyDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return DailyDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return DailyDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return DailyDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return DailyDataBase.Deserialize(buffer, (DailyDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return DailyDataBase.Deserialize(stream, (DailyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return DailyDataBase.DeserializeLengthDelimited(stream, (DailyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return DailyDataBase.DeserializeLength(stream, length, (DailyDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { DailyDataBase.Serialize(stream, (DailyDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return DailyDataBase.SerializeToBytes((DailyDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { DailyDataBase.SerializeLengthDelimited(stream, (DailyDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> id</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public uint MaxTimes { get; set; }

        /// <summary> 最高完成次数</summary>
        public uint minLevel { get; set; }

        /// <summary> 最低等级</summary>
        public uint maxLevel { get; set; }

        /// <summary> 最高等级</summary>
        public uint recommend { get; set; }

        /// <summary> 推荐</summary>
        public string ScheduleId { get; set; }

        /// <summary> 活动日程</summary>
        public string activityTime { get; set; }

        /// <summary> 活动时间</summary>
        public uint isTeam { get; set; }

        /// <summary> 组队</summary>
        public string description { get; set; }

        /// <summary> 日常描述</summary>
        public string awardDesc { get; set; }

        /// <summary> 奖励描述</summary>
        public string awardItem { get; set; }

        /// <summary> 奖励道具</summary>
        public string activityType { get; set; }

        /// <summary> 活动形式</summary>
        public uint activeValue { get; set; }

        /// <summary> 单次活跃奖励</summary>
        public uint MaxActive { get; set; }

        /// <summary> 活跃上限</summary>
        public uint taskID { get; set; }

        /// <summary> 任务ID</summary>
        public uint puGuaID { get; set; }

        /// <summary> 卜卦ID</summary>
        public uint jumpID { get; set; }

        /// <summary> 跳转途径</summary>
        public string icon { get; set; }

        /// <summary> icon</summary>
        public string pushIcon { get; set; }

        /// <summary> 活动推送ICON</summary>
        public uint isOpenPush { get; set; }

        /// <summary> 是否开启推送</summary>
        public uint isClosePanel { get; set; }

    }

    /// <summary> FILE: Map.xlsm SHEET: 每日试炼 KEY: dwID</summary>
    public partial class DailyTestDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new DailyTestDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return DailyTestDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return DailyTestDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return DailyTestDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return DailyTestDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return DailyTestDataBase.Deserialize(buffer, (DailyTestDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return DailyTestDataBase.Deserialize(stream, (DailyTestDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return DailyTestDataBase.DeserializeLengthDelimited(stream, (DailyTestDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return DailyTestDataBase.DeserializeLength(stream, length, (DailyTestDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { DailyTestDataBase.Serialize(stream, (DailyTestDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return DailyTestDataBase.SerializeToBytes((DailyTestDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { DailyTestDataBase.SerializeLengthDelimited(stream, (DailyTestDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public uint mapId { get; set; }

        /// <summary> 编号</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint monsterLvMin { get; set; }

        /// <summary> 怪物等级下限</summary>
        public uint monsterLvMax { get; set; }

        /// <summary> 怪物等级上限</summary>
        public uint expMultiple { get; set; }

        /// <summary> 经验倍数</summary>
        public uint TeamTargetId { get; set; }

        /// <summary> 组队目标ID</summary>
        public uint JumpId { get; set; }

        /// <summary> 跳转ID</summary>
        public uint BgTextureId { get; set; }

    }

    /// <summary> FILE: D传送阵表格.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class DeliverDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new DeliverDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return DeliverDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return DeliverDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return DeliverDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return DeliverDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return DeliverDatabase.Deserialize(buffer, (DeliverDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return DeliverDatabase.Deserialize(stream, (DeliverDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return DeliverDatabase.DeserializeLengthDelimited(stream, (DeliverDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return DeliverDatabase.DeserializeLength(stream, length, (DeliverDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { DeliverDatabase.Serialize(stream, (DeliverDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return DeliverDatabase.SerializeToBytes((DeliverDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { DeliverDatabase.SerializeLengthDelimited(stream, (DeliverDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public DeliverDatabase()
        {
            condTypeArray = new List<uint>();
            condValueArray = new List<uint>();
            pos = new List<uint>();
            destPos = new List<uint>();
        }
        public uint dwID { get; set; }

        /// <summary> 传送NPCID</summary>
        public string strDes { get; set; }

        /// <summary> 描述</summary>
        public uint dwMapID { get; set; }

        /// <summary> 地图ID</summary>
        public uint dwDestMapID { get; set; }

        /// <summary> 目标地图ID</summary>
        public List<uint> condTypeArray { get; set; }

        /// <summary> 限制条件类型</summary>
        public List<uint> condValueArray { get; set; }

        /// <summary> 限制条件值</summary>
        public List<uint> pos { get; set; }

        /// <summary> 传送阵坐标</summary>
        public List<uint> destPos { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 作用函数ID KEY: func_id</summary>
    public partial class EffectFuncDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EffectFuncDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EffectFuncDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EffectFuncDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EffectFuncDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EffectFuncDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EffectFuncDataBase.Deserialize(buffer, (EffectFuncDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EffectFuncDataBase.Deserialize(stream, (EffectFuncDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EffectFuncDataBase.DeserializeLengthDelimited(stream, (EffectFuncDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EffectFuncDataBase.DeserializeLength(stream, length, (EffectFuncDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EffectFuncDataBase.Serialize(stream, (EffectFuncDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EffectFuncDataBase.SerializeToBytes((EffectFuncDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EffectFuncDataBase.SerializeLengthDelimited(stream, (EffectFuncDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint func_id { get; set; }

        /// <summary> 作用函数ID</summary>
        public uint type { get; set; }

        /// <summary> 作用类型</summary>
        public uint aim { get; set; }

        /// <summary> 作用目标</summary>
        public uint use_cd { get; set; }

        /// <summary> 使用CD</summary>
        public uint group_cd { get; set; }

        /// <summary> 组公共CD</summary>
        public uint group_id { get; set; }

        /// <summary> 组ID</summary>
        public uint jumpId { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 装备附加属性 KEY: equipID</summary>
    public partial class EquipAddBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EquipAddBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EquipAddBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EquipAddBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EquipAddBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EquipAddBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EquipAddBase.Deserialize(buffer, (EquipAddBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EquipAddBase.Deserialize(stream, (EquipAddBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EquipAddBase.DeserializeLengthDelimited(stream, (EquipAddBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EquipAddBase.DeserializeLength(stream, length, (EquipAddBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EquipAddBase.Serialize(stream, (EquipAddBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EquipAddBase.SerializeToBytes((EquipAddBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EquipAddBase.SerializeLengthDelimited(stream, (EquipAddBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint equipID { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 合成 KEY: equipId</summary>
    public partial class EquipComposeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EquipComposeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EquipComposeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EquipComposeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EquipComposeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EquipComposeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EquipComposeDataBase.Deserialize(buffer, (EquipComposeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EquipComposeDataBase.Deserialize(stream, (EquipComposeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EquipComposeDataBase.DeserializeLengthDelimited(stream, (EquipComposeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EquipComposeDataBase.DeserializeLength(stream, length, (EquipComposeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EquipComposeDataBase.Serialize(stream, (EquipComposeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EquipComposeDataBase.SerializeToBytes((EquipComposeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EquipComposeDataBase.SerializeLengthDelimited(stream, (EquipComposeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint equipId { get; set; }

        /// <summary> 装备ID</summary>
        public uint costConey { get; set; }

        /// <summary> 消耗金钱</summary>
        public uint assistId { get; set; }

        /// <summary> 辅助道具1ID</summary>
        public uint assistNum { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 装备类 KEY: equipID</summary>
    public partial class EquipDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EquipDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EquipDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EquipDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EquipDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EquipDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EquipDataBase.Deserialize(buffer, (EquipDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EquipDataBase.Deserialize(stream, (EquipDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EquipDataBase.DeserializeLengthDelimited(stream, (EquipDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EquipDataBase.DeserializeLength(stream, length, (EquipDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EquipDataBase.Serialize(stream, (EquipDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EquipDataBase.SerializeToBytes((EquipDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EquipDataBase.SerializeLengthDelimited(stream, (EquipDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint equipID { get; set; }

        /// <summary> 装备ID</summary>
        public uint pdamMin { get; set; }

        /// <summary> 物理攻击下限</summary>
        public uint pdamMax { get; set; }

        /// <summary> 物理攻击上限</summary>
        public uint mdamMin { get; set; }

        /// <summary> 法术攻击下限</summary>
        public uint mdamMax { get; set; }

        /// <summary> 法术攻击上限</summary>
        public uint pdefMin { get; set; }

        /// <summary> 物理防御下限</summary>
        public uint pdefMax { get; set; }

        /// <summary> 物理防御上限</summary>
        public uint mdefMin { get; set; }

        /// <summary> 法术防御下限</summary>
        public uint mdefMax { get; set; }

        /// <summary> 法术防御上限</summary>
        public uint maxDurable { get; set; }

        /// <summary> 最大耐久度</summary>
        public uint apperMale { get; set; }

        /// <summary> 外观男</summary>
        public uint apperFemale { get; set; }

        /// <summary> 外观女</summary>
        public string locatorName { get; set; }

        /// <summary> 绑定点</summary>
        public uint fightPower { get; set; }

        /// <summary> 战斗力</summary>
        public uint growMask { get; set; }

        /// <summary> 养成标识</summary>
        public uint act_show { get; set; }

    }

    /// <summary> FILE: Exchange兑换.xlsm SHEET: 兑换 KEY: ID</summary>
    public partial class EquipExchangeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EquipExchangeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EquipExchangeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EquipExchangeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EquipExchangeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EquipExchangeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EquipExchangeDataBase.Deserialize(buffer, (EquipExchangeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EquipExchangeDataBase.Deserialize(stream, (EquipExchangeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EquipExchangeDataBase.DeserializeLengthDelimited(stream, (EquipExchangeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EquipExchangeDataBase.DeserializeLength(stream, length, (EquipExchangeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EquipExchangeDataBase.Serialize(stream, (EquipExchangeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EquipExchangeDataBase.SerializeToBytes((EquipExchangeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EquipExchangeDataBase.SerializeLengthDelimited(stream, (EquipExchangeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> 索引ID</summary>
        public uint fCateID { get; set; }

        /// <summary> 一级分类ID</summary>
        public string fCateName { get; set; }

        /// <summary> 一级分类名</summary>
        public uint sCateID { get; set; }

        /// <summary> 二级分类ID</summary>
        public string sCateName { get; set; }

        /// <summary> 二级分类名</summary>
        public uint targetID { get; set; }

        /// <summary> 目标道具ID</summary>
        public uint targetNum { get; set; }

        /// <summary> 目标道具数量</summary>
        public uint costID { get; set; }

        /// <summary> 消耗道具ID</summary>
        public uint costNum { get; set; }

        /// <summary> 消耗道具数量</summary>
        public uint sortID { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 精炼 KEY: equipId + refineLev</summary>
    public partial class EquipRefineDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EquipRefineDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EquipRefineDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EquipRefineDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EquipRefineDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EquipRefineDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EquipRefineDataBase.Deserialize(buffer, (EquipRefineDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EquipRefineDataBase.Deserialize(stream, (EquipRefineDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EquipRefineDataBase.DeserializeLengthDelimited(stream, (EquipRefineDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EquipRefineDataBase.DeserializeLength(stream, length, (EquipRefineDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EquipRefineDataBase.Serialize(stream, (EquipRefineDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EquipRefineDataBase.SerializeToBytes((EquipRefineDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EquipRefineDataBase.SerializeLengthDelimited(stream, (EquipRefineDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint equipId { get; set; }

        /// <summary> 装备ID</summary>
        public uint refineLev { get; set; }

        /// <summary> 精炼等级</summary>
        public string name { get; set; }

        /// <summary> 装备名称</summary>
        public uint costConey { get; set; }

        /// <summary> 消耗金币</summary>
        public uint costItem1 { get; set; }

        /// <summary> 材料1</summary>
        public uint costNum1 { get; set; }

        /// <summary> 数量1</summary>
        public uint costItem2 { get; set; }

        /// <summary> 材料2</summary>
        public uint costNum2 { get; set; }

        /// <summary> 数量2</summary>
        public uint costItem3 { get; set; }

        /// <summary> 材料3</summary>
        public uint costNum3 { get; set; }

        /// <summary> 数量3</summary>
        public uint costItem4 { get; set; }

        /// <summary> 材料4</summary>
        public uint costNum4 { get; set; }

        /// <summary> 数量4</summary>
        public uint costItem5 { get; set; }

        /// <summary> 材料5</summary>
        public uint costNum5 { get; set; }

        /// <summary> 数量5</summary>
        public uint changeProb1 { get; set; }

        /// <summary> 爆掉</summary>
        public uint changeProb2 { get; set; }

        /// <summary> 归零</summary>
        public uint changeProb3 { get; set; }

        /// <summary> 减一</summary>
        public uint changeProb4 { get; set; }

        /// <summary> 不变</summary>
        public uint changeProb5 { get; set; }

        /// <summary> 升级</summary>
        public uint assistId1 { get; set; }

        /// <summary> 辅助道具1</summary>
        public uint assistNum1 { get; set; }

        /// <summary> 辅助道具数量1</summary>
        public uint assistId2 { get; set; }

        /// <summary> 辅助道具2</summary>
        public uint assistNum2 { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 分解 KEY: id</summary>
    public partial class EquipSplitDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new EquipSplitDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return EquipSplitDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return EquipSplitDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return EquipSplitDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return EquipSplitDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return EquipSplitDataBase.Deserialize(buffer, (EquipSplitDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return EquipSplitDataBase.Deserialize(stream, (EquipSplitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return EquipSplitDataBase.DeserializeLengthDelimited(stream, (EquipSplitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return EquipSplitDataBase.DeserializeLength(stream, length, (EquipSplitDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { EquipSplitDataBase.Serialize(stream, (EquipSplitDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return EquipSplitDataBase.SerializeToBytes((EquipSplitDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { EquipSplitDataBase.SerializeLengthDelimited(stream, (EquipSplitDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 装备ID</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint splitGetMoney { get; set; }

        /// <summary> 分解返还金钱</summary>
        public uint splitGetItem { get; set; }

        /// <summary> 分解道具</summary>
        public uint splitGetItemNum { get; set; }

    }

    /// <summary> FILE: welfare福利.xlsm SHEET: 首充 KEY: ID</summary>
    public partial class FirstRechargeRewardDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new FirstRechargeRewardDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return FirstRechargeRewardDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return FirstRechargeRewardDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return FirstRechargeRewardDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return FirstRechargeRewardDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return FirstRechargeRewardDataBase.Deserialize(buffer, (FirstRechargeRewardDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return FirstRechargeRewardDataBase.Deserialize(stream, (FirstRechargeRewardDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return FirstRechargeRewardDataBase.DeserializeLengthDelimited(stream, (FirstRechargeRewardDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return FirstRechargeRewardDataBase.DeserializeLength(stream, length, (FirstRechargeRewardDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { FirstRechargeRewardDataBase.Serialize(stream, (FirstRechargeRewardDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return FirstRechargeRewardDataBase.SerializeToBytes((FirstRechargeRewardDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { FirstRechargeRewardDataBase.SerializeLengthDelimited(stream, (FirstRechargeRewardDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string name { get; set; }

        /// <summary> 描述</summary>
        public string rewards { get; set; }

        /// <summary> 奖励列表</summary>
        public uint jumpID { get; set; }

    }

    /// <summary> FILE: Fishing.xlsm SHEET: Sheet2 KEY: dwID</summary>
    public partial class FishingDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new FishingDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return FishingDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return FishingDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return FishingDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return FishingDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return FishingDataBase.Deserialize(buffer, (FishingDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return FishingDataBase.Deserialize(stream, (FishingDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return FishingDataBase.DeserializeLengthDelimited(stream, (FishingDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return FishingDataBase.DeserializeLength(stream, length, (FishingDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { FishingDataBase.Serialize(stream, (FishingDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return FishingDataBase.SerializeToBytes((FishingDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { FishingDataBase.SerializeLengthDelimited(stream, (FishingDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 鱼ID</summary>
        public string strName { get; set; }

        /// <summary> 说明</summary>
        public string icon { get; set; }

        /// <summary> 图标</summary>
        public uint score { get; set; }

        /// <summary> 对应积分</summary>
        public uint upTime { get; set; }

        /// <summary> 收杆秒数</summary>
        public uint pointerRange { get; set; }

        /// <summary> 加成区域度数</summary>
        public string pointerAddStr { get; set; }

        /// <summary> 指针加成概率</summary>
        public uint borderId { get; set; }

        /// <summary> 品质</summary>
        public float ArcTime { get; set; }

    }

    /// <summary> FILE: Effect_特效资源.xlsm SHEET: 序列帧动画特效 KEY: ID</summary>
    public partial class FrameEffectDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new FrameEffectDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return FrameEffectDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return FrameEffectDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return FrameEffectDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return FrameEffectDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return FrameEffectDataBase.Deserialize(buffer, (FrameEffectDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return FrameEffectDataBase.Deserialize(stream, (FrameEffectDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return FrameEffectDataBase.DeserializeLengthDelimited(stream, (FrameEffectDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return FrameEffectDataBase.DeserializeLength(stream, length, (FrameEffectDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { FrameEffectDataBase.Serialize(stream, (FrameEffectDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return FrameEffectDataBase.SerializeToBytes((FrameEffectDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { FrameEffectDataBase.SerializeLengthDelimited(stream, (FrameEffectDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string atlasName { get; set; }

        /// <summary> 图集名称</summary>
        public string icon_size { get; set; }

        /// <summary> 图片大小</summary>
        public uint rate { get; set; }

        /// <summary> 帧速</summary>
        public string icon_prefix { get; set; }

        /// <summary> 图片前缀</summary>
        public uint loop { get; set; }

        /// <summary> 循环设置</summary>
        public uint pixel_snap { get; set; }

        /// <summary> 像素设置</summary>
        public string default_icon { get; set; }

    }

    /// <summary> FILE: Effect_特效资源.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class FxResDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new FxResDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return FxResDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return FxResDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return FxResDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return FxResDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return FxResDataBase.Deserialize(buffer, (FxResDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return FxResDataBase.Deserialize(stream, (FxResDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return FxResDataBase.DeserializeLengthDelimited(stream, (FxResDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return FxResDataBase.DeserializeLength(stream, length, (FxResDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { FxResDataBase.Serialize(stream, (FxResDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return FxResDataBase.SerializeToBytes((FxResDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { FxResDataBase.SerializeLengthDelimited(stream, (FxResDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public FxResDataBase()
        {
            offset = new List<float>();
            rideoffset = new List<float>();
            rotate = new List<float>();
        }
        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string targetAniName { get; set; }

        /// <summary> 目标播放动作</summary>
        public int playAniTime { get; set; }

        /// <summary> 动作播放次数</summary>
        public uint resPath { get; set; }

        /// <summary> 资源路径</summary>
        public uint flowType { get; set; }

        /// <summary> 跟随方式</summary>
        public uint effectTarget { get; set; }

        /// <summary> 目标</summary>
        public uint playAudio { get; set; }

        /// <summary> 目标播放音效</summary>
        public uint skillID { get; set; }

        /// <summary> 技能编号</summary>
        public uint delayTime { get; set; }

        /// <summary> 延时时间</summary>
        public string attachNode { get; set; }

        /// <summary> 挂接点</summary>
        public List<float> offset { get; set; }

        /// <summary> 偏移位置</summary>
        public List<float> rideoffset { get; set; }

        /// <summary> 坐骑偏移位置</summary>
        public List<float> rotate { get; set; }

        /// <summary> 旋转</summary>
        public bool bFollowRole { get; set; }

    }

    /// <summary> FILE: 游戏全局配置.xlsm SHEET: Sheet1 KEY: TableID</summary>
    public partial class GameGlobalConfig : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GameGlobalConfig(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GameGlobalConfig.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GameGlobalConfig.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GameGlobalConfig.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GameGlobalConfig.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GameGlobalConfig.Deserialize(buffer, (GameGlobalConfig)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GameGlobalConfig.Deserialize(stream, (GameGlobalConfig)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GameGlobalConfig.DeserializeLengthDelimited(stream, (GameGlobalConfig)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GameGlobalConfig.DeserializeLength(stream, length, (GameGlobalConfig)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GameGlobalConfig.Serialize(stream, (GameGlobalConfig)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GameGlobalConfig.SerializeToBytes((GameGlobalConfig)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GameGlobalConfig.SerializeLengthDelimited(stream, (GameGlobalConfig)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint TableID { get; set; }

        /// <summary> 编号</summary>
        public string GameName { get; set; }

        /// <summary> 游戏名称</summary>
        public uint GameID { get; set; }

        /// <summary> 游戏ID</summary>
        public string LoginSeverIP { get; set; }

        /// <summary> 登录IP</summary>
        public uint LoginSeverPort { get; set; }

        /// <summary> 登录端口</summary>
        public uint ZoneID { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 宝石合成 KEY: gemId</summary>
    public partial class GemComposeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GemComposeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GemComposeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GemComposeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GemComposeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GemComposeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GemComposeDataBase.Deserialize(buffer, (GemComposeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GemComposeDataBase.Deserialize(stream, (GemComposeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GemComposeDataBase.DeserializeLengthDelimited(stream, (GemComposeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GemComposeDataBase.DeserializeLength(stream, length, (GemComposeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GemComposeDataBase.Serialize(stream, (GemComposeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GemComposeDataBase.SerializeToBytes((GemComposeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GemComposeDataBase.SerializeLengthDelimited(stream, (GemComposeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint gemId { get; set; }

        /// <summary> 宝石ID</summary>
        public string name { get; set; }

        /// <summary> 宝石名称</summary>
        public uint gemType { get; set; }

        /// <summary> 类型</summary>
        public uint needNum { get; set; }

        /// <summary> 合成数量</summary>
        public uint costConey { get; set; }

        /// <summary> 消耗金钱</summary>
        public uint nextGemBaseId { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 宝石属性 KEY: gemId</summary>
    public partial class GemPropertyDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GemPropertyDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GemPropertyDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GemPropertyDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GemPropertyDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GemPropertyDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GemPropertyDataBase.Deserialize(buffer, (GemPropertyDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GemPropertyDataBase.Deserialize(stream, (GemPropertyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GemPropertyDataBase.DeserializeLengthDelimited(stream, (GemPropertyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GemPropertyDataBase.DeserializeLength(stream, length, (GemPropertyDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GemPropertyDataBase.Serialize(stream, (GemPropertyDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GemPropertyDataBase.SerializeToBytes((GemPropertyDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GemPropertyDataBase.SerializeLengthDelimited(stream, (GemPropertyDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint gemId { get; set; }

        /// <summary> 宝石ID</summary>
        public uint effectId { get; set; }

        /// <summary> effectid</summary>
        public uint fightPower { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 宝石套装 KEY: level</summary>
    public partial class GemSuitDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GemSuitDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GemSuitDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GemSuitDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GemSuitDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GemSuitDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GemSuitDataBase.Deserialize(buffer, (GemSuitDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GemSuitDataBase.Deserialize(stream, (GemSuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GemSuitDataBase.DeserializeLengthDelimited(stream, (GemSuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GemSuitDataBase.DeserializeLength(stream, length, (GemSuitDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GemSuitDataBase.Serialize(stream, (GemSuitDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GemSuitDataBase.SerializeToBytes((GemSuitDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GemSuitDataBase.SerializeLengthDelimited(stream, (GemSuitDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint level { get; set; }

        /// <summary> 等级</summary>
        public uint gem_all_level { get; set; }

        /// <summary> 宝石总等级</summary>
        public uint effect_id { get; set; }

        /// <summary> Effectid</summary>
        public uint fight_power { get; set; }

        /// <summary> 战斗力</summary>
        public string Des { get; set; }

        /// <summary> 描述</summary>
        public uint particle { get; set; }

    }

    /// <summary> FILE: GodDemon.xlsm SHEET: Sheet1 KEY: level</summary>
    public partial class GodDemonDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GodDemonDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GodDemonDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GodDemonDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GodDemonDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GodDemonDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GodDemonDataBase.Deserialize(buffer, (GodDemonDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GodDemonDataBase.Deserialize(stream, (GodDemonDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GodDemonDataBase.DeserializeLengthDelimited(stream, (GodDemonDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GodDemonDataBase.DeserializeLength(stream, length, (GodDemonDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GodDemonDataBase.Serialize(stream, (GodDemonDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GodDemonDataBase.SerializeToBytes((GodDemonDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GodDemonDataBase.SerializeLengthDelimited(stream, (GodDemonDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint level { get; set; }

        /// <summary> 神魔等级</summary>
        public uint max_level { get; set; }

        /// <summary> 最高等级</summary>
        public uint up_exp { get; set; }

        /// <summary> 升级经验</summary>
        public uint add_point { get; set; }

        /// <summary> 获得心法点</summary>
        public uint add_title { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 强化 KEY: id</summary>
    public partial class GridStrengthenDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GridStrengthenDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GridStrengthenDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GridStrengthenDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GridStrengthenDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GridStrengthenDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GridStrengthenDataBase.Deserialize(buffer, (GridStrengthenDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GridStrengthenDataBase.Deserialize(stream, (GridStrengthenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GridStrengthenDataBase.DeserializeLengthDelimited(stream, (GridStrengthenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GridStrengthenDataBase.DeserializeLength(stream, length, (GridStrengthenDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GridStrengthenDataBase.Serialize(stream, (GridStrengthenDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GridStrengthenDataBase.SerializeToBytes((GridStrengthenDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GridStrengthenDataBase.SerializeLengthDelimited(stream, (GridStrengthenDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public uint phyAttack { get; set; }

        /// <summary> 物理攻击</summary>
        public uint magicAttack { get; set; }

        /// <summary> 法术攻击</summary>
        public uint phyDef { get; set; }

        /// <summary> 物理防御</summary>
        public uint magicDef { get; set; }

        /// <summary> 法术防御</summary>
        public uint costMoneyType { get; set; }

        /// <summary> 消耗货币类型</summary>
        public uint costMoneyNum { get; set; }

        /// <summary> 货币数量</summary>
        public uint costItem1 { get; set; }

        /// <summary> 消耗道具1</summary>
        public uint costItemNum1 { get; set; }

        /// <summary> 数量1</summary>
        public uint costItem2 { get; set; }

        /// <summary> 消耗道具2</summary>
        public uint costItemNum2 { get; set; }

        /// <summary> 数量2</summary>
        public uint costItem3 { get; set; }

        /// <summary> 消耗道具3</summary>
        public uint costItemNum3 { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 强化套装 KEY: job + suitlv</summary>
    public partial class GridStrengthenSuitDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GridStrengthenSuitDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GridStrengthenSuitDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GridStrengthenSuitDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GridStrengthenSuitDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GridStrengthenSuitDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GridStrengthenSuitDataBase.Deserialize(buffer, (GridStrengthenSuitDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GridStrengthenSuitDataBase.Deserialize(stream, (GridStrengthenSuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GridStrengthenSuitDataBase.DeserializeLengthDelimited(stream, (GridStrengthenSuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GridStrengthenSuitDataBase.DeserializeLength(stream, length, (GridStrengthenSuitDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GridStrengthenSuitDataBase.Serialize(stream, (GridStrengthenSuitDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GridStrengthenSuitDataBase.SerializeToBytes((GridStrengthenSuitDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GridStrengthenSuitDataBase.SerializeLengthDelimited(stream, (GridStrengthenSuitDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint job { get; set; }

        /// <summary> 职业</summary>
        public uint suitlv { get; set; }

        /// <summary> 等级</summary>
        public uint triggerPosNum { get; set; }

        /// <summary> 触发部位数</summary>
        public uint triggerStrengLv { get; set; }

        /// <summary> 触发强化等级</summary>
        public string des { get; set; }

        /// <summary> 描述</summary>
        public uint phyAttack { get; set; }

        /// <summary> 物理攻击</summary>
        public uint magicAttack { get; set; }

        /// <summary> 法术攻击</summary>
        public uint phyDef { get; set; }

        /// <summary> 物理防御</summary>
        public uint magicDef { get; set; }

        /// <summary> 法术防御</summary>
        public uint hp { get; set; }

        /// <summary> 生命值</summary>
        public uint magic { get; set; }

    }

    /// <summary> FILE: Strengthen变强.xlsx SHEET: 玩法分类 KEY: dwID</summary>
    public partial class GrowUpDabaBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GrowUpDabaBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GrowUpDabaBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GrowUpDabaBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GrowUpDabaBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GrowUpDabaBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GrowUpDabaBase.Deserialize(buffer, (GrowUpDabaBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GrowUpDabaBase.Deserialize(stream, (GrowUpDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GrowUpDabaBase.DeserializeLengthDelimited(stream, (GrowUpDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GrowUpDabaBase.DeserializeLength(stream, length, (GrowUpDabaBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GrowUpDabaBase.Serialize(stream, (GrowUpDabaBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GrowUpDabaBase.SerializeToBytes((GrowUpDabaBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GrowUpDabaBase.SerializeLengthDelimited(stream, (GrowUpDabaBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public uint Type { get; set; }

        /// <summary> 类型</summary>
        public uint IndexType { get; set; }

        /// <summary> 小类</summary>
        public string TypeName { get; set; }

        /// <summary> 大类名称</summary>
        public string IndexTypeName { get; set; }

        /// <summary> 小类名称</summary>
        public string Name { get; set; }

        /// <summary> 内容</summary>
        public uint Star { get; set; }

        /// <summary> 星级</summary>
        public string Des { get; set; }

        /// <summary> 说明</summary>
        public string IconName { get; set; }

        /// <summary> ICON</summary>
        public uint JumpId { get; set; }

        /// <summary> 跳转</summary>
        public uint OpenLv { get; set; }

    }

    /// <summary> FILE: Strengthen变强.xlsx SHEET: 九洲之力 KEY: dwID</summary>
    public partial class GrowUpFightPowerDabaBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GrowUpFightPowerDabaBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GrowUpFightPowerDabaBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GrowUpFightPowerDabaBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GrowUpFightPowerDabaBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GrowUpFightPowerDabaBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GrowUpFightPowerDabaBase.Deserialize(buffer, (GrowUpFightPowerDabaBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GrowUpFightPowerDabaBase.Deserialize(stream, (GrowUpFightPowerDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GrowUpFightPowerDabaBase.DeserializeLengthDelimited(stream, (GrowUpFightPowerDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GrowUpFightPowerDabaBase.DeserializeLength(stream, length, (GrowUpFightPowerDabaBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GrowUpFightPowerDabaBase.Serialize(stream, (GrowUpFightPowerDabaBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GrowUpFightPowerDabaBase.SerializeToBytes((GrowUpFightPowerDabaBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GrowUpFightPowerDabaBase.SerializeLengthDelimited(stream, (GrowUpFightPowerDabaBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public string Name { get; set; }

        /// <summary> 名称</summary>
        public string IconName { get; set; }

        /// <summary> icon</summary>
        public string Des { get; set; }

        /// <summary> 描述</summary>
        public uint LvLimit { get; set; }

        /// <summary> 显示等级</summary>
        public uint JumpId { get; set; }

    }

    /// <summary> FILE: Strengthen变强.xlsx SHEET: 九洲之力条件 KEY: dwID</summary>
    public partial class GrowUpFightPowerLevelDabaBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GrowUpFightPowerLevelDabaBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GrowUpFightPowerLevelDabaBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GrowUpFightPowerLevelDabaBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GrowUpFightPowerLevelDabaBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GrowUpFightPowerLevelDabaBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GrowUpFightPowerLevelDabaBase.Deserialize(buffer, (GrowUpFightPowerLevelDabaBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GrowUpFightPowerLevelDabaBase.Deserialize(stream, (GrowUpFightPowerLevelDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GrowUpFightPowerLevelDabaBase.DeserializeLengthDelimited(stream, (GrowUpFightPowerLevelDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GrowUpFightPowerLevelDabaBase.DeserializeLength(stream, length, (GrowUpFightPowerLevelDabaBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GrowUpFightPowerLevelDabaBase.Serialize(stream, (GrowUpFightPowerLevelDabaBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GrowUpFightPowerLevelDabaBase.SerializeToBytes((GrowUpFightPowerLevelDabaBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GrowUpFightPowerLevelDabaBase.SerializeLengthDelimited(stream, (GrowUpFightPowerLevelDabaBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public uint MaxLv { get; set; }

        /// <summary> 最大等级</summary>
        public uint MinLv { get; set; }

        /// <summary> 最小等级</summary>
        public string Skill { get; set; }

        /// <summary> 技能</summary>
        public string Equip { get; set; }

        /// <summary> 装备</summary>
        public string Strengthen { get; set; }

        /// <summary> 强化</summary>
        public string Gem { get; set; }

        /// <summary> 宝石</summary>
        public string Pet { get; set; }

        /// <summary> 珍兽</summary>
        public string Muhon { get; set; }

        /// <summary> 圣魂</summary>
        public string ClanSkill { get; set; }

    }

    /// <summary> FILE: Strengthen变强.xlsx SHEET: 推荐战力 KEY: Lv</summary>
    public partial class GrowUpRecommendFightPowerDabaBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GrowUpRecommendFightPowerDabaBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GrowUpRecommendFightPowerDabaBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GrowUpRecommendFightPowerDabaBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GrowUpRecommendFightPowerDabaBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GrowUpRecommendFightPowerDabaBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GrowUpRecommendFightPowerDabaBase.Deserialize(buffer, (GrowUpRecommendFightPowerDabaBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GrowUpRecommendFightPowerDabaBase.Deserialize(stream, (GrowUpRecommendFightPowerDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GrowUpRecommendFightPowerDabaBase.DeserializeLengthDelimited(stream, (GrowUpRecommendFightPowerDabaBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GrowUpRecommendFightPowerDabaBase.DeserializeLength(stream, length, (GrowUpRecommendFightPowerDabaBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GrowUpRecommendFightPowerDabaBase.Serialize(stream, (GrowUpRecommendFightPowerDabaBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GrowUpRecommendFightPowerDabaBase.SerializeToBytes((GrowUpRecommendFightPowerDabaBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GrowUpRecommendFightPowerDabaBase.SerializeLengthDelimited(stream, (GrowUpRecommendFightPowerDabaBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint Lv { get; set; }

        /// <summary> 等级</summary>
        public uint FightPower { get; set; }

    }

    /// <summary> FILE: Guide新手引导.xlsx SHEET: 功能引导 KEY: id</summary>
    public partial class GuideDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GuideDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GuideDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GuideDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GuideDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GuideDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GuideDataBase.Deserialize(buffer, (GuideDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GuideDataBase.Deserialize(stream, (GuideDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GuideDataBase.DeserializeLengthDelimited(stream, (GuideDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GuideDataBase.DeserializeLength(stream, length, (GuideDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GuideDataBase.Serialize(stream, (GuideDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GuideDataBase.SerializeToBytes((GuideDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GuideDataBase.SerializeLengthDelimited(stream, (GuideDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string guideDes { get; set; }

        /// <summary> 引导描述</summary>
        public uint refreshPosInTime { get; set; }

        /// <summary> 是否实时刷新位置</summary>
        public uint loopTrigger { get; set; }

        /// <summary> 是否循环触发</summary>
        public uint guideType { get; set; }

        /// <summary> 引导类型</summary>
        public uint guideGroupID { get; set; }

        /// <summary> 引导组ID</summary>
        public uint guideStep { get; set; }

        /// <summary> 引导步骤</summary>
        public uint priority { get; set; }

        /// <summary> 优先级</summary>
        public uint triggerEventType { get; set; }

        /// <summary> 响应触发事件</summary>
        public string triggerCondiIDStr { get; set; }

        /// <summary> 触发条件ID</summary>
        public uint triggerUIEventID { get; set; }

        /// <summary> 引导响应UI事件</summary>
        public uint guideGUIDependType { get; set; }

        /// <summary> 引导GUI控件从属类型</summary>
        public string guideGUIDependParam { get; set; }

        /// <summary> 从属引导GUI控件参数</summary>
        public uint guideCheckType { get; set; }

        /// <summary> 引导数据检测类型</summary>
        public uint guideCheckItemID { get; set; }

        /// <summary> 引导检测物品ID</summary>
        public uint guideCheckItemType { get; set; }

        /// <summary> 引导检测物品大类</summary>
        public uint guideCheckItemSubType { get; set; }

        /// <summary> 引导检测物品小类</summary>
        public string guiGUIWidgetPath { get; set; }

        /// <summary> 引导GUI控件路径</summary>
        public uint guideStyle { get; set; }

        /// <summary> 引导样式</summary>
        public string guideGUIRelativePos { get; set; }

        /// <summary> 相对位置</summary>
        public uint guideDelayTime { get; set; }

        /// <summary> 延迟执行时间</summary>
        public string ignoreCondiStr { get; set; }

        /// <summary> 忽略条件</summary>
        public uint jumpID { get; set; }

        /// <summary> 跳转ID</summary>
        public uint voiceID { get; set; }

    }

    /// <summary> FILE: Guide新手引导.xlsx SHEET: 触发条件 KEY: id</summary>
    public partial class GuideTriggerCondiDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new GuideTriggerCondiDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return GuideTriggerCondiDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return GuideTriggerCondiDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return GuideTriggerCondiDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return GuideTriggerCondiDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return GuideTriggerCondiDataBase.Deserialize(buffer, (GuideTriggerCondiDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return GuideTriggerCondiDataBase.Deserialize(stream, (GuideTriggerCondiDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return GuideTriggerCondiDataBase.DeserializeLengthDelimited(stream, (GuideTriggerCondiDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return GuideTriggerCondiDataBase.DeserializeLength(stream, length, (GuideTriggerCondiDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { GuideTriggerCondiDataBase.Serialize(stream, (GuideTriggerCondiDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return GuideTriggerCondiDataBase.SerializeToBytes((GuideTriggerCondiDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { GuideTriggerCondiDataBase.SerializeLengthDelimited(stream, (GuideTriggerCondiDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string triggerDes { get; set; }

        /// <summary> 描述</summary>
        public uint triggerType { get; set; }

        /// <summary> 触发条件类型</summary>
        public uint triggerParamType { get; set; }

        /// <summary> 触发参数类型</summary>
        public uint taskTriggerStatus { get; set; }

        /// <summary> 任务触发状态</summary>
        public string panelTriggerID { get; set; }

    }

    /// <summary> FILE: HeartSkill.xlsm SHEET: Sheet1 KEY: id + lv</summary>
    public partial class HeartSkillDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HeartSkillDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HeartSkillDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HeartSkillDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HeartSkillDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HeartSkillDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HeartSkillDataBase.Deserialize(buffer, (HeartSkillDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HeartSkillDataBase.Deserialize(stream, (HeartSkillDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HeartSkillDataBase.DeserializeLengthDelimited(stream, (HeartSkillDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HeartSkillDataBase.DeserializeLength(stream, length, (HeartSkillDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HeartSkillDataBase.Serialize(stream, (HeartSkillDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HeartSkillDataBase.SerializeToBytes((HeartSkillDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HeartSkillDataBase.SerializeLengthDelimited(stream, (HeartSkillDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 编号</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint orderId { get; set; }

        /// <summary> 排序ID</summary>
        public uint lv { get; set; }

        /// <summary> 等级</summary>
        public uint maxLv { get; set; }

        /// <summary> 最高等级</summary>
        public uint profession { get; set; }

        /// <summary> 职业类型</summary>
        public string pre_skill { get; set; }

        /// <summary> 前置技能</summary>
        public uint costHeartSkillPoint { get; set; }

        /// <summary> 消耗心法点</summary>
        public uint need_money { get; set; }

        /// <summary> 消耗金币</summary>
        public uint needPlayerLv { get; set; }

        /// <summary> 需求等级</summary>
        public string des { get; set; }

        /// <summary> 描述</summary>
        public string icon { get; set; }

        /// <summary> 图标路径</summary>
        public string effectId { get; set; }

        /// <summary> 效果ID</summary>
        public uint fighting { get; set; }

        /// <summary> 战斗力</summary>
        public string enhanceEffect { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 回收价格波动 KEY: wdID</summary>
    public partial class HomeLandRecycleDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HomeLandRecycleDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HomeLandRecycleDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HomeLandRecycleDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HomeLandRecycleDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HomeLandRecycleDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HomeLandRecycleDatabase.Deserialize(buffer, (HomeLandRecycleDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HomeLandRecycleDatabase.Deserialize(stream, (HomeLandRecycleDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HomeLandRecycleDatabase.DeserializeLengthDelimited(stream, (HomeLandRecycleDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HomeLandRecycleDatabase.DeserializeLength(stream, length, (HomeLandRecycleDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HomeLandRecycleDatabase.Serialize(stream, (HomeLandRecycleDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HomeLandRecycleDatabase.SerializeToBytes((HomeLandRecycleDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HomeLandRecycleDatabase.SerializeLengthDelimited(stream, (HomeLandRecycleDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint wdID { get; set; }

        /// <summary> 道具ID</summary>
        public uint recyclePrice { get; set; }

        /// <summary> 回收单价</summary>
        public uint priceMin { get; set; }

        /// <summary> 波动下限</summary>
        public uint priceMax { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 模型配置 KEY: wdID + wdState</summary>
    public partial class HomeLandViewDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HomeLandViewDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HomeLandViewDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HomeLandViewDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HomeLandViewDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HomeLandViewDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HomeLandViewDatabase.Deserialize(buffer, (HomeLandViewDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HomeLandViewDatabase.Deserialize(stream, (HomeLandViewDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HomeLandViewDatabase.DeserializeLengthDelimited(stream, (HomeLandViewDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HomeLandViewDatabase.DeserializeLength(stream, length, (HomeLandViewDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HomeLandViewDatabase.Serialize(stream, (HomeLandViewDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HomeLandViewDatabase.SerializeToBytes((HomeLandViewDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HomeLandViewDatabase.SerializeLengthDelimited(stream, (HomeLandViewDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint wdID { get; set; }

        /// <summary> 索引ID</summary>
        public uint wdState { get; set; }

        /// <summary> 状态</summary>
        public uint dwModelID { get; set; }

        /// <summary> 模型ID</summary>
        public string posStr { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 大管家 KEY: indexId</summary>
    public partial class HomeTradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HomeTradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HomeTradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HomeTradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HomeTradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HomeTradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HomeTradeDataBase.Deserialize(buffer, (HomeTradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HomeTradeDataBase.Deserialize(stream, (HomeTradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HomeTradeDataBase.DeserializeLengthDelimited(stream, (HomeTradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HomeTradeDataBase.DeserializeLength(stream, length, (HomeTradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HomeTradeDataBase.Serialize(stream, (HomeTradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HomeTradeDataBase.SerializeToBytes((HomeTradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HomeTradeDataBase.SerializeLengthDelimited(stream, (HomeTradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint indexId { get; set; }

        /// <summary> 索引ID</summary>
        public uint mallID { get; set; }

        /// <summary> 商城ID</summary>
        public uint itemType { get; set; }

        /// <summary> 一级分类标签</summary>
        public string itemTypeName { get; set; }

        /// <summary> 一级分类标签名</summary>
        public uint itemID { get; set; }

        /// <summary> 道具ID</summary>
        public string itemName { get; set; }

        /// <summary> 道具名</summary>
        public uint pileNum { get; set; }

        /// <summary> 叠加数量</summary>
        public uint moneyType { get; set; }

        /// <summary> 购买货币类型</summary>
        public uint price { get; set; }

    }

    /// <summary> FILE: HotKey.xlsx SHEET: Sheet1 KEY: ID</summary>
    public partial class HotKeyDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HotKeyDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HotKeyDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HotKeyDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HotKeyDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HotKeyDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HotKeyDataBase.Deserialize(buffer, (HotKeyDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HotKeyDataBase.Deserialize(stream, (HotKeyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HotKeyDataBase.DeserializeLengthDelimited(stream, (HotKeyDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HotKeyDataBase.DeserializeLength(stream, length, (HotKeyDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HotKeyDataBase.Serialize(stream, (HotKeyDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HotKeyDataBase.SerializeToBytes((HotKeyDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HotKeyDataBase.SerializeLengthDelimited(stream, (HotKeyDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint moduleType { get; set; }

        /// <summary> 模块类型</summary>
        public string keyDes { get; set; }

        /// <summary> 热键描述</summary>
        public string hotkey { get; set; }

        /// <summary> 热键</summary>
        public uint btnpos { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 骑术升阶 KEY: degree</summary>
    public partial class HoursemanShipUPDegree : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HoursemanShipUPDegree(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HoursemanShipUPDegree.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HoursemanShipUPDegree.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HoursemanShipUPDegree.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HoursemanShipUPDegree.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HoursemanShipUPDegree.Deserialize(buffer, (HoursemanShipUPDegree)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HoursemanShipUPDegree.Deserialize(stream, (HoursemanShipUPDegree)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HoursemanShipUPDegree.DeserializeLengthDelimited(stream, (HoursemanShipUPDegree)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HoursemanShipUPDegree.DeserializeLength(stream, length, (HoursemanShipUPDegree)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HoursemanShipUPDegree.Serialize(stream, (HoursemanShipUPDegree)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HoursemanShipUPDegree.SerializeToBytes((HoursemanShipUPDegree)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HoursemanShipUPDegree.SerializeLengthDelimited(stream, (HoursemanShipUPDegree)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint degree { get; set; }

        /// <summary> 等阶</summary>
        public uint speed { get; set; }

        /// <summary> 移动速度</summary>
        public uint scaling { get; set; }

        /// <summary> 转化比</summary>
        public uint breakItemID { get; set; }

        /// <summary> 突破道具</summary>
        public uint itemNum { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 骑术升级 KEY: levelID</summary>
    public partial class HoursemanShipUPLevel : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HoursemanShipUPLevel(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HoursemanShipUPLevel.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HoursemanShipUPLevel.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HoursemanShipUPLevel.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HoursemanShipUPLevel.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HoursemanShipUPLevel.Deserialize(buffer, (HoursemanShipUPLevel)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HoursemanShipUPLevel.Deserialize(stream, (HoursemanShipUPLevel)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HoursemanShipUPLevel.DeserializeLengthDelimited(stream, (HoursemanShipUPLevel)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HoursemanShipUPLevel.DeserializeLength(stream, length, (HoursemanShipUPLevel)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HoursemanShipUPLevel.Serialize(stream, (HoursemanShipUPLevel)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HoursemanShipUPLevel.SerializeToBytes((HoursemanShipUPLevel)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HoursemanShipUPLevel.SerializeLengthDelimited(stream, (HoursemanShipUPLevel)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint levelID { get; set; }

        /// <summary> 等级</summary>
        public uint liliang { get; set; }

        /// <summary> 力量</summary>
        public uint minjie { get; set; }

        /// <summary> 敏捷</summary>
        public uint zhili { get; set; }

        /// <summary> 智力</summary>
        public uint tizhi { get; set; }

        /// <summary> 体质</summary>
        public uint jingshen { get; set; }

        /// <summary> 精神</summary>
        public uint uplevelexp { get; set; }

        /// <summary> 升级经验</summary>
        public uint breakLevel { get; set; }

        /// <summary> 是否突破</summary>
        public uint power { get; set; }

        /// <summary> 战斗力</summary>
        public uint roleLevel { get; set; }

    }

    /// <summary> FILE: Hunting狩猎.xlsx SHEET: Sheet1 KEY: ID</summary>
    public partial class HuntingDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new HuntingDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return HuntingDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return HuntingDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return HuntingDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return HuntingDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return HuntingDataBase.Deserialize(buffer, (HuntingDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return HuntingDataBase.Deserialize(stream, (HuntingDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return HuntingDataBase.DeserializeLengthDelimited(stream, (HuntingDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return HuntingDataBase.DeserializeLength(stream, length, (HuntingDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { HuntingDataBase.Serialize(stream, (HuntingDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return HuntingDataBase.SerializeToBytes((HuntingDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { HuntingDataBase.SerializeLengthDelimited(stream, (HuntingDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string name { get; set; }

        /// <summary> 怪物名字</summary>
        public uint type { get; set; }

        /// <summary> 分类标签页</summary>
        public string monsterID { get; set; }

        /// <summary> 怪物ID1</summary>
        public uint level { get; set; }

        /// <summary> 怪物等级</summary>
        public uint refreshType { get; set; }

        /// <summary> 刷新类型</summary>
        public string refreshTime { get; set; }

        /// <summary> 刷新时间</summary>
        public uint mapID { get; set; }

        /// <summary> 地图ID</summary>
        public uint coordinateX { get; set; }

        /// <summary> 坐标X</summary>
        public uint coordinateY { get; set; }

        /// <summary> 坐标Y</summary>
        public string description { get; set; }

        /// <summary> 说明</summary>
        public string dropItem { get; set; }

        /// <summary> 掉落物品</summary>
        public uint transmitMapID { get; set; }

        /// <summary> 传送地图ID</summary>
        public uint transmitCoordinateX { get; set; }

        /// <summary> 传送坐标X</summary>
        public uint transmitCoordinateY { get; set; }

        /// <summary> 传送坐标Y</summary>
        public uint moneyType { get; set; }

        /// <summary> 消耗货币类型</summary>
        public uint number { get; set; }

        /// <summary> 数值</summary>
        public string icon { get; set; }

        /// <summary> 图标资源</summary>
        public string bottomicon { get; set; }

        /// <summary> 底图资源</summary>
        public uint HuntingScore { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 立即收获费用涨幅 KEY: dwID + useTimes</summary>
    public partial class IncreaseDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new IncreaseDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return IncreaseDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return IncreaseDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return IncreaseDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return IncreaseDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return IncreaseDataBase.Deserialize(buffer, (IncreaseDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return IncreaseDataBase.Deserialize(stream, (IncreaseDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return IncreaseDataBase.DeserializeLengthDelimited(stream, (IncreaseDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return IncreaseDataBase.DeserializeLength(stream, length, (IncreaseDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { IncreaseDataBase.Serialize(stream, (IncreaseDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return IncreaseDataBase.SerializeToBytes((IncreaseDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { IncreaseDataBase.SerializeLengthDelimited(stream, (IncreaseDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 索引ID</summary>
        public uint useTimes { get; set; }

        /// <summary> 每日使用次数</summary>
        public float increase { get; set; }

    }

    /// <summary> FILE: Hunting狩猎.xlsx SHEET: 鼓舞 KEY: inspireType + inspireIndex</summary>
    public partial class InspireDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new InspireDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return InspireDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return InspireDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return InspireDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return InspireDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return InspireDataBase.Deserialize(buffer, (InspireDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return InspireDataBase.Deserialize(stream, (InspireDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return InspireDataBase.DeserializeLengthDelimited(stream, (InspireDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return InspireDataBase.DeserializeLength(stream, length, (InspireDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { InspireDataBase.Serialize(stream, (InspireDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return InspireDataBase.SerializeToBytes((InspireDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { InspireDataBase.SerializeLengthDelimited(stream, (InspireDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint inspireType { get; set; }

        /// <summary> 鼓舞类型</summary>
        public uint inspireIndex { get; set; }

        /// <summary> 次数</summary>
        public uint maxInspireTimes { get; set; }

        /// <summary> 最大次数</summary>
        public uint costType { get; set; }

        /// <summary> 消耗货币类型</summary>
        public uint costNum { get; set; }

        /// <summary> 消耗货币数量</summary>
        public string addBufferDes { get; set; }

        /// <summary> 描述</summary>
        public uint addBufferValue { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 绑定标识位 KEY: bind_id</summary>
    public partial class ItemBindDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ItemBindDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ItemBindDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ItemBindDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ItemBindDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ItemBindDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ItemBindDataBase.Deserialize(buffer, (ItemBindDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ItemBindDataBase.Deserialize(stream, (ItemBindDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ItemBindDataBase.DeserializeLengthDelimited(stream, (ItemBindDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ItemBindDataBase.DeserializeLength(stream, length, (ItemBindDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ItemBindDataBase.Serialize(stream, (ItemBindDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ItemBindDataBase.SerializeToBytes((ItemBindDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ItemBindDataBase.SerializeLengthDelimited(stream, (ItemBindDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint bind_id { get; set; }

        /// <summary> 绑定标识ID</summary>
        public uint get_flag { get; set; }

        /// <summary> 获取绑定</summary>
        public uint use_flag { get; set; }

        /// <summary> 穿戴绑定</summary>
        public uint dead_flag { get; set; }

        /// <summary> 死亡掉落</summary>
        public uint shop_flag { get; set; }

        /// <summary> 拍卖行交易</summary>
        public uint destroy_flag { get; set; }

        /// <summary> 销毁</summary>
        public uint sell_flag { get; set; }

        /// <summary> 出售给NPC</summary>
        public uint store_flag { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 道具类 KEY: itemID</summary>
    public partial class ItemDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ItemDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ItemDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ItemDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ItemDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ItemDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ItemDataBase.Deserialize(buffer, (ItemDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ItemDataBase.Deserialize(stream, (ItemDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ItemDataBase.DeserializeLengthDelimited(stream, (ItemDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ItemDataBase.DeserializeLength(stream, length, (ItemDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ItemDataBase.Serialize(stream, (ItemDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ItemDataBase.SerializeToBytes((ItemDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ItemDataBase.SerializeLengthDelimited(stream, (ItemDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint itemID { get; set; }

        /// <summary> 物品ID</summary>
        public string itemName { get; set; }

        /// <summary> 名称</summary>
        public uint baseType { get; set; }

        /// <summary> 道具大类</summary>
        public uint subType { get; set; }

        /// <summary> 道具小类</summary>
        public uint useRole { get; set; }

        /// <summary> 使用职业</summary>
        public uint useLevel { get; set; }

        /// <summary> 使用等级</summary>
        public uint overlayNum { get; set; }

        /// <summary> 叠加数量</summary>
        public uint buyPrice { get; set; }

        /// <summary> 买入单价</summary>
        public uint sellPrice { get; set; }

        /// <summary> 卖出单价</summary>
        public uint ownMax { get; set; }

        /// <summary> 拥有数量上限</summary>
        public uint grade { get; set; }

        /// <summary> 物品档次</summary>
        public uint quality { get; set; }

        /// <summary> 品质</summary>
        public uint isShortCut { get; set; }

        /// <summary> 是否可放入快捷栏</summary>
        public uint bindMask { get; set; }

        /// <summary> 绑定标识位</summary>
        public uint sortID { get; set; }

        /// <summary> 排序ID</summary>
        public string description { get; set; }

        /// <summary> 描述</summary>
        public string itemIcon { get; set; }

        /// <summary> 物品栏图片</summary>
        public uint dropIcon { get; set; }

        /// <summary> 掉落模型</summary>
        public uint dropLimitTime { get; set; }

        /// <summary> 掉落权限时间</summary>
        public uint dropDestoryTime { get; set; }

        /// <summary> 掉落销毁时间</summary>
        public uint maxUseTimes { get; set; }

        /// <summary> 每日使用最大次数</summary>
        public uint useTypeId { get; set; }

        /// <summary> 使用类别ID</summary>
        public uint scale { get; set; }

        /// <summary> 缩放比</summary>
        public uint batchUse { get; set; }

        /// <summary> 批量使用</summary>
        public uint func_id { get; set; }

        /// <summary> 作用函数ID</summary>
        public uint EqualsId { get; set; }

        /// <summary> 相同物品id</summary>
        public bool IsPush { get; set; }

        /// <summary> 是否推送</summary>
        public bool IsBroad { get; set; }

        /// <summary> 是否拾取同队广播</summary>
        public string wayIDs { get; set; }

        /// <summary> 获取途径</summary>
        public string itemJump { get; set; }

        /// <summary> 物品跳转</summary>
        public string MissionNpcParam { get; set; }

        /// <summary> 任务NPC购买</summary>
        public uint great { get; set; }

    }

    /// <summary> FILE: GetItemWay.xlsx SHEET: 获取途径配置 KEY: ID</summary>
    public partial class ItemGetDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ItemGetDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ItemGetDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ItemGetDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ItemGetDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ItemGetDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ItemGetDataBase.Deserialize(buffer, (ItemGetDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ItemGetDataBase.Deserialize(stream, (ItemGetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ItemGetDataBase.DeserializeLengthDelimited(stream, (ItemGetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ItemGetDataBase.DeserializeLength(stream, length, (ItemGetDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ItemGetDataBase.Serialize(stream, (ItemGetDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ItemGetDataBase.SerializeToBytes((ItemGetDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ItemGetDataBase.SerializeLengthDelimited(stream, (ItemGetDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string wayName { get; set; }

        /// <summary> 途径名称</summary>
        public string icon { get; set; }

        /// <summary> 图标</summary>
        public uint jumpID { get; set; }

    }

    /// <summary> FILE: GetItemWay.xlsx SHEET: 物品跳转 KEY: ID</summary>
    public partial class ItemJumpDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ItemJumpDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ItemJumpDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ItemJumpDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ItemJumpDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ItemJumpDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ItemJumpDataBase.Deserialize(buffer, (ItemJumpDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ItemJumpDataBase.Deserialize(stream, (ItemJumpDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ItemJumpDataBase.DeserializeLengthDelimited(stream, (ItemJumpDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ItemJumpDataBase.DeserializeLength(stream, length, (ItemJumpDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ItemJumpDataBase.Serialize(stream, (ItemJumpDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ItemJumpDataBase.SerializeToBytes((ItemJumpDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ItemJumpDataBase.SerializeLengthDelimited(stream, (ItemJumpDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string jumpName { get; set; }

        /// <summary> 跳转显示名</summary>
        public uint jumpID { get; set; }

        /// <summary> 跳转ID</summary>
        public uint proLimit { get; set; }

        /// <summary> 职业跳转</summary>
        public uint mwJumpID { get; set; }

        /// <summary> 蛮武</summary>
        public uint bcJumpID { get; set; }

        /// <summary> 百草</summary>
        public uint llJumpID { get; set; }

        /// <summary> 龙灵</summary>
        public uint wmJumpID { get; set; }

    }

    /// <summary> FILE: Item表格.xlsm SHEET: 使用类别 KEY: useTypeId</summary>
    public partial class ItemUseTypeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ItemUseTypeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ItemUseTypeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ItemUseTypeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ItemUseTypeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ItemUseTypeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ItemUseTypeDataBase.Deserialize(buffer, (ItemUseTypeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ItemUseTypeDataBase.Deserialize(stream, (ItemUseTypeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ItemUseTypeDataBase.DeserializeLengthDelimited(stream, (ItemUseTypeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ItemUseTypeDataBase.DeserializeLength(stream, length, (ItemUseTypeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ItemUseTypeDataBase.Serialize(stream, (ItemUseTypeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ItemUseTypeDataBase.SerializeToBytes((ItemUseTypeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ItemUseTypeDataBase.SerializeLengthDelimited(stream, (ItemUseTypeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint useTypeId { get; set; }

        /// <summary> 使用类别ID</summary>
        public uint dayUseTimes { get; set; }

    }

    /// <summary> FILE: GetItemWay.xlsx SHEET: 跳转途径 KEY: ID</summary>
    public partial class JumpWayDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new JumpWayDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return JumpWayDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return JumpWayDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return JumpWayDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return JumpWayDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return JumpWayDataBase.Deserialize(buffer, (JumpWayDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return JumpWayDataBase.Deserialize(stream, (JumpWayDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return JumpWayDataBase.DeserializeLengthDelimited(stream, (JumpWayDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return JumpWayDataBase.DeserializeLength(stream, length, (JumpWayDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { JumpWayDataBase.Serialize(stream, (JumpWayDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return JumpWayDataBase.SerializeToBytes((JumpWayDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { JumpWayDataBase.SerializeLengthDelimited(stream, (JumpWayDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint jumpTypeID { get; set; }

        /// <summary> 途径ID</summary>
        public string param1 { get; set; }

        /// <summary> 参数1</summary>
        public string param2 { get; set; }

        /// <summary> 参数2</summary>
        public uint param3 { get; set; }

        /// <summary> 参数3</summary>
        public uint fillParam3 { get; set; }

        /// <summary> 是否需要填充参数3</summary>
        public uint fillParam3WithQwID { get; set; }

        /// <summary> 使用唯一ID填充</summary>
        public uint matchCondi1 { get; set; }

        /// <summary> 条件1</summary>
        public uint matchCondiParam1 { get; set; }

        /// <summary> 条件参数1</summary>
        public string matchCondiNotice1 { get; set; }

        /// <summary> 提示1</summary>
        public uint matchCondi2 { get; set; }

        /// <summary> 条件2</summary>
        public uint matchCondiParam2 { get; set; }

        /// <summary> 条件参数2</summary>
        public string matchCondiNotice2 { get; set; }

        /// <summary> 提示2</summary>
        public uint matchCondi3 { get; set; }

        /// <summary> 条件3</summary>
        public uint matchCondiParam3 { get; set; }

        /// <summary> 条件参数3</summary>
        public string matchCondiNotice3 { get; set; }

        /// <summary> 提示3</summary>
        public uint secondJumpWayId { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 土地空间 KEY: dwID + indexID</summary>
    public partial class LandAndFarmDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new LandAndFarmDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return LandAndFarmDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return LandAndFarmDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return LandAndFarmDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return LandAndFarmDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return LandAndFarmDataBase.Deserialize(buffer, (LandAndFarmDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return LandAndFarmDataBase.Deserialize(stream, (LandAndFarmDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return LandAndFarmDataBase.DeserializeLengthDelimited(stream, (LandAndFarmDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return LandAndFarmDataBase.DeserializeLength(stream, length, (LandAndFarmDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { LandAndFarmDataBase.Serialize(stream, (LandAndFarmDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return LandAndFarmDataBase.SerializeToBytes((LandAndFarmDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { LandAndFarmDataBase.SerializeLengthDelimited(stream, (LandAndFarmDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public uint indexID { get; set; }

        /// <summary> 索引</summary>
        public uint costType { get; set; }

        /// <summary> 费用类型</summary>
        public uint needMoneyNum { get; set; }

        /// <summary> 开启费用</summary>
        public uint vipLimitLevel { get; set; }

    }

    /// <summary> FILE: LangText.xlsm SHEET: 中文 KEY: dwID</summary>
    public partial class LangTextDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new LangTextDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return LangTextDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return LangTextDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return LangTextDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return LangTextDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return LangTextDataBase.Deserialize(buffer, (LangTextDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return LangTextDataBase.Deserialize(stream, (LangTextDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return LangTextDataBase.DeserializeLengthDelimited(stream, (LangTextDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return LangTextDataBase.DeserializeLength(stream, length, (LangTextDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { LangTextDataBase.Serialize(stream, (LangTextDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return LangTextDataBase.SerializeToBytes((LangTextDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { LangTextDataBase.SerializeLengthDelimited(stream, (LangTextDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 文字ID</summary>
        public string strText { get; set; }

        /// <summary> 中文</summary>
        public uint npcID { get; set; }

        /// <summary> NPCID</summary>
        public uint npcType { get; set; }

        /// <summary> NPC类型</summary>
        public uint taskID { get; set; }

        /// <summary> 任务ID</summary>
        public string talkVoice { get; set; }

        /// <summary> 对话音效</summary>
        public uint channelGroup { get; set; }

    }

    /// <summary> FILE: LoadingTips.xlsx SHEET: Sheet1 KEY: dwID</summary>
    public partial class LoadingTipsDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new LoadingTipsDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return LoadingTipsDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return LoadingTipsDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return LoadingTipsDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return LoadingTipsDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return LoadingTipsDatabase.Deserialize(buffer, (LoadingTipsDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return LoadingTipsDatabase.Deserialize(stream, (LoadingTipsDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return LoadingTipsDatabase.DeserializeLengthDelimited(stream, (LoadingTipsDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return LoadingTipsDatabase.DeserializeLength(stream, length, (LoadingTipsDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { LoadingTipsDatabase.Serialize(stream, (LoadingTipsDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return LoadingTipsDatabase.SerializeToBytes((LoadingTipsDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { LoadingTipsDatabase.SerializeLengthDelimited(stream, (LoadingTipsDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> id</summary>
        public string strText { get; set; }

        /// <summary> tips</summary>
        public string strBgPic { get; set; }

    }

    /// <summary> FILE: Localization本地文本.xlsm SHEET: 本地文本 KEY: id</summary>
    public partial class LocalTextDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new LocalTextDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return LocalTextDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return LocalTextDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return LocalTextDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return LocalTextDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return LocalTextDataBase.Deserialize(buffer, (LocalTextDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return LocalTextDataBase.Deserialize(stream, (LocalTextDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return LocalTextDataBase.DeserializeLengthDelimited(stream, (LocalTextDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return LocalTextDataBase.DeserializeLength(stream, length, (LocalTextDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { LocalTextDataBase.Serialize(stream, (LocalTextDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return LocalTextDataBase.SerializeToBytes((LocalTextDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { LocalTextDataBase.SerializeLengthDelimited(stream, (LocalTextDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public uint dwType { get; set; }

        /// <summary> 类型</summary>
        public string text { get; set; }

        /// <summary> Text</summary>
        public string enumString { get; set; }

    }

    /// <summary> FILE: IconAttribute.xlsx SHEET: 邮件 KEY: dwID</summary>
    public partial class MailIconDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new MailIconDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return MailIconDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return MailIconDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return MailIconDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return MailIconDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return MailIconDataBase.Deserialize(buffer, (MailIconDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return MailIconDataBase.Deserialize(stream, (MailIconDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return MailIconDataBase.DeserializeLengthDelimited(stream, (MailIconDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return MailIconDataBase.DeserializeLength(stream, length, (MailIconDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { MailIconDataBase.Serialize(stream, (MailIconDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return MailIconDataBase.SerializeToBytes((MailIconDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { MailIconDataBase.SerializeLengthDelimited(stream, (MailIconDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 属性</summary>
        public string strDesc { get; set; }

    }

    /// <summary> FILE: Map.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class MapDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new MapDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return MapDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return MapDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return MapDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return MapDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return MapDataBase.Deserialize(buffer, (MapDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return MapDataBase.Deserialize(stream, (MapDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return MapDataBase.DeserializeLengthDelimited(stream, (MapDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return MapDataBase.DeserializeLength(stream, length, (MapDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { MapDataBase.Serialize(stream, (MapDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return MapDataBase.SerializeToBytes((MapDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { MapDataBase.SerializeLengthDelimited(stream, (MapDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public string miniMapInfo { get; set; }

        /// <summary> 小地图显示信息</summary>
        public uint dwWidth { get; set; }

        /// <summary> 宽度</summary>
        public uint dwHeight { get; set; }

        /// <summary> 高度</summary>
        public uint dwResPath { get; set; }

        /// <summary> 资源路径</summary>
        public uint dwbgm { get; set; }

        /// <summary> BGM</summary>
        public uint CamDis { get; set; }

        /// <summary> 近距离</summary>
        public uint farDistance { get; set; }

        /// <summary> 远距离</summary>
        public uint RotateX { get; set; }

        /// <summary> 水平</summary>
        public uint RotateY { get; set; }

        /// <summary> 旋转</summary>
        public string uioffset { get; set; }

        /// <summary> UI偏移</summary>
        public uint WaveEffect { get; set; }

        /// <summary> 波动效果</summary>
        public uint textureWidth { get; set; }

        /// <summary> 贴图宽度</summary>
        public uint canUsingRide { get; set; }

        /// <summary> 能否使用坐骑</summary>
        public string supportModel { get; set; }

        /// <summary> 支持模式</summary>
        public string mapinfo { get; set; }

        /// <summary> 小地图图标显示</summary>
        public uint dwMaterial { get; set; }

        /// <summary> 场景材质</summary>
        public uint rebackMapID { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 矿产 KEY: dwID</summary>
    public partial class MineDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new MineDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return MineDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return MineDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return MineDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return MineDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return MineDataBase.Deserialize(buffer, (MineDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return MineDataBase.Deserialize(stream, (MineDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return MineDataBase.DeserializeLengthDelimited(stream, (MineDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return MineDataBase.DeserializeLength(stream, length, (MineDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { MineDataBase.Serialize(stream, (MineDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return MineDataBase.SerializeToBytes((MineDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { MineDataBase.SerializeLengthDelimited(stream, (MineDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 矿石道具ID</summary>
        public uint mineGainTime { get; set; }

        /// <summary> 收获时间</summary>
        public uint immediatelyGainTime { get; set; }

        /// <summary> 立即收获单位时间</summary>
        public uint imediatelyCoupons { get; set; }

    }

    /// <summary> FILE: Resource.xlsm SHEET: 模型界面展示 KEY: modeID</summary>
    public partial class ModeDiplayDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ModeDiplayDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ModeDiplayDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ModeDiplayDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ModeDiplayDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ModeDiplayDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ModeDiplayDataBase.Deserialize(buffer, (ModeDiplayDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ModeDiplayDataBase.Deserialize(stream, (ModeDiplayDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ModeDiplayDataBase.DeserializeLengthDelimited(stream, (ModeDiplayDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ModeDiplayDataBase.DeserializeLength(stream, length, (ModeDiplayDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ModeDiplayDataBase.Serialize(stream, (ModeDiplayDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ModeDiplayDataBase.SerializeToBytes((ModeDiplayDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ModeDiplayDataBase.SerializeLengthDelimited(stream, (ModeDiplayDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint modeID { get; set; }

        /// <summary> ID</summary>
        public string pos750 { get; set; }

        /// <summary> Pos750</summary>
        public string rotate750 { get; set; }

        /// <summary> Rotate750</summary>
        public string pos512 { get; set; }

        /// <summary> Pos512</summary>
        public string rotate512 { get; set; }

        /// <summary> Rotate512</summary>
        public string pos800 { get; set; }

        /// <summary> Pos800</summary>
        public string rotate800 { get; set; }

        /// <summary> Rotate800</summary>
        public uint Modelrotation { get; set; }

    }

    /// <summary> FILE: AutoFight.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class MonsterWaveDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new MonsterWaveDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return MonsterWaveDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return MonsterWaveDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return MonsterWaveDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return MonsterWaveDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return MonsterWaveDatabase.Deserialize(buffer, (MonsterWaveDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return MonsterWaveDatabase.Deserialize(stream, (MonsterWaveDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return MonsterWaveDatabase.DeserializeLengthDelimited(stream, (MonsterWaveDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return MonsterWaveDatabase.DeserializeLength(stream, length, (MonsterWaveDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { MonsterWaveDatabase.Serialize(stream, (MonsterWaveDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return MonsterWaveDatabase.SerializeToBytes((MonsterWaveDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { MonsterWaveDatabase.SerializeLengthDelimited(stream, (MonsterWaveDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> copyid</summary>
        public string strWaves { get; set; }

    }

    /// <summary> FILE: Guide新手引导.xlsx SHEET: 新功能开启提示 KEY: openFuncID</summary>
    public partial class NewFUNCOpenDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new NewFUNCOpenDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return NewFUNCOpenDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return NewFUNCOpenDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return NewFUNCOpenDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return NewFUNCOpenDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return NewFUNCOpenDataBase.Deserialize(buffer, (NewFUNCOpenDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return NewFUNCOpenDataBase.Deserialize(stream, (NewFUNCOpenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return NewFUNCOpenDataBase.DeserializeLengthDelimited(stream, (NewFUNCOpenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return NewFUNCOpenDataBase.DeserializeLength(stream, length, (NewFUNCOpenDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { NewFUNCOpenDataBase.Serialize(stream, (NewFUNCOpenDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return NewFUNCOpenDataBase.SerializeToBytes((NewFUNCOpenDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { NewFUNCOpenDataBase.SerializeLengthDelimited(stream, (NewFUNCOpenDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public string funcName { get; set; }

        /// <summary> 功能名</summary>
        public string funcDes { get; set; }

        /// <summary> 功能描述</summary>
        public string funcIcon { get; set; }

        /// <summary> 功能图标</summary>
        public uint priority { get; set; }

        /// <summary> 优先级</summary>
        public string funcObjFlyToTargetPath { get; set; }

        /// <summary> 功能开启飞向目标路径</summary>
        public string funcObjCreatePath { get; set; }

        /// <summary> 功能开启创建对象路径</summary>
        public string funcObjCreateOffset { get; set; }

        /// <summary> 创建功能对象偏移XY</summary>
        public uint funcSortID { get; set; }

        /// <summary> 组内排序ID</summary>
        public uint funcGroup { get; set; }

        /// <summary> 功能隶属组</summary>
        public uint autoOpen { get; set; }

        /// <summary> 默认开启</summary>
        public string funcGapStr { get; set; }

        /// <summary> 功能按钮间隔</summary>
        public uint openFuncID { get; set; }

        /// <summary> 开启功能ID</summary>
        public uint triggerCondiID { get; set; }

        /// <summary> 触发条件ID</summary>
        public uint fnCloseConID { get; set; }

        /// <summary> 条件关闭启用ID</summary>
        public uint ignoreCondi { get; set; }

    }

    /// <summary> FILE: noble皇令.xlsx SHEET: Sheet1 KEY: dwID</summary>
    public partial class NobleDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new NobleDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return NobleDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return NobleDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return NobleDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return NobleDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return NobleDataBase.Deserialize(buffer, (NobleDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return NobleDataBase.Deserialize(stream, (NobleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return NobleDataBase.DeserializeLengthDelimited(stream, (NobleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return NobleDataBase.DeserializeLength(stream, length, (NobleDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { NobleDataBase.Serialize(stream, (NobleDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return NobleDataBase.SerializeToBytes((NobleDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { NobleDataBase.SerializeLengthDelimited(stream, (NobleDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public uint rechargeID { get; set; }

        /// <summary> 充值ID</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint value { get; set; }

        /// <summary> 售价（人民币）</summary>
        public uint invaild { get; set; }

        /// <summary> 是否有效</summary>
        public uint days { get; set; }

        /// <summary> 有效期（天）</summary>
        public uint lidedianjuan { get; set; }

        /// <summary> 立得元宝</summary>
        public uint zengsongdianjuan { get; set; }

        /// <summary> 每日赠送文钱</summary>
        public uint arenaResetNum { get; set; }

        /// <summary> 武斗场每日重置次数</summary>
        public uint HomeResetNum { get; set; }

        /// <summary> 家园抢矿重置次数</summary>
        public uint NvwaResetNum { get; set; }

        /// <summary> 守护女娲每日参与次数</summary>
        public uint BlessTime { get; set; }

        /// <summary> 祝福之石总时间</summary>
        public uint ExtreExp { get; set; }

        /// <summary> 增加打怪获得经验</summary>
        public uint titleID { get; set; }

        /// <summary> 专属称号</summary>
        public uint whPermission { get; set; }

        /// <summary> 仓库扩展权限</summary>
        public uint MapTrans { get; set; }

        /// <summary> 地图传送</summary>
        public uint HuntingTransNumber { get; set; }

        /// <summary> 狩猎免费传送次数</summary>
        public string UpperLimit { get; set; }

        /// <summary> 上限提醒</summary>
        public uint blackRefCount { get; set; }

        /// <summary> 每日云游商店刷新次数</summary>
        public uint repRefCount { get; set; }

        /// <summary> 每日声望商店刷新次数</summary>
        public uint scoreRefCount { get; set; }

        /// <summary> 每日积分商店刷新次数</summary>
        public uint campScoreRefCount { get; set; }

        /// <summary> 每日战勋商店刷新次数</summary>
        public uint shouLieScoreRefCount { get; set; }

        /// <summary> 每日狩猎商店刷新次数</summary>
        public uint bgResID { get; set; }

        /// <summary> 背景图资源ID</summary>
        public string des { get; set; }

        /// <summary> 描述</summary>
        public uint BgHeight { get; set; }

    }

    /// <summary> FILE: Npc表格.xlsm SHEET: 阵营划分 KEY: dwID</summary>
    public partial class NpcCampDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new NpcCampDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return NpcCampDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return NpcCampDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return NpcCampDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return NpcCampDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return NpcCampDataBase.Deserialize(buffer, (NpcCampDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return NpcCampDataBase.Deserialize(stream, (NpcCampDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return NpcCampDataBase.DeserializeLengthDelimited(stream, (NpcCampDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return NpcCampDataBase.DeserializeLength(stream, length, (NpcCampDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { NpcCampDataBase.Serialize(stream, (NpcCampDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return NpcCampDataBase.SerializeToBytes((NpcCampDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { NpcCampDataBase.SerializeLengthDelimited(stream, (NpcCampDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string campName { get; set; }

        /// <summary> 阵营名</summary>
        public string campStr { get; set; }

    }

    /// <summary> FILE: Npc表格.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class NpcDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new NpcDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return NpcDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return NpcDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return NpcDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return NpcDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return NpcDataBase.Deserialize(buffer, (NpcDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return NpcDataBase.Deserialize(stream, (NpcDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return NpcDataBase.DeserializeLengthDelimited(stream, (NpcDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return NpcDataBase.DeserializeLength(stream, length, (NpcDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { NpcDataBase.Serialize(stream, (NpcDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return NpcDataBase.SerializeToBytes((NpcDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { NpcDataBase.SerializeLengthDelimited(stream, (NpcDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public uint dwNameColor { get; set; }

        /// <summary> 颜色</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint job { get; set; }

        /// <summary> 职业</summary>
        public uint npcHeadMaskID { get; set; }

        /// <summary> NPC头顶标识ID</summary>
        public uint sex { get; set; }

        /// <summary> 性别</summary>
        public uint npcCamp { get; set; }

        /// <summary> 阵营</summary>
        public uint dwVisitType { get; set; }

        /// <summary> 是否可访问</summary>
        public uint dwAttackType { get; set; }

        /// <summary> 是否可攻击</summary>
        public uint dwCanBeSelect { get; set; }

        /// <summary> 是否可选中</summary>
        public uint dwShowType { get; set; }

        /// <summary> 信息显示</summary>
        public uint dwWalkSpeed { get; set; }

        /// <summary> 移动速度</summary>
        public uint dwRunSpeed { get; set; }

        /// <summary> 奔跑速度</summary>
        public uint dwBaseLife { get; set; }

        /// <summary> 生命值</summary>
        public uint dwBaseDefine { get; set; }

        /// <summary> 物理防御</summary>
        public uint dwBaseAttack { get; set; }

        /// <summary> 物理攻击</summary>
        public string strAniDir { get; set; }

        /// <summary> 动作文件夹</summary>
        public uint dwCallDis { get; set; }

        /// <summary> 访问距离</summary>
        public string strCallAction { get; set; }

        /// <summary> 访问动作</summary>
        public uint dwResetDirectionTime { get; set; }

        /// <summary> 待机时间</summary>
        public uint dwModelSet { get; set; }

        /// <summary> 模型ID</summary>
        public uint dwViewModelSet { get; set; }

        /// <summary> 展示界面模型ID</summary>
        public uint dwType { get; set; }

        /// <summary> 类型</summary>
        public uint dwMonsterType { get; set; }

        /// <summary> 怪物类型</summary>
        public uint dwLevel { get; set; }

        /// <summary> 等级</summary>
        public string strAttackSound { get; set; }

        /// <summary> 攻击发声</summary>
        public string npcIcon { get; set; }

        /// <summary> 头像</summary>
        public string skills { get; set; }

        /// <summary> 技能</summary>
        public string BossAI { get; set; }

        /// <summary> BossAI</summary>
        public string strUnderAttackSound { get; set; }

        /// <summary> 被击发声</summary>
        public string strIdleSound { get; set; }

        /// <summary> 空闲发声</summary>
        public uint dwDyingSound { get; set; }

        /// <summary> 临死发声</summary>
        public string strFunNpcClickSound { get; set; }

        /// <summary> 点击语音</summary>
        public uint strBirthMagic { get; set; }

        /// <summary> 出生特效</summary>
        public uint dwBirthMagicSoundID { get; set; }

        /// <summary> 出生音效</summary>
        public uint dwBirthMagicSoundDelay { get; set; }

        /// <summary> 出生音效延迟</summary>
        public uint strDeathMagic { get; set; }

        /// <summary> 死亡特效</summary>
        public uint dwDeathMagicSoundID { get; set; }

        /// <summary> 死亡音效</summary>
        public uint dwDeathMagicSoundDelay { get; set; }

        /// <summary> 死亡音效延迟</summary>
        public uint dwMovingSound { get; set; }

        /// <summary> 移动音效</summary>
        public uint dwStandingSound { get; set; }

        /// <summary> 静止音效</summary>
        public uint dwModelArea { get; set; }

        /// <summary> 模型被攻击范围</summary>
        public float fRotateX { get; set; }

        /// <summary> 旋转速度X</summary>
        public float fRotateY { get; set; }

        /// <summary> 旋转速度Y</summary>
        public float fRotateZ { get; set; }

        /// <summary> 旋转速度Z</summary>
        public string strDesc { get; set; }

        /// <summary> 描述</summary>
        public float fColAABBScaleX { get; set; }

        /// <summary> 碰撞框缩放X</summary>
        public float fColAABBScaleY { get; set; }

        /// <summary> 碰撞框缩放Y</summary>
        public float fColAABBScaleZ { get; set; }

        /// <summary> 碰撞框缩放Z</summary>
        public uint scale { get; set; }

        /// <summary> 缩放比</summary>
        public uint diaOffsetY { get; set; }

        /// <summary> 半身像高度参数</summary>
        public uint diaDistance { get; set; }

        /// <summary> 半身像缩放参数</summary>
        public int diaRotateX { get; set; }

        /// <summary> 半身像旋转参数X</summary>
        public uint quanOffsetY { get; set; }

        /// <summary> 全身像高度参数</summary>
        public uint quanDistance { get; set; }

        /// <summary> 全身像缩放参数</summary>
        public uint modelrange { get; set; }

        /// <summary> 模型半径</summary>
        public uint visitRotation { get; set; }

    }

    /// <summary> FILE: Npc表格.xlsm SHEET: NPC头顶标识 KEY: id</summary>
    public partial class NpcHeadMaskDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new NpcHeadMaskDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return NpcHeadMaskDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return NpcHeadMaskDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return NpcHeadMaskDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return NpcHeadMaskDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return NpcHeadMaskDataBase.Deserialize(buffer, (NpcHeadMaskDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return NpcHeadMaskDataBase.Deserialize(stream, (NpcHeadMaskDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return NpcHeadMaskDataBase.DeserializeLengthDelimited(stream, (NpcHeadMaskDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return NpcHeadMaskDataBase.DeserializeLength(stream, length, (NpcHeadMaskDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { NpcHeadMaskDataBase.Serialize(stream, (NpcHeadMaskDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return NpcHeadMaskDataBase.SerializeToBytes((NpcHeadMaskDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { NpcHeadMaskDataBase.SerializeLengthDelimited(stream, (NpcHeadMaskDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string campName { get; set; }

        /// <summary> 名称</summary>
        public string headMaskIcon { get; set; }

        /// <summary> 头顶标识图片</summary>
        public string miniMapMaskIcon { get; set; }

    }

    /// <summary> FILE: N女娲副本招募消耗表.xlsx SHEET: 招募消耗 KEY: id</summary>
    public partial class NWGuardDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new NWGuardDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return NWGuardDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return NWGuardDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return NWGuardDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return NWGuardDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return NWGuardDataBase.Deserialize(buffer, (NWGuardDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return NWGuardDataBase.Deserialize(stream, (NWGuardDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return NWGuardDataBase.DeserializeLengthDelimited(stream, (NWGuardDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return NWGuardDataBase.DeserializeLength(stream, length, (NWGuardDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { NWGuardDataBase.Serialize(stream, (NWGuardDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return NWGuardDataBase.SerializeToBytes((NWGuardDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { NWGuardDataBase.SerializeLengthDelimited(stream, (NWGuardDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public int guard_cost1 { get; set; }

        /// <summary> 招募1级消耗</summary>
        public int guard_cost2 { get; set; }

        /// <summary> 招募2级消耗</summary>
        public int guard_cost3 { get; set; }

        /// <summary> 招募3级消耗</summary>
        public int guard_cost4 { get; set; }

        /// <summary> 招募4级消耗</summary>
        public int lvup_cost1 { get; set; }

        /// <summary> 升2级消耗</summary>
        public int lvup_cost2 { get; set; }

        /// <summary> 升3级消耗</summary>
        public int lvup_cost3 { get; set; }

        /// <summary> 升4级消耗</summary>
        public int guard_id1 { get; set; }

        /// <summary> 1级招募ID</summary>
        public int guard_id2 { get; set; }

        /// <summary> 2级招募ID</summary>
        public int guard_id3 { get; set; }

        /// <summary> 3级招募ID</summary>
        public int guard_id4 { get; set; }

        /// <summary> 4级招募ID</summary>
        public string name { get; set; }

    }

    /// <summary> FILE: welfare福利.xlsm SHEET: 开服豪礼 KEY: ID</summary>
    public partial class OpenServerDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new OpenServerDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return OpenServerDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return OpenServerDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return OpenServerDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return OpenServerDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return OpenServerDataBase.Deserialize(buffer, (OpenServerDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return OpenServerDataBase.Deserialize(stream, (OpenServerDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return OpenServerDataBase.DeserializeLengthDelimited(stream, (OpenServerDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return OpenServerDataBase.DeserializeLength(stream, length, (OpenServerDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { OpenServerDataBase.Serialize(stream, (OpenServerDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return OpenServerDataBase.SerializeToBytes((OpenServerDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { OpenServerDataBase.SerializeLengthDelimited(stream, (OpenServerDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string name { get; set; }

        /// <summary> 描述</summary>
        public uint reward_id { get; set; }

        /// <summary> 奖励ID</summary>
        public uint reward_num { get; set; }

        /// <summary> 数量</summary>
        public string desc1 { get; set; }

        /// <summary> 奖励描述1</summary>
        public string desc2 { get; set; }

    }

    /// <summary> FILE: Panel面板信息.xlsx SHEET: UI KEY: id</summary>
    public partial class PanelInfoDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PanelInfoDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PanelInfoDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PanelInfoDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PanelInfoDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PanelInfoDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PanelInfoDataBase.Deserialize(buffer, (PanelInfoDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PanelInfoDataBase.Deserialize(stream, (PanelInfoDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PanelInfoDataBase.DeserializeLengthDelimited(stream, (PanelInfoDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PanelInfoDataBase.DeserializeLength(stream, length, (PanelInfoDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PanelInfoDataBase.Serialize(stream, (PanelInfoDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PanelInfoDataBase.SerializeToBytes((PanelInfoDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PanelInfoDataBase.SerializeLengthDelimited(stream, (PanelInfoDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string titleName { get; set; }

        /// <summary> 顶部栏显示名称</summary>
        public string panelIDEnumName { get; set; }

        /// <summary> 面板ID枚举名</summary>
        public uint resID { get; set; }

        /// <summary> UI资源ID</summary>
        public uint showSoundEffectID { get; set; }

        /// <summary> 展开音效</summary>
        public string dependenceRes { get; set; }

        /// <summary> 依赖资源</summary>
        public string mutexPanelStr { get; set; }

        /// <summary> 互斥面板</summary>
        public uint panelType { get; set; }

        /// <summary> 面板类型</summary>
        public uint collideMaskType { get; set; }

        /// <summary> 遮罩类型</summary>
        public uint needBg { get; set; }

        /// <summary> 是否需要公共背景</summary>
        public uint needTitle { get; set; }

        /// <summary> 是否需要顶部栏</summary>
        public string titleElement { get; set; }

        /// <summary> 顶部栏项</summary>
        public uint tabNum { get; set; }

        /// <summary> 页签数量</summary>
        public uint caculateFocus { get; set; }

        /// <summary> 是否进行焦点计算</summary>
        public string tabPosIndexValue { get; set; }

        /// <summary> 页签位置</summary>
        public string tabFuncIdValue { get; set; }

        /// <summary> 功能ID</summary>
        public string tabEnumValue { get; set; }

        /// <summary> 页签代码枚举</summary>
        public string tabName { get; set; }

        /// <summary> 页签名称</summary>
        public string tabObjName { get; set; }

        /// <summary> 页签对象名称</summary>
        public string tabTips { get; set; }

        /// <summary> 页签TIPS</summary>
        public string tabTipsText { get; set; }

        /// <summary> Tips文字</summary>
        public uint ignoreCache { get; set; }

        /// <summary> 忽略缓存</summary>
        public uint cacheLv { get; set; }

        /// <summary> 缓存界面等级</summary>
        public uint isStart { get; set; }

        /// <summary> 是否为起始面板</summary>
        public uint mainMask { get; set; }

        /// <summary> 主面板</summary>
        public uint normalMask { get; set; }

        /// <summary> 普通面板</summary>
        public uint smartPopMask { get; set; }

        /// <summary> 小弹窗</summary>
        public uint popMask { get; set; }

        /// <summary> 弹窗</summary>
        public uint fixedMask { get; set; }

        /// <summary> 顶部栏</summary>
        public uint commbgMask { get; set; }

        /// <summary> 公共背景</summary>
        public uint marqueenMask { get; set; }

        /// <summary> 跑马灯</summary>
        public uint guideMask { get; set; }

        /// <summary> 强制引导</summary>
        public uint newFuncMask { get; set; }

        /// <summary> 新功能开启</summary>
        public uint loadMask { get; set; }

        /// <summary> 加载Loading</summary>
        public uint reconnectMask { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 战魂 KEY: petID</summary>
    public partial class PetDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetDataBase.Deserialize(buffer, (PetDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetDataBase.Deserialize(stream, (PetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetDataBase.DeserializeLengthDelimited(stream, (PetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetDataBase.DeserializeLength(stream, length, (PetDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetDataBase.Serialize(stream, (PetDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetDataBase.SerializeToBytes((PetDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetDataBase.SerializeLengthDelimited(stream, (PetDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint petID { get; set; }

        /// <summary> 宠物ID</summary>
        public uint sortID { get; set; }

        /// <summary> 图鉴排序</summary>
        public string petName { get; set; }

        /// <summary> 种族名称</summary>
        public string icon { get; set; }

        /// <summary> 头像ICON</summary>
        public uint modelID { get; set; }

        /// <summary> 模型ID</summary>
        public uint viewModelID { get; set; }

        /// <summary> 展示界面模型ID</summary>
        public string UIPos { get; set; }

        /// <summary> UI位置</summary>
        public uint modelScale { get; set; }

        /// <summary> 缩放比例</summary>
        public uint petType { get; set; }

        /// <summary> 战魂类型</summary>
        public uint petQuality { get; set; }

        /// <summary> 品质</summary>
        public uint carryLevel { get; set; }

        /// <summary> 携带等级</summary>
        public uint petScore { get; set; }

        /// <summary> 评分</summary>
        public uint fragmentID { get; set; }

        /// <summary> 碎片ID</summary>
        public uint fragmentNum { get; set; }

        /// <summary> 碎片数量</summary>
        public string getPath { get; set; }

        /// <summary> 获取途径</summary>
        public string maxJiebian { get; set; }

        /// <summary> 最大劫变</summary>
        public uint int_maxJiebian { get; set; }

        /// <summary> 最大劫变1</summary>
        public string attackType { get; set; }

        /// <summary> 攻击类型</summary>
        public uint life { get; set; }

        /// <summary> 寿命</summary>
        public uint flag { get; set; }

        /// <summary> 分类标签</summary>
        public uint allocpower { get; set; }

        /// <summary> 力量</summary>
        public uint alloctizhi { get; set; }

        /// <summary> 体质</summary>
        public uint allocminjie { get; set; }

        /// <summary> 敏捷</summary>
        public uint alloczhili { get; set; }

        /// <summary> 智力</summary>
        public uint allocjingshen { get; set; }

        /// <summary> 精神</summary>
        public uint exPointType { get; set; }

        /// <summary> 额外配点</summary>
        public float cameraZPos { get; set; }

        /// <summary> 摄像机Z值</summary>
        public string PetTalent { get; set; }

        /// <summary> 天赋</summary>
        public uint getItemID { get; set; }

        /// <summary> 获取道具ID</summary>
        public uint suitGetWay { get; set; }

        /// <summary> 时装跳转ID</summary>
        public uint fightAudio { get; set; }

        /// <summary> 出战音效</summary>
        public uint ItemID { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 归元 KEY: quality + growStatus</summary>
    public partial class PetGuiYuanDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetGuiYuanDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetGuiYuanDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetGuiYuanDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetGuiYuanDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetGuiYuanDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetGuiYuanDataBase.Deserialize(buffer, (PetGuiYuanDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetGuiYuanDataBase.Deserialize(stream, (PetGuiYuanDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetGuiYuanDataBase.DeserializeLengthDelimited(stream, (PetGuiYuanDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetGuiYuanDataBase.DeserializeLength(stream, length, (PetGuiYuanDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetGuiYuanDataBase.Serialize(stream, (PetGuiYuanDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetGuiYuanDataBase.SerializeToBytes((PetGuiYuanDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetGuiYuanDataBase.SerializeLengthDelimited(stream, (PetGuiYuanDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint quality { get; set; }

        /// <summary> 宠物品质</summary>
        public uint growStatus { get; set; }

        /// <summary> 成长状态</summary>
        public uint consumeMoney { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 传承 KEY: petQuality</summary>
    public partial class PetInHeritDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetInHeritDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetInHeritDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetInHeritDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetInHeritDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetInHeritDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetInHeritDataBase.Deserialize(buffer, (PetInHeritDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetInHeritDataBase.Deserialize(stream, (PetInHeritDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetInHeritDataBase.DeserializeLengthDelimited(stream, (PetInHeritDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetInHeritDataBase.DeserializeLength(stream, length, (PetInHeritDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetInHeritDataBase.Serialize(stream, (PetInHeritDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetInHeritDataBase.SerializeToBytes((PetInHeritDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetInHeritDataBase.SerializeLengthDelimited(stream, (PetInHeritDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint petQuality { get; set; }

        /// <summary> 品质</summary>
        public uint costItem { get; set; }

        /// <summary> 消耗道具</summary>
        public uint expInheritNum { get; set; }

        /// <summary> 经验传承数量</summary>
        public uint skillInheritNum { get; set; }

        /// <summary> 技能传承数量</summary>
        public uint yinhunInheritNum { get; set; }

        /// <summary> 修灵传承数量</summary>
        public uint moneyType { get; set; }

        /// <summary> 消耗货币类型</summary>
        public uint expInheritMoney { get; set; }

        /// <summary> 经验传承货币</summary>
        public uint skillInheritMoney { get; set; }

        /// <summary> 技能传承货币</summary>
        public uint yinhunInheritMoney { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 技能推荐 KEY: petType + petCharacter</summary>
    public partial class PetRecommendDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetRecommendDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetRecommendDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetRecommendDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetRecommendDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetRecommendDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetRecommendDataBase.Deserialize(buffer, (PetRecommendDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetRecommendDataBase.Deserialize(stream, (PetRecommendDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetRecommendDataBase.DeserializeLengthDelimited(stream, (PetRecommendDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetRecommendDataBase.DeserializeLength(stream, length, (PetRecommendDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetRecommendDataBase.Serialize(stream, (PetRecommendDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetRecommendDataBase.SerializeToBytes((PetRecommendDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetRecommendDataBase.SerializeLengthDelimited(stream, (PetRecommendDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint petType { get; set; }

        /// <summary> 战魂类型</summary>
        public uint petCharacter { get; set; }

        /// <summary> 战魂性格</summary>
        public string skillArray { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 技能学习 KEY: skillNum</summary>
    public partial class PetSkillLearnDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetSkillLearnDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetSkillLearnDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetSkillLearnDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetSkillLearnDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetSkillLearnDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetSkillLearnDataBase.Deserialize(buffer, (PetSkillLearnDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetSkillLearnDataBase.Deserialize(stream, (PetSkillLearnDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetSkillLearnDataBase.DeserializeLengthDelimited(stream, (PetSkillLearnDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetSkillLearnDataBase.DeserializeLength(stream, length, (PetSkillLearnDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetSkillLearnDataBase.Serialize(stream, (PetSkillLearnDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetSkillLearnDataBase.SerializeToBytes((PetSkillLearnDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetSkillLearnDataBase.SerializeLengthDelimited(stream, (PetSkillLearnDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint skillNum { get; set; }

        /// <summary> 技能数量</summary>
        public uint newSkill { get; set; }

        /// <summary> 新技能概率</summary>
        public uint needDianJuan { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 技能释放 KEY: skillID</summary>
    public partial class PetSkillLevelUpDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetSkillLevelUpDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetSkillLevelUpDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetSkillLevelUpDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetSkillLevelUpDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetSkillLevelUpDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetSkillLevelUpDataBase.Deserialize(buffer, (PetSkillLevelUpDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetSkillLevelUpDataBase.Deserialize(stream, (PetSkillLevelUpDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetSkillLevelUpDataBase.DeserializeLengthDelimited(stream, (PetSkillLevelUpDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetSkillLevelUpDataBase.DeserializeLength(stream, length, (PetSkillLevelUpDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetSkillLevelUpDataBase.Serialize(stream, (PetSkillLevelUpDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetSkillLevelUpDataBase.SerializeToBytes((PetSkillLevelUpDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetSkillLevelUpDataBase.SerializeLengthDelimited(stream, (PetSkillLevelUpDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint skillID { get; set; }

        /// <summary> 技能ID</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint danXiaoGaiLv { get; set; }

        /// <summary> 胆小概率</summary>
        public uint jinShenGaiLv { get; set; }

        /// <summary> 谨慎概率</summary>
        public uint jingMingGaiLv { get; set; }

        /// <summary> 精明概率</summary>
        public uint puTongGaiLv { get; set; }

        /// <summary> 普通概率</summary>
        public uint yongGanGaiLv { get; set; }

        /// <summary> 勇敢概率</summary>
        public uint wuMouGaiLv { get; set; }

        /// <summary> 无谋概率</summary>
        public uint zhongChengGaiLv { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 升级 KEY: level + petID</summary>
    public partial class PetUpGradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetUpGradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetUpGradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetUpGradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetUpGradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetUpGradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetUpGradeDataBase.Deserialize(buffer, (PetUpGradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetUpGradeDataBase.Deserialize(stream, (PetUpGradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetUpGradeDataBase.DeserializeLengthDelimited(stream, (PetUpGradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetUpGradeDataBase.DeserializeLength(stream, length, (PetUpGradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetUpGradeDataBase.Serialize(stream, (PetUpGradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetUpGradeDataBase.SerializeToBytes((PetUpGradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetUpGradeDataBase.SerializeLengthDelimited(stream, (PetUpGradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint level { get; set; }

        /// <summary> 等级</summary>
        public uint petID { get; set; }

        /// <summary> 宠物ID</summary>
        public uint upGradeExp { get; set; }

        /// <summary> 升级经验</summary>
        public uint power { get; set; }

        /// <summary> 力量</summary>
        public uint tizhi { get; set; }

        /// <summary> 体质</summary>
        public uint minjie { get; set; }

        /// <summary> 敏捷</summary>
        public uint zhili { get; set; }

        /// <summary> 智力</summary>
        public uint jingshen { get; set; }

        /// <summary> 精神</summary>
        public uint maxHp { get; set; }

    }

    /// <summary> FILE: Pet_战魂表.xlsm SHEET: 引魂 KEY: level</summary>
    public partial class PetYinHunDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PetYinHunDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PetYinHunDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PetYinHunDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PetYinHunDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PetYinHunDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PetYinHunDataBase.Deserialize(buffer, (PetYinHunDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PetYinHunDataBase.Deserialize(stream, (PetYinHunDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PetYinHunDataBase.DeserializeLengthDelimited(stream, (PetYinHunDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PetYinHunDataBase.DeserializeLength(stream, length, (PetYinHunDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PetYinHunDataBase.Serialize(stream, (PetYinHunDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PetYinHunDataBase.SerializeToBytes((PetYinHunDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PetYinHunDataBase.SerializeLengthDelimited(stream, (PetYinHunDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint level { get; set; }

        /// <summary> 修为等级</summary>
        public uint lingQiMax { get; set; }

        /// <summary> 灵气上限</summary>
        public uint jiaChengBi { get; set; }

        /// <summary> 加成比</summary>
        public uint needItem { get; set; }

        /// <summary> 消耗道具</summary>
        public uint addExp { get; set; }

        /// <summary> 增加经验</summary>
        public uint needMoney { get; set; }

    }

    /// <summary> FILE: PK模式表.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class PkMode : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PkMode(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PkMode.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PkMode.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PkMode.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PkMode.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PkMode.Deserialize(buffer, (PkMode)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PkMode.Deserialize(stream, (PkMode)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PkMode.DeserializeLengthDelimited(stream, (PkMode)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PkMode.DeserializeLength(stream, length, (PkMode)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PkMode.Serialize(stream, (PkMode)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PkMode.SerializeToBytes((PkMode)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PkMode.SerializeLengthDelimited(stream, (PkMode)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> PK模式</summary>
        public uint dwIconGrp { get; set; }

        /// <summary> 图标组</summary>
        public uint dwIcon { get; set; }

        /// <summary> 图标</summary>
        public string strName { get; set; }

        /// <summary> 描述</summary>
        public string strDesc { get; set; }

    }

    /// <summary> FILE: Store_商城表.xlsm SHEET: 元宝代消耗 KEY: itemID</summary>
    public partial class PointConsumeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PointConsumeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PointConsumeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PointConsumeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PointConsumeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PointConsumeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PointConsumeDataBase.Deserialize(buffer, (PointConsumeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PointConsumeDataBase.Deserialize(stream, (PointConsumeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PointConsumeDataBase.DeserializeLengthDelimited(stream, (PointConsumeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PointConsumeDataBase.DeserializeLength(stream, length, (PointConsumeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PointConsumeDataBase.Serialize(stream, (PointConsumeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PointConsumeDataBase.SerializeToBytes((PointConsumeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PointConsumeDataBase.SerializeLengthDelimited(stream, (PointConsumeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint itemID { get; set; }

        /// <summary> 道具ID</summary>
        public uint buyPrice { get; set; }

    }

    /// <summary> FILE: Preload预加载.xlsx SHEET: 资源预加载 KEY: dwID</summary>
    public partial class PreloadResDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PreloadResDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PreloadResDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PreloadResDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PreloadResDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PreloadResDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PreloadResDataBase.Deserialize(buffer, (PreloadResDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PreloadResDataBase.Deserialize(stream, (PreloadResDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PreloadResDataBase.DeserializeLengthDelimited(stream, (PreloadResDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PreloadResDataBase.DeserializeLength(stream, length, (PreloadResDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PreloadResDataBase.Serialize(stream, (PreloadResDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PreloadResDataBase.SerializeToBytes((PreloadResDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PreloadResDataBase.SerializeLengthDelimited(stream, (PreloadResDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 资源ID</summary>
        public string path { get; set; }

        /// <summary> 资源名</summary>
        public uint num { get; set; }

        /// <summary> 预加载数量</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public uint job { get; set; }

    }

    /// <summary> FILE: Preload预加载.xlsx SHEET: 技能特效资源预加载 KEY: skillId</summary>
    public partial class PreloadSkillResDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PreloadSkillResDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PreloadSkillResDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PreloadSkillResDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PreloadSkillResDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PreloadSkillResDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PreloadSkillResDataBase.Deserialize(buffer, (PreloadSkillResDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PreloadSkillResDataBase.Deserialize(stream, (PreloadSkillResDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PreloadSkillResDataBase.DeserializeLengthDelimited(stream, (PreloadSkillResDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PreloadSkillResDataBase.DeserializeLength(stream, length, (PreloadSkillResDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PreloadSkillResDataBase.Serialize(stream, (PreloadSkillResDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PreloadSkillResDataBase.SerializeToBytes((PreloadSkillResDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PreloadSkillResDataBase.SerializeLengthDelimited(stream, (PreloadSkillResDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint skillId { get; set; }

        /// <summary> 技能ID</summary>
        public string pathArr { get; set; }

        /// <summary> 资源名</summary>
        public uint job { get; set; }

    }

    /// <summary> FILE: 省列表.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class ProvinceDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ProvinceDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ProvinceDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ProvinceDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ProvinceDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ProvinceDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ProvinceDataBase.Deserialize(buffer, (ProvinceDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ProvinceDataBase.Deserialize(stream, (ProvinceDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ProvinceDataBase.DeserializeLengthDelimited(stream, (ProvinceDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ProvinceDataBase.DeserializeLength(stream, length, (ProvinceDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ProvinceDataBase.Serialize(stream, (ProvinceDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ProvinceDataBase.SerializeToBytes((ProvinceDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ProvinceDataBase.SerializeLengthDelimited(stream, (ProvinceDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 省ID</summary>
        public string strName { get; set; }

        /// <summary> 省名称</summary>
        public string strCityIDs { get; set; }

    }

    /// <summary> FILE: R令牌表.xlsx SHEET: 发布悬赏 KEY: id</summary>
    public partial class PublicTokenDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new PublicTokenDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return PublicTokenDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return PublicTokenDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return PublicTokenDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return PublicTokenDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return PublicTokenDataBase.Deserialize(buffer, (PublicTokenDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return PublicTokenDataBase.Deserialize(stream, (PublicTokenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return PublicTokenDataBase.DeserializeLengthDelimited(stream, (PublicTokenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return PublicTokenDataBase.DeserializeLength(stream, length, (PublicTokenDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { PublicTokenDataBase.Serialize(stream, (PublicTokenDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return PublicTokenDataBase.SerializeToBytes((PublicTokenDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { PublicTokenDataBase.SerializeLengthDelimited(stream, (PublicTokenDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> id</summary>
        public string title { get; set; }

        /// <summary> 令牌</summary>
        public string icon { get; set; }

        /// <summary> 图标名</summary>
        public string smallicon { get; set; }

        /// <summary> 小图标</summary>
        public uint openLvele { get; set; }

        /// <summary> 解锁等级</summary>
        public uint tokenItemid { get; set; }

        /// <summary> 消耗物品</summary>
        public uint exp { get; set; }

        /// <summary> 奖励经验</summary>
        public uint taskid { get; set; }

        /// <summary> 任务id</summary>
        public uint bgId { get; set; }

    }

    /// <summary> FILE: Task表格.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class QuestDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new QuestDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return QuestDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return QuestDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return QuestDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return QuestDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return QuestDataBase.Deserialize(buffer, (QuestDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return QuestDataBase.Deserialize(stream, (QuestDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return QuestDataBase.DeserializeLengthDelimited(stream, (QuestDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return QuestDataBase.DeserializeLength(stream, length, (QuestDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { QuestDataBase.Serialize(stream, (QuestDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return QuestDataBase.SerializeToBytes((QuestDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { QuestDataBase.SerializeLengthDelimited(stream, (QuestDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 任务编号</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint dwType { get; set; }

        /// <summary> 类型</summary>
        public uint job { get; set; }

        /// <summary> 职业</summary>
        public uint dwSubType { get; set; }

        /// <summary> 子类型</summary>
        public uint acceptMapID { get; set; }

        /// <summary> 接取地图</summary>
        public uint destMapID { get; set; }

        /// <summary> 执行地图</summary>
        public uint submitMapID { get; set; }

        /// <summary> 完成地图</summary>
        public uint dwMinLevel { get; set; }

        /// <summary> 最低等级</summary>
        public uint dwMaxLevel { get; set; }

        /// <summary> 最高等级</summary>
        public string dwPreTask { get; set; }

        /// <summary> 前置任务</summary>
        public string dwStrTarget { get; set; }

        /// <summary> 任务提示</summary>
        public uint dwBeginNpc { get; set; }

        /// <summary> 接任务NPC</summary>
        public uint dwDoingNpc { get; set; }

        /// <summary> 执行中NPC</summary>
        public uint dwEndNpc { get; set; }

        /// <summary> 交任务NPC</summary>
        public string dwDesc { get; set; }

        /// <summary> 任务描述</summary>
        public uint finishlevel { get; set; }

        /// <summary> 完成等级</summary>
        public bool dwAutoAccept { get; set; }

        /// <summary> 开启自动接取</summary>
        public bool dwAuto { get; set; }

        /// <summary> 开启自动寻路</summary>
        public bool dwAutoCommit { get; set; }

        /// <summary> 开启自动寻路交</summary>
        public bool dwAutoCanDone { get; set; }

        /// <summary> 开启自动完成</summary>
        public uint dwLimitTime { get; set; }

        /// <summary> 时间限制</summary>
        public uint dwRewardExp { get; set; }

        /// <summary> 奖励经验</summary>
        public uint dwTranceId { get; set; }

        /// <summary> 任务追踪（含随机参数）</summary>
        public string strTaskReceive { get; set; }

        /// <summary> 任务可接取</summary>
        public string strTaskTraceBegin { get; set; }

        /// <summary> 任务追踪接取</summary>
        public string strTaskTraceEnd { get; set; }

        /// <summary> 任务追踪完成</summary>
        public bool dwHelpGoto { get; set; }

        /// <summary> 瞬间跨地图接取</summary>
        public bool dwHelpCommit { get; set; }

        /// <summary> 瞬间跨地图完成</summary>
        public bool dwHelpDoing { get; set; }

        /// <summary> 瞬间跨地图执行</summary>
        public bool IsDynamicCommitItem { get; set; }

        /// <summary> 随机递交道具</summary>
        public uint startStatus { get; set; }

        /// <summary> 初始状态</summary>
        public uint collect_npc { get; set; }

        /// <summary> 采集NPC</summary>
        public uint monster_npc { get; set; }

        /// <summary> 目标怪物</summary>
        public uint usecommitItemID { get; set; }

        /// <summary> 使用或递交道具</summary>
        public uint doingShowUI { get; set; }

        /// <summary> 执行打开界面</summary>
        public uint commitShowUI { get; set; }

        /// <summary> 完成打开界面</summary>
        public string gotoPos { get; set; }

        /// <summary> 跑到固定点</summary>
        public uint target_group { get; set; }

        /// <summary> 随机目标组</summary>
        public uint copyId { get; set; }

    }

    /// <summary> FILE: questionnaire问卷.xlsx SHEET: Sheet1 KEY: ID</summary>
    public partial class QuestionDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new QuestionDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return QuestionDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return QuestionDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return QuestionDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return QuestionDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return QuestionDataBase.Deserialize(buffer, (QuestionDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return QuestionDataBase.Deserialize(stream, (QuestionDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return QuestionDataBase.DeserializeLengthDelimited(stream, (QuestionDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return QuestionDataBase.DeserializeLength(stream, length, (QuestionDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { QuestionDataBase.Serialize(stream, (QuestionDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return QuestionDataBase.SerializeToBytes((QuestionDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { QuestionDataBase.SerializeLengthDelimited(stream, (QuestionDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public uint sub_type { get; set; }

        /// <summary> 子类型</summary>
        public string tagName { get; set; }

        /// <summary> 标签页</summary>
        public string title { get; set; }

        /// <summary> 标题</summary>
        public string descr { get; set; }

        /// <summary> 描述</summary>
        public string money_reward { get; set; }

        /// <summary> 货币奖励</summary>
        public string item_reward { get; set; }

        /// <summary> 道具奖励</summary>
        public string H5Address { get; set; }

        /// <summary> H5地址</summary>
        public uint rewarn_time { get; set; }

    }

    /// <summary> FILE: Task表格.xlsm SHEET: 随机item KEY: itemId</summary>
    public partial class QuestItemDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new QuestItemDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return QuestItemDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return QuestItemDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return QuestItemDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return QuestItemDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return QuestItemDataBase.Deserialize(buffer, (QuestItemDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return QuestItemDataBase.Deserialize(stream, (QuestItemDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return QuestItemDataBase.DeserializeLengthDelimited(stream, (QuestItemDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return QuestItemDataBase.DeserializeLength(stream, length, (QuestItemDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { QuestItemDataBase.Serialize(stream, (QuestItemDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return QuestItemDataBase.SerializeToBytes((QuestItemDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { QuestItemDataBase.SerializeLengthDelimited(stream, (QuestItemDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint itemId { get; set; }

        /// <summary> 道具ID</summary>
        public uint dwSubType { get; set; }

        /// <summary> 类型</summary>
        public string strName { get; set; }

        /// <summary> 名字</summary>
        public uint mapId { get; set; }

        /// <summary> 地图</summary>
        public uint pos_x { get; set; }

        /// <summary> 坐标X</summary>
        public uint pos_y { get; set; }

        /// <summary> 坐标Y</summary>
        public uint jumpId { get; set; }

        /// <summary> 跳转途径</summary>
        public uint destMapID { get; set; }

        /// <summary> 执行地图</summary>
        public uint monster_npc { get; set; }

    }

    /// <summary> FILE: 随机名字.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class RandomNameDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RandomNameDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RandomNameDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RandomNameDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RandomNameDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RandomNameDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RandomNameDataBase.Deserialize(buffer, (RandomNameDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RandomNameDataBase.Deserialize(stream, (RandomNameDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RandomNameDataBase.DeserializeLengthDelimited(stream, (RandomNameDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RandomNameDataBase.DeserializeLength(stream, length, (RandomNameDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RandomNameDataBase.Serialize(stream, (RandomNameDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RandomNameDataBase.SerializeToBytes((RandomNameDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RandomNameDataBase.SerializeLengthDelimited(stream, (RandomNameDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public string namePrefix { get; set; }

        /// <summary> 前缀</summary>
        public string maleName { get; set; }

        /// <summary> 男</summary>
        public string femaleName { get; set; }

    }

    /// <summary> FILE: S随机目标物表.xlsx SHEET: Sheet1 KEY: dwID</summary>
    public partial class RandomTargetDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RandomTargetDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RandomTargetDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RandomTargetDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RandomTargetDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RandomTargetDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RandomTargetDataBase.Deserialize(buffer, (RandomTargetDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RandomTargetDataBase.Deserialize(stream, (RandomTargetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RandomTargetDataBase.DeserializeLengthDelimited(stream, (RandomTargetDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RandomTargetDataBase.DeserializeLength(stream, length, (RandomTargetDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RandomTargetDataBase.Serialize(stream, (RandomTargetDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RandomTargetDataBase.SerializeToBytes((RandomTargetDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RandomTargetDataBase.SerializeLengthDelimited(stream, (RandomTargetDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> id</summary>
        public uint group { get; set; }

        /// <summary> 目标组ID</summary>
        public uint level { get; set; }

        /// <summary> 人物等级</summary>
        public uint exp_ratio { get; set; }

        /// <summary> 等级经验系数</summary>
        public uint activity_type { get; set; }

    }

    /// <summary> FILE: 排行榜.xlsm SHEET: 榜单要素 KEY: ID</summary>
    public partial class RankDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RankDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RankDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RankDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RankDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RankDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RankDataBase.Deserialize(buffer, (RankDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RankDataBase.Deserialize(stream, (RankDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RankDataBase.DeserializeLengthDelimited(stream, (RankDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RankDataBase.DeserializeLength(stream, length, (RankDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RankDataBase.Serialize(stream, (RankDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RankDataBase.SerializeToBytes((RankDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RankDataBase.SerializeLengthDelimited(stream, (RankDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string line1 { get; set; }

        /// <summary> 列1描述</summary>
        public string line2 { get; set; }

        /// <summary> 列2描述</summary>
        public string line3 { get; set; }

        /// <summary> 列3描述</summary>
        public string line4 { get; set; }

        /// <summary> 列4描述</summary>
        public string line5 { get; set; }

    }

    /// <summary> FILE: 排行榜.xlsm SHEET: 排行依据 KEY: mainID + childID</summary>
    public partial class RankTypeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RankTypeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RankTypeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RankTypeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RankTypeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RankTypeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RankTypeDataBase.Deserialize(buffer, (RankTypeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RankTypeDataBase.Deserialize(stream, (RankTypeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RankTypeDataBase.DeserializeLengthDelimited(stream, (RankTypeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RankTypeDataBase.DeserializeLength(stream, length, (RankTypeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RankTypeDataBase.Serialize(stream, (RankTypeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RankTypeDataBase.SerializeToBytes((RankTypeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RankTypeDataBase.SerializeLengthDelimited(stream, (RankTypeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint mainID { get; set; }

        /// <summary> 主类ID</summary>
        public string mainName { get; set; }

        /// <summary> 主类名</summary>
        public uint childID { get; set; }

        /// <summary> 子类ID</summary>
        public string childName { get; set; }

        /// <summary> 子类名</summary>
        public string param { get; set; }

    }

    /// <summary> FILE: welfare福利.xlsm SHEET: 充值消费 KEY: ID</summary>
    public partial class RechargeCostDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RechargeCostDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RechargeCostDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RechargeCostDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RechargeCostDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RechargeCostDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RechargeCostDataBase.Deserialize(buffer, (RechargeCostDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RechargeCostDataBase.Deserialize(stream, (RechargeCostDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RechargeCostDataBase.DeserializeLengthDelimited(stream, (RechargeCostDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RechargeCostDataBase.DeserializeLength(stream, length, (RechargeCostDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RechargeCostDataBase.Serialize(stream, (RechargeCostDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RechargeCostDataBase.SerializeToBytes((RechargeCostDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RechargeCostDataBase.SerializeLengthDelimited(stream, (RechargeCostDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public uint parameter { get; set; }

        /// <summary> 参数1</summary>
        public uint parameter2 { get; set; }

        /// <summary> 参数2</summary>
        public string title { get; set; }

        /// <summary> 名称</summary>
        public string desc { get; set; }

        /// <summary> 描述</summary>
        public string reward { get; set; }

        /// <summary> 奖励列表</summary>
        public string timeID { get; set; }

        /// <summary> 时间ID</summary>
        public uint rechargeID { get; set; }

        /// <summary> 充值ID</summary>
        public uint textureResID { get; set; }

        /// <summary> 美术字资源ID</summary>
        public uint sortID { get; set; }

        /// <summary> 排序ID</summary>
        public bool isPutInAccumulative { get; set; }

        /// <summary> 是否放入每日累充界面</summary>
        public uint scheduleID { get; set; }

    }

    /// <summary> FILE: Recharge充值.xlsx SHEET: Sheet1 KEY: dwID</summary>
    public partial class RechargeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RechargeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RechargeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RechargeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RechargeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RechargeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RechargeDataBase.Deserialize(buffer, (RechargeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RechargeDataBase.Deserialize(stream, (RechargeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RechargeDataBase.DeserializeLengthDelimited(stream, (RechargeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RechargeDataBase.DeserializeLength(stream, length, (RechargeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RechargeDataBase.Serialize(stream, (RechargeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RechargeDataBase.SerializeToBytes((RechargeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RechargeDataBase.SerializeLengthDelimited(stream, (RechargeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public string rechargeName { get; set; }

        /// <summary> 名称</summary>
        public string desc { get; set; }

        /// <summary> 描述</summary>
        public string firstRechargeDes { get; set; }

        /// <summary> 首充描述</summary>
        public string rechargeDes { get; set; }

        /// <summary> 非首充描述</summary>
        public uint rechargeType { get; set; }

        /// <summary> 类别</summary>
        public uint type { get; set; }

        /// <summary> 渠道类型</summary>
        public uint money { get; set; }

        /// <summary> 充值金额（人民币）</summary>
        public uint kehuodianquan { get; set; }

        /// <summary> 可获元宝</summary>
        public uint firstzengsongdianquan { get; set; }

        /// <summary> 首充获赠元宝</summary>
        public uint feishouchonghuozeng { get; set; }

        /// <summary> 非首充获赠绑元</summary>
        public string icon { get; set; }

        /// <summary> 图标</summary>
        public string iosIAPId { get; set; }

    }

    /// <summary> FILE: Map.xlsm SHEET: 复活方式 KEY: dwID</summary>
    public partial class ReliveDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ReliveDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ReliveDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ReliveDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ReliveDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ReliveDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ReliveDataBase.Deserialize(buffer, (ReliveDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ReliveDataBase.Deserialize(stream, (ReliveDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ReliveDataBase.DeserializeLengthDelimited(stream, (ReliveDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ReliveDataBase.DeserializeLength(stream, length, (ReliveDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ReliveDataBase.Serialize(stream, (ReliveDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ReliveDataBase.SerializeToBytes((ReliveDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ReliveDataBase.SerializeLengthDelimited(stream, (ReliveDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 复活ID</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint CD { get; set; }

        /// <summary> 倒计时</summary>
        public uint moneyType { get; set; }

        /// <summary> 货币类型</summary>
        public uint costStart { get; set; }

        /// <summary> 消耗初始值</summary>
        public uint costAdd { get; set; }

        /// <summary> 消耗递增值</summary>
        public uint costMax { get; set; }

        /// <summary> 消耗最大值</summary>
        public uint btnEnable { get; set; }

    }

    /// <summary> FILE: Resource.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class ResourceDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ResourceDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ResourceDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ResourceDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ResourceDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ResourceDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ResourceDataBase.Deserialize(buffer, (ResourceDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ResourceDataBase.Deserialize(stream, (ResourceDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ResourceDataBase.DeserializeLengthDelimited(stream, (ResourceDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ResourceDataBase.DeserializeLength(stream, length, (ResourceDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ResourceDataBase.Serialize(stream, (ResourceDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ResourceDataBase.SerializeToBytes((ResourceDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ResourceDataBase.SerializeLengthDelimited(stream, (ResourceDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string strPath { get; set; }

    }

    /// <summary> FILE: RewardFind.xlsm SHEET: Sheet1 KEY: dwLv + dwID</summary>
    public partial class RewardFindDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RewardFindDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RewardFindDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RewardFindDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RewardFindDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RewardFindDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RewardFindDataBase.Deserialize(buffer, (RewardFindDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RewardFindDataBase.Deserialize(stream, (RewardFindDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RewardFindDataBase.DeserializeLengthDelimited(stream, (RewardFindDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RewardFindDataBase.DeserializeLength(stream, length, (RewardFindDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RewardFindDataBase.Serialize(stream, (RewardFindDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RewardFindDataBase.SerializeToBytes((RewardFindDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RewardFindDataBase.SerializeLengthDelimited(stream, (RewardFindDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwLv { get; set; }

        /// <summary> 玩家等级</summary>
        public uint dwID { get; set; }

        /// <summary> 日常ID</summary>
        public uint maxTimes { get; set; }

        /// <summary> 最大找回次数</summary>
        public string rewards { get; set; }

        /// <summary> 奖励列表</summary>
        public uint ord_Type { get; set; }

        /// <summary> 普通货币类型</summary>
        public uint ord_Num { get; set; }

        /// <summary> 普通货币数量</summary>
        public uint pre_Type { get; set; }

        /// <summary> 完美货币类型</summary>
        public uint pre_Num { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 坐骑 KEY: rideID</summary>
    public partial class RideDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RideDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RideDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RideDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RideDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RideDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RideDataBase.Deserialize(buffer, (RideDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RideDataBase.Deserialize(stream, (RideDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RideDataBase.DeserializeLengthDelimited(stream, (RideDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RideDataBase.DeserializeLength(stream, length, (RideDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RideDataBase.Serialize(stream, (RideDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RideDataBase.SerializeToBytes((RideDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RideDataBase.SerializeLengthDelimited(stream, (RideDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint rideID { get; set; }

        /// <summary> 坐骑ID</summary>
        public string name { get; set; }

        /// <summary> 坐骑名称</summary>
        public string icon { get; set; }

        /// <summary> 坐骑图标</summary>
        public uint resid { get; set; }

        /// <summary> 坐骑模型</summary>
        public uint viewresid { get; set; }

        /// <summary> 坐骑展示模型</summary>
        public uint quality { get; set; }

        /// <summary> 品质</summary>
        public uint maxRepletion { get; set; }

        /// <summary> 饱食度上限</summary>
        public uint life { get; set; }

        /// <summary> 寿命</summary>
        public uint subLife { get; set; }

        /// <summary> 封印减少寿命</summary>
        public uint sealItemID { get; set; }

        /// <summary> 封印道具ID</summary>
        public uint spellTime { get; set; }

        /// <summary> 骑乘读条时长</summary>
        public uint modelScale { get; set; }

        /// <summary> 缩放比</summary>
        public string getWay { get; set; }

        /// <summary> 获得途径</summary>
        public uint quanOffsetY { get; set; }

        /// <summary> 全身像高度参数</summary>
        public uint quanDistance { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 扩充 KEY: expandNum</summary>
    public partial class RideExpandData : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RideExpandData(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RideExpandData.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RideExpandData.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RideExpandData.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RideExpandData.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RideExpandData.Deserialize(buffer, (RideExpandData)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RideExpandData.Deserialize(stream, (RideExpandData)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RideExpandData.DeserializeLengthDelimited(stream, (RideExpandData)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RideExpandData.DeserializeLength(stream, length, (RideExpandData)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RideExpandData.Serialize(stream, (RideExpandData)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RideExpandData.SerializeToBytes((RideExpandData)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RideExpandData.SerializeLengthDelimited(stream, (RideExpandData)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint expandNum { get; set; }

        /// <summary> 扩充次数</summary>
        public uint cost { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 养成 KEY: rideId + level</summary>
    public partial class RideFeedData : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RideFeedData(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RideFeedData.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RideFeedData.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RideFeedData.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RideFeedData.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RideFeedData.Deserialize(buffer, (RideFeedData)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RideFeedData.Deserialize(stream, (RideFeedData)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RideFeedData.DeserializeLengthDelimited(stream, (RideFeedData)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RideFeedData.DeserializeLength(stream, length, (RideFeedData)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RideFeedData.Serialize(stream, (RideFeedData)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RideFeedData.SerializeToBytes((RideFeedData)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RideFeedData.SerializeLengthDelimited(stream, (RideFeedData)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint rideId { get; set; }

        /// <summary> 坐骑ID</summary>
        public uint level { get; set; }

        /// <summary> 等级</summary>
        public uint maxLevel { get; set; }

        /// <summary> 最高等级</summary>
        public uint upExp { get; set; }

        /// <summary> 升级经验</summary>
        public uint speed { get; set; }

        /// <summary> 速度加成</summary>
        public uint fightPower { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 技能 KEY: rideId + rideLevel</summary>
    public partial class RideSkillData : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RideSkillData(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RideSkillData.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RideSkillData.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RideSkillData.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RideSkillData.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RideSkillData.Deserialize(buffer, (RideSkillData)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RideSkillData.Deserialize(stream, (RideSkillData)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RideSkillData.DeserializeLengthDelimited(stream, (RideSkillData)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RideSkillData.DeserializeLength(stream, length, (RideSkillData)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RideSkillData.Serialize(stream, (RideSkillData)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RideSkillData.SerializeToBytes((RideSkillData)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RideSkillData.SerializeLengthDelimited(stream, (RideSkillData)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public RideSkillData()
        {
            skillArray = new List<uint>();
        }
        public uint rideId { get; set; }

        /// <summary> 坐骑ID</summary>
        public uint rideLevel { get; set; }

        /// <summary> 坐骑等级</summary>
        public List<uint> skillArray { get; set; }

    }

    /// <summary> FILE: Ride坐骑.xlsx SHEET: 技能使用 KEY: skillId</summary>
    public partial class RideSkillDes : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RideSkillDes(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RideSkillDes.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RideSkillDes.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RideSkillDes.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RideSkillDes.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RideSkillDes.Deserialize(buffer, (RideSkillDes)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RideSkillDes.Deserialize(stream, (RideSkillDes)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RideSkillDes.DeserializeLengthDelimited(stream, (RideSkillDes)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RideSkillDes.DeserializeLength(stream, length, (RideSkillDes)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RideSkillDes.Serialize(stream, (RideSkillDes)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RideSkillDes.SerializeToBytes((RideSkillDes)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RideSkillDes.SerializeLengthDelimited(stream, (RideSkillDes)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint skillId { get; set; }

        /// <summary> 技能ID</summary>
        public string skillName { get; set; }

        /// <summary> 技能名</summary>
        public string skillDesc { get; set; }

        /// <summary> 描述</summary>
        public uint costrepletion { get; set; }

        /// <summary> 消耗饱食度</summary>
        public uint skillCD { get; set; }

        /// <summary> 技能CD</summary>
        public string skillIcon { get; set; }

    }

    /// <summary> FILE: Answer答题.xlsx SHEET: 限时答题 KEY: ID</summary>
    public partial class RightOrWrongDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RightOrWrongDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RightOrWrongDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RightOrWrongDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RightOrWrongDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RightOrWrongDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RightOrWrongDataBase.Deserialize(buffer, (RightOrWrongDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RightOrWrongDataBase.Deserialize(stream, (RightOrWrongDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RightOrWrongDataBase.DeserializeLengthDelimited(stream, (RightOrWrongDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RightOrWrongDataBase.DeserializeLength(stream, length, (RightOrWrongDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RightOrWrongDataBase.Serialize(stream, (RightOrWrongDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RightOrWrongDataBase.SerializeToBytes((RightOrWrongDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RightOrWrongDataBase.SerializeLengthDelimited(stream, (RightOrWrongDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string answer { get; set; }

    }

    /// <summary> FILE: Robot.xlsx SHEET: 野外机器人 KEY: dwJob + dwLevel</summary>
    public partial class RobotDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RobotDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RobotDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RobotDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RobotDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RobotDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RobotDataBase.Deserialize(buffer, (RobotDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RobotDataBase.Deserialize(stream, (RobotDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RobotDataBase.DeserializeLengthDelimited(stream, (RobotDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RobotDataBase.DeserializeLength(stream, length, (RobotDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RobotDataBase.Serialize(stream, (RobotDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RobotDataBase.SerializeToBytes((RobotDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RobotDataBase.SerializeLengthDelimited(stream, (RobotDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwJob { get; set; }

        /// <summary> 职业</summary>
        public uint dwLevel { get; set; }

        /// <summary> 等级</summary>
        public uint pdam { get; set; }

        /// <summary> 物理攻击</summary>
        public uint mdam { get; set; }

        /// <summary> 法术攻击</summary>
        public uint pdef { get; set; }

        /// <summary> 物理防御</summary>
        public uint mdef { get; set; }

        /// <summary> 法术防御</summary>
        public uint hp { get; set; }

        /// <summary> 生命值</summary>
        public uint mp { get; set; }

        /// <summary> 法术值</summary>
        public uint liliang { get; set; }

        /// <summary> 力量</summary>
        public uint zhili { get; set; }

        /// <summary> 智力</summary>
        public uint minjie { get; set; }

        /// <summary> 敏捷</summary>
        public uint tizhi { get; set; }

        /// <summary> 体质</summary>
        public uint jingshen { get; set; }

        /// <summary> 精神</summary>
        public uint esdam { get; set; }

        /// <summary> 火攻击</summary>
        public uint esdef { get; set; }

        /// <summary> 火抗性</summary>
        public uint ssdam { get; set; }

        /// <summary> 冰攻击</summary>
        public uint ssdef { get; set; }

        /// <summary> 冰抗性</summary>
        public uint lsdam { get; set; }

        /// <summary> 电攻击</summary>
        public uint lsdef { get; set; }

        /// <summary> 电抗性</summary>
        public uint vsdam { get; set; }

        /// <summary> 暗攻击</summary>
        public uint vsdef { get; set; }

        /// <summary> 暗抗性</summary>
        public uint lucky { get; set; }

        /// <summary> 物理暴击</summary>
        public uint mlucky { get; set; }

        /// <summary> 法术暴击</summary>
        public uint criti_ratio { get; set; }

        /// <summary> 暴击伤害</summary>
        public uint cure { get; set; }

        /// <summary> 治疗</summary>
        public uint phit { get; set; }

        /// <summary> 命中</summary>
        public uint hide_per { get; set; }

        /// <summary> 闪避</summary>
        public uint pabs { get; set; }

        /// <summary> 物伤吸收</summary>
        public uint mabs { get; set; }

        /// <summary> 法伤吸收</summary>
        public uint harm_add_per { get; set; }

        /// <summary> 伤害加深</summary>
        public uint harm_sub_per { get; set; }

        /// <summary> 伤害吸收</summary>
        public uint power { get; set; }

        /// <summary> 战斗力</summary>
        public uint Hat { get; set; }

        /// <summary> 头盔1</summary>
        public uint Shoulder { get; set; }

        /// <summary> 护肩2</summary>
        public uint Coat { get; set; }

        /// <summary> 上衣3</summary>
        public uint Leg { get; set; }

        /// <summary> 护腿4</summary>
        public uint Adornl_1 { get; set; }

        /// <summary> 戒指5</summary>
        public uint Adornl_2 { get; set; }

        /// <summary> 戒指6</summary>
        public uint Shield { get; set; }

        /// <summary> 副手7</summary>
        public uint Equip { get; set; }

        /// <summary> 武器8</summary>
        public uint Shoes { get; set; }

        /// <summary> 鞋子9</summary>
        public uint Cuff { get; set; }

        /// <summary> 护腕10</summary>
        public uint Belf { get; set; }

        /// <summary> 腰带11</summary>
        public uint Necklace { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 属性提升概率 KEY: diffValue</summary>
    public partial class RSPropertyPromoteDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RSPropertyPromoteDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RSPropertyPromoteDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RSPropertyPromoteDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RSPropertyPromoteDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RSPropertyPromoteDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RSPropertyPromoteDataBase.Deserialize(buffer, (RSPropertyPromoteDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RSPropertyPromoteDataBase.Deserialize(stream, (RSPropertyPromoteDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RSPropertyPromoteDataBase.DeserializeLengthDelimited(stream, (RSPropertyPromoteDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RSPropertyPromoteDataBase.DeserializeLength(stream, length, (RSPropertyPromoteDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RSPropertyPromoteDataBase.Serialize(stream, (RSPropertyPromoteDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RSPropertyPromoteDataBase.SerializeToBytes((RSPropertyPromoteDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RSPropertyPromoteDataBase.SerializeLengthDelimited(stream, (RSPropertyPromoteDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint diffValue { get; set; }

        /// <summary> 差值</summary>
        public uint promoteProp { get; set; }

    }

    /// <summary> FILE: Equip养成.xlsx SHEET: 符石 KEY: stoneId</summary>
    public partial class RunestoneDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new RunestoneDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return RunestoneDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return RunestoneDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return RunestoneDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return RunestoneDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return RunestoneDataBase.Deserialize(buffer, (RunestoneDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return RunestoneDataBase.Deserialize(stream, (RunestoneDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return RunestoneDataBase.DeserializeLengthDelimited(stream, (RunestoneDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return RunestoneDataBase.DeserializeLength(stream, length, (RunestoneDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { RunestoneDataBase.Serialize(stream, (RunestoneDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return RunestoneDataBase.SerializeToBytes((RunestoneDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { RunestoneDataBase.SerializeLengthDelimited(stream, (RunestoneDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint stoneId { get; set; }

        /// <summary> 符石ID</summary>
        public string name { get; set; }

        /// <summary> 符石名称</summary>
        public uint grade { get; set; }

        /// <summary> 档次</summary>
        public uint protectProb { get; set; }

        /// <summary> 保护概率</summary>
        public uint removeCost { get; set; }

        /// <summary> 消除费用</summary>
        public uint promoteCost { get; set; }

    }

    /// <summary> FILE: Schedule.xlsx SHEET: Sheet1 KEY: id</summary>
    public partial class ScheduleDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ScheduleDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ScheduleDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ScheduleDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ScheduleDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ScheduleDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ScheduleDataBase.Deserialize(buffer, (ScheduleDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ScheduleDataBase.Deserialize(stream, (ScheduleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ScheduleDataBase.DeserializeLengthDelimited(stream, (ScheduleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ScheduleDataBase.DeserializeLength(stream, length, (ScheduleDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ScheduleDataBase.Serialize(stream, (ScheduleDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ScheduleDataBase.SerializeToBytes((ScheduleDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ScheduleDataBase.SerializeLengthDelimited(stream, (ScheduleDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 日程id</summary>
        public uint cycleType { get; set; }

        /// <summary> 周期类型</summary>
        public uint week { get; set; }

        /// <summary> 星期</summary>
        public uint startYear { get; set; }

        /// <summary> 开始年</summary>
        public uint startMonth { get; set; }

        /// <summary> 开始月</summary>
        public uint startDay { get; set; }

        /// <summary> 开始日</summary>
        public uint endYear { get; set; }

        /// <summary> 结束年</summary>
        public uint endMonth { get; set; }

        /// <summary> 结束月</summary>
        public uint endDay { get; set; }

        /// <summary> 结束日</summary>
        public uint startHour { get; set; }

        /// <summary> 开始时</summary>
        public uint startMin { get; set; }

        /// <summary> 开始分</summary>
        public uint endHour { get; set; }

        /// <summary> 结束时</summary>
        public uint endMin { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 种子幼崽 KEY: itemID</summary>
    public partial class SeedAndCubDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SeedAndCubDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SeedAndCubDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SeedAndCubDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SeedAndCubDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SeedAndCubDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SeedAndCubDataBase.Deserialize(buffer, (SeedAndCubDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SeedAndCubDataBase.Deserialize(stream, (SeedAndCubDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SeedAndCubDataBase.DeserializeLengthDelimited(stream, (SeedAndCubDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SeedAndCubDataBase.DeserializeLength(stream, length, (SeedAndCubDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SeedAndCubDataBase.Serialize(stream, (SeedAndCubDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SeedAndCubDataBase.SerializeToBytes((SeedAndCubDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SeedAndCubDataBase.SerializeLengthDelimited(stream, (SeedAndCubDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint itemID { get; set; }

        /// <summary> 道具ID</summary>
        public uint indexID { get; set; }

        /// <summary> 索引ID</summary>
        public string name { get; set; }

        /// <summary> 名字</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public uint moneyType { get; set; }

        /// <summary> 货币类型</summary>
        public uint price { get; set; }

        /// <summary> 价格</summary>
        public string icon { get; set; }

        /// <summary> Icon</summary>
        public string des { get; set; }

        /// <summary> 描述</summary>
        public uint growTime { get; set; }

        /// <summary> 成长时间</summary>
        public uint growUnitTime { get; set; }

        /// <summary> 立即成熟单位时长</summary>
        public uint growUnitCostCoupons { get; set; }

        /// <summary> 基础单位费用</summary>
        public uint ProductOneID { get; set; }

        /// <summary> 成品道具1ID</summary>
        public uint ProductOneMin { get; set; }

        /// <summary> 数量下限1</summary>
        public uint ProductOneMax { get; set; }

        /// <summary> 数量上限1</summary>
        public uint ProductTwoID { get; set; }

        /// <summary> 成品道具2ID</summary>
        public uint ProductTwoMin { get; set; }

        /// <summary> 数量下限2</summary>
        public uint ProductTwoMax { get; set; }

    }

    /// <summary> FILE: ChooseRole界面表.xlsm SHEET: Sheet1 KEY: professionID + sexID</summary>
    public partial class SelectRoleDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SelectRoleDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SelectRoleDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SelectRoleDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SelectRoleDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SelectRoleDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SelectRoleDataBase.Deserialize(buffer, (SelectRoleDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SelectRoleDataBase.Deserialize(stream, (SelectRoleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SelectRoleDataBase.DeserializeLengthDelimited(stream, (SelectRoleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SelectRoleDataBase.DeserializeLength(stream, length, (SelectRoleDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SelectRoleDataBase.Serialize(stream, (SelectRoleDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SelectRoleDataBase.SerializeToBytes((SelectRoleDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SelectRoleDataBase.SerializeLengthDelimited(stream, (SelectRoleDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> id</summary>
        public uint professionID { get; set; }

        /// <summary> 职业</summary>
        public uint sexID { get; set; }

        /// <summary> 性别</summary>
        public string professionName { get; set; }

        /// <summary> 职业名</summary>
        public string bodyPathRoleShowcase { get; set; }

        /// <summary> 选人界面身体路径</summary>
        public uint createRoleResID { get; set; }

        /// <summary> 创建角色身体路径</summary>
        public uint bodyPathID { get; set; }

        /// <summary> 身体路径</summary>
        public uint weaponPath { get; set; }

        /// <summary> 武器路径</summary>
        public string headIcon { get; set; }

        /// <summary> 头像</summary>
        public string mainUIHeadIcon { get; set; }

        /// <summary> 主界面头像</summary>
        public string wingPath { get; set; }

        /// <summary> 翅膀路径</summary>
        public string animatorHorse { get; set; }

        /// <summary> 骑乘状态动画控制器</summary>
        public string strDesc { get; set; }

        /// <summary> 描述</summary>
        public string strAble { get; set; }

        /// <summary> 能力图</summary>
        public string strprofessionIcon { get; set; }

        /// <summary> 职业名称图</summary>
        public uint offsetY { get; set; }

        /// <summary> 半身像高度参数</summary>
        public uint distance { get; set; }

        /// <summary> 半身像缩放参数</summary>
        public int diaRotateX { get; set; }

        /// <summary> 半身像旋转参数X</summary>
        public uint borneffect { get; set; }

        /// <summary> 出生特效</summary>
        public uint deadeffect { get; set; }

        /// <summary> 死亡特效</summary>
        public uint deadAudio { get; set; }

        /// <summary> 死亡音效</summary>
        public uint deadAudioDelay { get; set; }

        /// <summary> 死亡音效延迟</summary>
        public uint jobBigIcon { get; set; }

        /// <summary> 职业背景大图</summary>
        public uint createAudioID { get; set; }

    }

    /// <summary> FILE: Sensitive敏感词.xlsm SHEET: 敏感词 KEY: id</summary>
    public partial class SensitiveWordDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SensitiveWordDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SensitiveWordDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SensitiveWordDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SensitiveWordDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SensitiveWordDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SensitiveWordDataBase.Deserialize(buffer, (SensitiveWordDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SensitiveWordDataBase.Deserialize(stream, (SensitiveWordDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SensitiveWordDataBase.DeserializeLengthDelimited(stream, (SensitiveWordDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SensitiveWordDataBase.DeserializeLength(stream, length, (SensitiveWordDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SensitiveWordDataBase.Serialize(stream, (SensitiveWordDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SensitiveWordDataBase.SerializeToBytes((SensitiveWordDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SensitiveWordDataBase.SerializeLengthDelimited(stream, (SensitiveWordDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string sWord { get; set; }

    }

    /// <summary> FILE: 剧情触发表.xlsx SHEET: Sheet1 KEY: ID</summary>
    public partial class SequencerData : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SequencerData(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SequencerData.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SequencerData.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SequencerData.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SequencerData.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SequencerData.Deserialize(buffer, (SequencerData)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SequencerData.Deserialize(stream, (SequencerData)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SequencerData.DeserializeLengthDelimited(stream, (SequencerData)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SequencerData.DeserializeLength(stream, length, (SequencerData)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SequencerData.Serialize(stream, (SequencerData)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SequencerData.SerializeToBytes((SequencerData)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SequencerData.SerializeLengthDelimited(stream, (SequencerData)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> 剧情ID</summary>
        public uint TriggerType { get; set; }

        /// <summary> 触发类型</summary>
        public uint Paramer1 { get; set; }

        /// <summary> 参数1</summary>
        public uint Paramer2 { get; set; }

        /// <summary> 参数2</summary>
        public uint IsLoop { get; set; }

        /// <summary> 循环触发OR首次触发</summary>
        public uint Duration { get; set; }

        /// <summary> 时长</summary>
        public string SequencerFile { get; set; }

        /// <summary> 剧情文件</summary>
        public uint IsJumpTo { get; set; }

    }

    /// <summary> FILE: 剧情触发表.xlsx SHEET: StoryDialog KEY: ID</summary>
    public partial class SequencerDialog : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SequencerDialog(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SequencerDialog.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SequencerDialog.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SequencerDialog.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SequencerDialog.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SequencerDialog.Deserialize(buffer, (SequencerDialog)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SequencerDialog.Deserialize(stream, (SequencerDialog)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SequencerDialog.DeserializeLengthDelimited(stream, (SequencerDialog)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SequencerDialog.DeserializeLength(stream, length, (SequencerDialog)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SequencerDialog.Serialize(stream, (SequencerDialog)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SequencerDialog.SerializeToBytes((SequencerDialog)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SequencerDialog.SerializeLengthDelimited(stream, (SequencerDialog)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> 对话ID</summary>
        public string Text { get; set; }

    }

    /// <summary> FILE: S设置画质表.xlsx SHEET: Sheet1 KEY: id</summary>
    public partial class SettingDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SettingDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SettingDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SettingDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SettingDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SettingDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SettingDataBase.Deserialize(buffer, (SettingDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SettingDataBase.Deserialize(stream, (SettingDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SettingDataBase.DeserializeLengthDelimited(stream, (SettingDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SettingDataBase.DeserializeLength(stream, length, (SettingDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SettingDataBase.Serialize(stream, (SettingDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SettingDataBase.SerializeToBytes((SettingDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SettingDataBase.SerializeLengthDelimited(stream, (SettingDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> id</summary>
        public string strName { get; set; }

        /// <summary> 画质模式</summary>
        public uint GrassMoveGrade { get; set; }

        /// <summary> 草地扰动</summary>
        public uint RealTime_Shadow { get; set; }

        /// <summary> 实时阴影</summary>
        public uint ParticleGrade { get; set; }

        /// <summary> 特效等级</summary>
        public uint ViewDistanceGrade { get; set; }

        /// <summary> 视野距离</summary>
        public uint GroundDetailGrade { get; set; }

        /// <summary> 地表细节</summary>
        public uint ModelPrecision { get; set; }

        /// <summary> 模型精度</summary>
        public uint PlayerNum { get; set; }

    }

    /// <summary> FILE: welfare福利.xlsm SHEET: 新服七日 KEY: ID</summary>
    public partial class SevenDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SevenDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SevenDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SevenDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SevenDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SevenDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SevenDataBase.Deserialize(buffer, (SevenDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SevenDataBase.Deserialize(stream, (SevenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SevenDataBase.DeserializeLengthDelimited(stream, (SevenDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SevenDataBase.DeserializeLength(stream, length, (SevenDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SevenDataBase.Serialize(stream, (SevenDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SevenDataBase.SerializeToBytes((SevenDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SevenDataBase.SerializeLengthDelimited(stream, (SevenDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint DateID { get; set; }

        /// <summary> 日期</summary>
        public uint TypeID { get; set; }

        /// <summary> 类型ID</summary>
        public uint SortID { get; set; }

        /// <summary> 排序ID</summary>
        public uint parameter1 { get; set; }

        /// <summary> 参数1</summary>
        public uint parameter2 { get; set; }

        /// <summary> 参数2</summary>
        public string strDes { get; set; }

        /// <summary> 描述</summary>
        public string reward { get; set; }

        /// <summary> 奖励列表</summary>
        public uint point { get; set; }

    }

    /// <summary> FILE: 展示特效表.xlsx SHEET: Sheet1 KEY: TableID</summary>
    public partial class ShowEffect : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ShowEffect(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ShowEffect.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ShowEffect.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ShowEffect.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ShowEffect.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ShowEffect.Deserialize(buffer, (ShowEffect)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ShowEffect.Deserialize(stream, (ShowEffect)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ShowEffect.DeserializeLengthDelimited(stream, (ShowEffect)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ShowEffect.DeserializeLength(stream, length, (ShowEffect)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ShowEffect.Serialize(stream, (ShowEffect)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ShowEffect.SerializeToBytes((ShowEffect)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ShowEffect.SerializeLengthDelimited(stream, (ShowEffect)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint TableID { get; set; }

        /// <summary> ID</summary>
        public string EffectID { get; set; }

        /// <summary> 特效ID</summary>
        public uint Profession { get; set; }

        /// <summary> 职业</summary>
        public float StartTime { get; set; }

        /// <summary> 开始时间</summary>
        public uint IsWeaponEffect { get; set; }

    }

    /// <summary> FILE: M模型展示信息.xlsx SHEET: Sheet1 KEY: ModelID</summary>
    public partial class ShowModelDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new ShowModelDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return ShowModelDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return ShowModelDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return ShowModelDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return ShowModelDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return ShowModelDataBase.Deserialize(buffer, (ShowModelDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return ShowModelDataBase.Deserialize(stream, (ShowModelDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return ShowModelDataBase.DeserializeLengthDelimited(stream, (ShowModelDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return ShowModelDataBase.DeserializeLength(stream, length, (ShowModelDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { ShowModelDataBase.Serialize(stream, (ShowModelDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return ShowModelDataBase.SerializeToBytes((ShowModelDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { ShowModelDataBase.SerializeLengthDelimited(stream, (ShowModelDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ModelID { get; set; }

        /// <summary> 模型ID</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public string ModelName { get; set; }

        /// <summary> 名称</summary>
        public uint quanOffsetY { get; set; }

        /// <summary> 全身像高度参数</summary>
        public uint quanDistance { get; set; }

        /// <summary> 全身像缩放参数</summary>
        public string ModelDescription { get; set; }

    }

    /// <summary> FILE: Skill表格.xlsm SHEET: Sheet1 KEY: wdID + wdLevel</summary>
    public partial class SkillDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SkillDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SkillDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SkillDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SkillDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SkillDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SkillDatabase.Deserialize(buffer, (SkillDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SkillDatabase.Deserialize(stream, (SkillDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SkillDatabase.DeserializeLengthDelimited(stream, (SkillDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SkillDatabase.DeserializeLength(stream, length, (SkillDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SkillDatabase.Serialize(stream, (SkillDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SkillDatabase.SerializeToBytes((SkillDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SkillDatabase.SerializeLengthDelimited(stream, (SkillDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public SkillDatabase()
        {
            beAttactEffect = new List<uint>();
        }
        public uint wdID { get; set; }

        /// <summary> 编号</summary>
        public uint wdLevel { get; set; }

        /// <summary> 等级</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint dwMaxLevel { get; set; }

        /// <summary> 最高等级</summary>
        public uint dwType { get; set; }

        /// <summary> 技能类型</summary>
        public uint dwSkillSatus { get; set; }

        /// <summary> 需求形态</summary>
        public bool isnormal { get; set; }

        /// <summary> 是否普攻</summary>
        public bool IsBasic { get; set; }

        /// <summary> 固定位置</summary>
        public uint dwJob { get; set; }

        /// <summary> 职业类型</summary>
        public uint dwAttackDis { get; set; }

        /// <summary> 攻击距离</summary>
        public uint dwUseMethod { get; set; }

        /// <summary> 释放方式</summary>
        public uint dwMoveType { get; set; }

        /// <summary> 位移类型</summary>
        public uint dwRange { get; set; }

        /// <summary> 技能范围</summary>
        public uint dwNeedLevel { get; set; }

        /// <summary> 人物等级</summary>
        public uint dwNeedSkill1 { get; set; }

        /// <summary> 前提技能</summary>
        public uint dwNeedSkill1Level { get; set; }

        /// <summary> 前提技能等级</summary>
        public uint dwNeedBuff { get; set; }

        /// <summary> 技能释放需求BUFF</summary>
        public uint dwNeedSW { get; set; }

        /// <summary> 消耗声望</summary>
        public string needItemArray { get; set; }

        /// <summary> 消耗道具</summary>
        public uint petType { get; set; }

        /// <summary> 宠物技能类型</summary>
        public uint dwExp { get; set; }

        /// <summary> 消耗经验</summary>
        public uint dwMoney { get; set; }

        /// <summary> 消耗货币</summary>
        public uint costsp { get; set; }

        /// <summary> 法术值消耗</summary>
        public uint costspprob { get; set; }

        /// <summary> 法术值消耗百分比</summary>
        public uint dwIntervalTime { get; set; }

        /// <summary> 冷却时间</summary>
        public uint dwCommonCDTime { get; set; }

        /// <summary> 公共冷却</summary>
        public uint dwCommonCDGroup { get; set; }

        /// <summary> 公共冷却组</summary>
        public uint dwPerpareTime { get; set; }

        /// <summary> 准备时间</summary>
        public uint dwReadTime { get; set; }

        /// <summary> 读条时间</summary>
        public uint dwGuideTime { get; set; }

        /// <summary> 引导时间</summary>
        public uint dwGuideIntervalTime { get; set; }

        /// <summary> 引导间隔时间</summary>
        public uint camptype { get; set; }

        /// <summary> 阵营分类</summary>
        public string strDesc { get; set; }

        /// <summary> 描述</summary>
        public string iconPath { get; set; }

        /// <summary> 图标路径</summary>
        public uint wdStiffTime { get; set; }

        /// <summary> 硬直时间</summary>
        public List<uint> beAttactEffect { get; set; }

        /// <summary> 受击特效</summary>
        public uint flyspeed { get; set; }

        /// <summary> 飞行速度</summary>
        public string skillEffectTime { get; set; }

        /// <summary> 技能特效播放时间</summary>
        public string skillPlayCostItem { get; set; }

        /// <summary> 技能释放需求道具</summary>
        public bool autoplay { get; set; }

        /// <summary> 挂机释放</summary>
        public string beLinkAttactEffect { get; set; }

        /// <summary> 链式攻击特效</summary>
        public uint breakType { get; set; }

        /// <summary> 是否可打断</summary>
        public uint targetType { get; set; }

        /// <summary> 目标类型</summary>
        public uint targetParam { get; set; }

        /// <summary> 目标选择</summary>
        public uint useSkillType { get; set; }

        /// <summary> 施法类型</summary>
        public uint areaType { get; set; }

        /// <summary> 范围类型</summary>
        public uint skillArea { get; set; }

        /// <summary> 技能范围</summary>
        public uint skillAreaParam { get; set; }

        /// <summary> 技能范围参数</summary>
        public uint damagetimes { get; set; }

        /// <summary> 伤害次数</summary>
        public uint hurtinterval { get; set; }

        /// <summary> 伤害间隔</summary>
        public uint heartID { get; set; }

        /// <summary> 心法ID</summary>
        public uint skillLength { get; set; }

    }

    /// <summary> FILE: Skill连击表.xlsm SHEET: Sheet1 KEY: skillid</summary>
    public partial class SkillDoubleHitDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SkillDoubleHitDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SkillDoubleHitDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SkillDoubleHitDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SkillDoubleHitDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SkillDoubleHitDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SkillDoubleHitDataBase.Deserialize(buffer, (SkillDoubleHitDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SkillDoubleHitDataBase.Deserialize(stream, (SkillDoubleHitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SkillDoubleHitDataBase.DeserializeLengthDelimited(stream, (SkillDoubleHitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SkillDoubleHitDataBase.DeserializeLength(stream, length, (SkillDoubleHitDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SkillDoubleHitDataBase.Serialize(stream, (SkillDoubleHitDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SkillDoubleHitDataBase.SerializeToBytes((SkillDoubleHitDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SkillDoubleHitDataBase.SerializeLengthDelimited(stream, (SkillDoubleHitDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint skillid { get; set; }

        /// <summary> 技能ID</summary>
        public uint nextskillid { get; set; }

        /// <summary> 后续技能ID</summary>
        public uint beginskillid { get; set; }

        /// <summary> 开始技能ID</summary>
        public uint doublehitBegin { get; set; }

        /// <summary> 连击生效开始时间</summary>
        public uint doublehitend { get; set; }

        /// <summary> 连击生效结束时间</summary>
        public uint beginMove { get; set; }

        /// <summary> 开始位移时间</summary>
        public uint beginChangeTime { get; set; }

        /// <summary> 开始转换时间</summary>
        public uint movetime { get; set; }

        /// <summary> 位移时间</summary>
        public float blendTime { get; set; }

    }

    /// <summary> FILE: M魔族急袭星级表.xlsx SHEET: Sheet1 KEY: dwID</summary>
    public partial class StarQuestDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new StarQuestDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return StarQuestDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return StarQuestDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return StarQuestDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return StarQuestDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return StarQuestDataBase.Deserialize(buffer, (StarQuestDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return StarQuestDataBase.Deserialize(stream, (StarQuestDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return StarQuestDataBase.DeserializeLengthDelimited(stream, (StarQuestDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return StarQuestDataBase.DeserializeLength(stream, length, (StarQuestDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { StarQuestDataBase.Serialize(stream, (StarQuestDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return StarQuestDataBase.SerializeToBytes((StarQuestDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { StarQuestDataBase.SerializeLengthDelimited(stream, (StarQuestDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 星级</summary>
        public uint money { get; set; }

        /// <summary> 金币消耗</summary>
        public uint coin { get; set; }

        /// <summary> 文钱消耗</summary>
        public string strCostRate { get; set; }

        /// <summary> 等级消耗系数</summary>
        public uint fiveStarCost { get; set; }

    }

    /// <summary> FILE: Effect.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class StateDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new StateDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return StateDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return StateDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return StateDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return StateDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return StateDataBase.Deserialize(buffer, (StateDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return StateDataBase.Deserialize(stream, (StateDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return StateDataBase.DeserializeLengthDelimited(stream, (StateDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return StateDataBase.DeserializeLength(stream, length, (StateDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { StateDataBase.Serialize(stream, (StateDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return StateDataBase.SerializeToBytes((StateDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { StateDataBase.SerializeLengthDelimited(stream, (StateDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint grade { get; set; }

        /// <summary> 档次</summary>
        public uint maxGrade { get; set; }

        /// <summary> 最高档次</summary>
        public uint nextAttrId { get; set; }

        /// <summary> 下级属性</summary>
        public string des { get; set; }

        /// <summary> 描述</summary>
        public uint typeid { get; set; }

        /// <summary> 类型ID</summary>
        public int param1 { get; set; }

        /// <summary> 参数1</summary>
        public int param2 { get; set; }

        /// <summary> 参数2</summary>
        public int param3 { get; set; }

        /// <summary> 参数3</summary>
        public int fightPower { get; set; }

    }

    /// <summary> FILE: Store_商城表.xlsm SHEET: 商城基本 KEY: mallItemId</summary>
    public partial class StoreDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new StoreDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return StoreDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return StoreDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return StoreDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return StoreDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return StoreDataBase.Deserialize(buffer, (StoreDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return StoreDataBase.Deserialize(stream, (StoreDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return StoreDataBase.DeserializeLengthDelimited(stream, (StoreDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return StoreDataBase.DeserializeLength(stream, length, (StoreDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { StoreDataBase.Serialize(stream, (StoreDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return StoreDataBase.SerializeToBytes((StoreDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { StoreDataBase.SerializeLengthDelimited(stream, (StoreDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint mallItemId { get; set; }

        /// <summary> 索引ID</summary>
        public uint storeId { get; set; }

        /// <summary> 商城ID</summary>
        public uint itemId { get; set; }

        /// <summary> 道具ID</summary>
        public uint tag { get; set; }

        /// <summary> 一级分类标签</summary>
        public string tagName { get; set; }

        /// <summary> 一级分类标签名</summary>
        public uint sortId { get; set; }

        /// <summary> 排序ID</summary>
        public uint pileNum { get; set; }

        /// <summary> 叠加数量</summary>
        public uint moneyType { get; set; }

        /// <summary> 购买货币类型</summary>
        public uint buyPrice { get; set; }

        /// <summary> 单价</summary>
        public uint offPrice { get; set; }

        /// <summary> 折后单价</summary>
        public uint dayMaxnum { get; set; }

        /// <summary> 每日限购数量</summary>
        public uint isHot { get; set; }

        /// <summary> 是否标记热门</summary>
        public uint serMaxnum { get; set; }

        /// <summary> 全服可售总数</summary>
        public uint vipLev { get; set; }

        /// <summary> VIP等级限制</summary>
        public uint lev { get; set; }

        /// <summary> 主角等级限制</summary>
        public uint isOff { get; set; }

        /// <summary> 是否开启打折</summary>
        public uint isOut { get; set; }

        /// <summary> 是否下架</summary>
        public string ScheduleId { get; set; }

        /// <summary> 时间ID</summary>
        public string NpcTag { get; set; }

    }

    /// <summary> FILE: Suit时装表格.xlsx SHEET: 时装表格 KEY: base_id + suitLv</summary>
    public partial class SuitDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new SuitDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return SuitDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return SuitDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return SuitDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return SuitDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return SuitDataBase.Deserialize(buffer, (SuitDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return SuitDataBase.Deserialize(stream, (SuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return SuitDataBase.DeserializeLengthDelimited(stream, (SuitDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return SuitDataBase.DeserializeLength(stream, length, (SuitDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { SuitDataBase.Serialize(stream, (SuitDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return SuitDataBase.SerializeToBytes((SuitDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { SuitDataBase.SerializeLengthDelimited(stream, (SuitDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint base_id { get; set; }

        /// <summary> ID</summary>
        public uint suitLv { get; set; }

        /// <summary> 时装档次</summary>
        public uint type { get; set; }

        /// <summary> 时装类型</summary>
        public uint typeMask { get; set; }

        /// <summary> 类型标识</summary>
        public string name { get; set; }

        /// <summary> 名字</summary>
        public uint resid { get; set; }

        /// <summary> 资源ID</summary>
        public uint resid2 { get; set; }

        /// <summary> 变身资源ID</summary>
        public uint viewresid { get; set; }

        /// <summary> 界面展示资源ID</summary>
        public uint viewresid2 { get; set; }

        /// <summary> 界面展示变身资源ID</summary>
        public string icon { get; set; }

        /// <summary> 图标名</summary>
        public uint time { get; set; }

        /// <summary> 时限</summary>
        public uint job { get; set; }

        /// <summary> 时装职业</summary>
        public string effect_id { get; set; }

        /// <summary> 增加属性</summary>
        public string desc { get; set; }

        /// <summary> 时装说明</summary>
        public string offset { get; set; }

        /// <summary> 偏移调整</summary>
        public string locator_name { get; set; }

        /// <summary> 绑定点名称</summary>
        public string renewalPrice { get; set; }

        /// <summary> 续费价格</summary>
        public string buyPrice { get; set; }

        /// <summary> 购买价格</summary>
        public string collect_type { get; set; }

        /// <summary> 获取途径</summary>
        public string activeWay { get; set; }

        /// <summary> 激活方式</summary>
        public float modelScale { get; set; }

        /// <summary> 模型缩放比例</summary>
        public float modeloffsetX { get; set; }

        /// <summary> 模型偏移X</summary>
        public float modeloffsetY { get; set; }

        /// <summary> 模型偏移Y</summary>
        public uint defaultMaterial { get; set; }

        /// <summary> 默认材质</summary>
        public float renderOffset { get; set; }

        /// <summary> 渲染偏移距离</summary>
        public float sceneModleScale { get; set; }

    }

    /// <summary> FILE: Guide新手引导.xlsx SHEET: 耳朵开启 KEY: id</summary>
    public partial class TabFuncDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new TabFuncDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return TabFuncDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return TabFuncDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return TabFuncDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return TabFuncDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return TabFuncDataBase.Deserialize(buffer, (TabFuncDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return TabFuncDataBase.Deserialize(stream, (TabFuncDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return TabFuncDataBase.DeserializeLengthDelimited(stream, (TabFuncDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return TabFuncDataBase.DeserializeLength(stream, length, (TabFuncDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { TabFuncDataBase.Serialize(stream, (TabFuncDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return TabFuncDataBase.SerializeToBytes((TabFuncDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { TabFuncDataBase.SerializeLengthDelimited(stream, (TabFuncDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 功能ID</summary>
        public uint openLv { get; set; }

    }

    /// <summary> FILE: TeamActive表.xlsx SHEET: 组队目标 KEY: ID</summary>
    public partial class TeamActivityDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new TeamActivityDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return TeamActivityDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return TeamActivityDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return TeamActivityDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return TeamActivityDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return TeamActivityDatabase.Deserialize(buffer, (TeamActivityDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return TeamActivityDatabase.Deserialize(stream, (TeamActivityDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return TeamActivityDatabase.DeserializeLengthDelimited(stream, (TeamActivityDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return TeamActivityDatabase.DeserializeLength(stream, length, (TeamActivityDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { TeamActivityDatabase.Serialize(stream, (TeamActivityDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return TeamActivityDatabase.SerializeToBytes((TeamActivityDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { TeamActivityDatabase.SerializeLengthDelimited(stream, (TeamActivityDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public uint mainID { get; set; }

        /// <summary> 大类ID</summary>
        public string mainName { get; set; }

        /// <summary> 大类名称</summary>
        public string indexName { get; set; }

        /// <summary> 小类名称</summary>
        public uint min { get; set; }

        /// <summary> 等级下限</summary>
        public uint max { get; set; }

        /// <summary> 等级上限</summary>
        public uint jumpId { get; set; }

    }

    /// <summary> FILE: TitleName.xlsm SHEET: Sheet1 KEY: dwID</summary>
    public partial class TitleDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new TitleDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return TitleDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return TitleDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return TitleDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return TitleDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return TitleDataBase.Deserialize(buffer, (TitleDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return TitleDataBase.Deserialize(stream, (TitleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return TitleDataBase.DeserializeLengthDelimited(stream, (TitleDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return TitleDataBase.DeserializeLength(stream, length, (TitleDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { TitleDataBase.Serialize(stream, (TitleDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return TitleDataBase.SerializeToBytes((TitleDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { TitleDataBase.SerializeLengthDelimited(stream, (TitleDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 编号</summary>
        public string strName { get; set; }

        /// <summary> 名称</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public string typeName { get; set; }

        /// <summary> 类型名称</summary>
        public uint secondType { get; set; }

        /// <summary> 小类</summary>
        public string secondTypeName { get; set; }

        /// <summary> 小类名</summary>
        public uint timeliness { get; set; }

        /// <summary> 时效类型</summary>
        public uint dwTime { get; set; }

        /// <summary> 时效</summary>
        public uint count { get; set; }

        /// <summary> 使用次数</summary>
        public string per_effect { get; set; }

        /// <summary> 永久效果</summary>
        public string act_effect { get; set; }

        /// <summary> 激活效果</summary>
        public uint dwQuality { get; set; }

        /// <summary> 品质</summary>
        public uint dwLevel { get; set; }

        /// <summary> 等级</summary>
        public string strDesc { get; set; }

        /// <summary> 称号说明</summary>
        public uint UIState { get; set; }

        /// <summary> 外观显示</summary>
        public string TextColor { get; set; }

        /// <summary> 文字颜色</summary>
        public string TextUI { get; set; }

        /// <summary> 文字外观</summary>
        public string SceneTextUI { get; set; }

        /// <summary> 场景文字外观</summary>
        public uint FxUI { get; set; }

        /// <summary> 特效外观</summary>
        public uint dwShow { get; set; }

    }

    /// <summary> FILE: Trailer系统预告.xlsm SHEET: Sheet1 KEY: dwId</summary>
    public partial class Trailerdatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new Trailerdatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return Trailerdatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return Trailerdatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return Trailerdatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return Trailerdatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return Trailerdatabase.Deserialize(buffer, (Trailerdatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return Trailerdatabase.Deserialize(stream, (Trailerdatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return Trailerdatabase.DeserializeLengthDelimited(stream, (Trailerdatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return Trailerdatabase.DeserializeLength(stream, length, (Trailerdatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { Trailerdatabase.Serialize(stream, (Trailerdatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return Trailerdatabase.SerializeToBytes((Trailerdatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { Trailerdatabase.SerializeLengthDelimited(stream, (Trailerdatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwId { get; set; }

        /// <summary> 序号ID</summary>
        public string strTitle { get; set; }

        /// <summary> 标题</summary>
        public string strDesc { get; set; }

        /// <summary> 描述</summary>
        public string strCondidtionDesc { get; set; }

        /// <summary> 达成条件</summary>
        public uint level { get; set; }

        /// <summary> 等级条件</summary>
        public uint task { get; set; }

        /// <summary> 任务条件</summary>
        public uint showLevel { get; set; }

        /// <summary> 显示等级</summary>
        public uint type { get; set; }

        /// <summary> 类型ID</summary>
        public string strIcon { get; set; }

        /// <summary> ICON</summary>
        public string strMoney { get; set; }

        /// <summary> 货币奖励</summary>
        public string strItem { get; set; }

        /// <summary> 道具奖励</summary>
        public string strJobItem { get; set; }

    }

    /// <summary> FILE: 传送功能.xlsm SHEET: Sheet2 KEY: id</summary>
    public partial class TransferChildTypeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new TransferChildTypeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return TransferChildTypeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return TransferChildTypeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return TransferChildTypeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return TransferChildTypeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return TransferChildTypeDataBase.Deserialize(buffer, (TransferChildTypeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return TransferChildTypeDataBase.Deserialize(stream, (TransferChildTypeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return TransferChildTypeDataBase.DeserializeLengthDelimited(stream, (TransferChildTypeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return TransferChildTypeDataBase.DeserializeLength(stream, length, (TransferChildTypeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { TransferChildTypeDataBase.Serialize(stream, (TransferChildTypeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return TransferChildTypeDataBase.SerializeToBytes((TransferChildTypeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { TransferChildTypeDataBase.SerializeLengthDelimited(stream, (TransferChildTypeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> ID</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public string MapIDList { get; set; }

    }

    /// <summary> FILE: 传送功能.xlsm SHEET: Sheet1 KEY: mapid</summary>
    public partial class TransferDatabase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new TransferDatabase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return TransferDatabase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return TransferDatabase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return TransferDatabase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return TransferDatabase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return TransferDatabase.Deserialize(buffer, (TransferDatabase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return TransferDatabase.Deserialize(stream, (TransferDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return TransferDatabase.DeserializeLengthDelimited(stream, (TransferDatabase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return TransferDatabase.DeserializeLength(stream, length, (TransferDatabase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { TransferDatabase.Serialize(stream, (TransferDatabase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return TransferDatabase.SerializeToBytes((TransferDatabase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { TransferDatabase.SerializeLengthDelimited(stream, (TransferDatabase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint mapid { get; set; }

        /// <summary> 地图ID</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public string strTitle { get; set; }

        /// <summary> 标签</summary>
        public string strTransmitMap { get; set; }

        /// <summary> 传送地图</summary>
        public uint posx { get; set; }

        /// <summary> 坐标X</summary>
        public uint posy { get; set; }

        /// <summary> 坐标Y</summary>
        public uint sanhuangLevel { get; set; }

        /// <summary> 三皇令等级</summary>
        public uint vipLevel { get; set; }

        /// <summary> VIP等级</summary>
        public uint costType { get; set; }

        /// <summary> 消耗货币类型</summary>
        public uint costValue { get; set; }

        /// <summary> 数值</summary>
        public uint bgResID { get; set; }

        /// <summary> 背景</summary>
        public uint sortID { get; set; }

    }

    /// <summary> FILE: Hunting狩猎.xlsx SHEET: 聚宝 KEY: ID</summary>
    public partial class TreasureBossDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new TreasureBossDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return TreasureBossDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return TreasureBossDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return TreasureBossDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return TreasureBossDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return TreasureBossDataBase.Deserialize(buffer, (TreasureBossDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return TreasureBossDataBase.Deserialize(stream, (TreasureBossDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return TreasureBossDataBase.DeserializeLengthDelimited(stream, (TreasureBossDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return TreasureBossDataBase.DeserializeLength(stream, length, (TreasureBossDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { TreasureBossDataBase.Serialize(stream, (TreasureBossDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return TreasureBossDataBase.SerializeToBytes((TreasureBossDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { TreasureBossDataBase.SerializeLengthDelimited(stream, (TreasureBossDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> ID</summary>
        public string bossName { get; set; }

        /// <summary> 怪物名字</summary>
        public uint bossID { get; set; }

        /// <summary> 怪物ID</summary>
        public uint bossLv { get; set; }

        /// <summary> 怪物等级</summary>
        public uint bossType { get; set; }

        /// <summary> 分类标签页</summary>
        public string scheIdStr { get; set; }

        /// <summary> 日程</summary>
        public string refreshTime { get; set; }

        /// <summary> 刷新时间</summary>
        public string uiRefreshTime { get; set; }

        /// <summary> UI刷新时间</summary>
        public uint copyID { get; set; }

        /// <summary> 副本ID</summary>
        public uint lvLimit { get; set; }

        /// <summary> 等级限制</summary>
        public string lvLimitDesc { get; set; }

        /// <summary> 等级描述</summary>
        public uint recommendPower { get; set; }

        /// <summary> 推荐战力</summary>
        public string dropItems { get; set; }

        /// <summary> 正常掉落</summary>
        public string finalItems { get; set; }

        /// <summary> 最后一击掉落</summary>
        public string icon { get; set; }

        /// <summary> 图标资源</summary>
        public string bottomicon { get; set; }

    }

    /// <summary> FILE: UIResource信息.xlsx SHEET: UI资源 KEY: ID</summary>
    public partial class UIResourceDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new UIResourceDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return UIResourceDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return UIResourceDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return UIResourceDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return UIResourceDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return UIResourceDataBase.Deserialize(buffer, (UIResourceDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return UIResourceDataBase.Deserialize(stream, (UIResourceDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return UIResourceDataBase.DeserializeLengthDelimited(stream, (UIResourceDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return UIResourceDataBase.DeserializeLength(stream, length, (UIResourceDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { UIResourceDataBase.Serialize(stream, (UIResourceDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return UIResourceDataBase.SerializeToBytes((UIResourceDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { UIResourceDataBase.SerializeLengthDelimited(stream, (UIResourceDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint ID { get; set; }

        /// <summary> UI资源ID</summary>
        public string resName { get; set; }

        /// <summary> 资源名称</summary>
        public uint cloneAddScriptState { get; set; }

        /// <summary> 克隆添加脚本</summary>
        public uint resType { get; set; }

        /// <summary> 资源类型</summary>
        public string resRelativePath { get; set; }

        /// <summary> 资源相对路径</summary>
        public string assetbundlePath { get; set; }

        /// <summary> 目标AssetBundle路径</summary>
        public uint resPreloadMask { get; set; }

        /// <summary> 预加载标识</summary>
        public uint resPreloadNum { get; set; }

        /// <summary> 预加载数量</summary>
        public uint resKeepType { get; set; }

        /// <summary> 资源保存类型</summary>
        public uint resIdleKeepNum { get; set; }

        /// <summary> Idle克隆对象维持数</summary>
        public uint resCloneNumLimit { get; set; }

        /// <summary> 最大克隆对象数</summary>
        public uint releaseCullAboveMask { get; set; }

        /// <summary> 释放CullAbove标识</summary>
        public uint releaseCullAboveNum { get; set; }

        /// <summary> 释放CullAbove数量</summary>
        public uint active2idleTime { get; set; }

        /// <summary> 活跃转空闲时间</summary>
        public uint idle2releaseTime { get; set; }

    }

    /// <summary> FILE: Unlock背包仓库格.xlsx SHEET: Sheet1 KEY: packId + gridIndex</summary>
    public partial class UnlockStoreDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new UnlockStoreDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return UnlockStoreDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return UnlockStoreDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return UnlockStoreDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return UnlockStoreDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return UnlockStoreDataBase.Deserialize(buffer, (UnlockStoreDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return UnlockStoreDataBase.Deserialize(stream, (UnlockStoreDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return UnlockStoreDataBase.DeserializeLengthDelimited(stream, (UnlockStoreDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return UnlockStoreDataBase.DeserializeLength(stream, length, (UnlockStoreDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { UnlockStoreDataBase.Serialize(stream, (UnlockStoreDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return UnlockStoreDataBase.SerializeToBytes((UnlockStoreDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { UnlockStoreDataBase.SerializeLengthDelimited(stream, (UnlockStoreDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint packId { get; set; }

        /// <summary> 背包ID</summary>
        public uint gridIndex { get; set; }

        /// <summary> 解锁序号</summary>
        public uint needLev { get; set; }

        /// <summary> 解锁等级</summary>
        public uint initNum { get; set; }

        /// <summary> 初始开启格数</summary>
        public uint maxNum { get; set; }

        /// <summary> 格子上限</summary>
        public uint moneyType { get; set; }

        /// <summary> 解锁货币类型</summary>
        public uint moneyNum { get; set; }

    }

    /// <summary> FILE: LevelUp.xlsm SHEET: Sheet2 KEY: worldlevdiff</summary>
    public partial class UpgradeAddDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new UpgradeAddDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return UpgradeAddDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return UpgradeAddDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return UpgradeAddDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return UpgradeAddDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return UpgradeAddDataBase.Deserialize(buffer, (UpgradeAddDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return UpgradeAddDataBase.Deserialize(stream, (UpgradeAddDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return UpgradeAddDataBase.DeserializeLengthDelimited(stream, (UpgradeAddDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return UpgradeAddDataBase.DeserializeLength(stream, length, (UpgradeAddDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { UpgradeAddDataBase.Serialize(stream, (UpgradeAddDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return UpgradeAddDataBase.SerializeToBytes((UpgradeAddDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { UpgradeAddDataBase.SerializeLengthDelimited(stream, (UpgradeAddDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint worldlevdiff { get; set; }

        /// <summary> 世界等级差</summary>
        public uint expupxs { get; set; }

    }

    /// <summary> FILE: LevelUp.xlsm SHEET: Sheet1 KEY: dwLevel</summary>
    public partial class UpgradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new UpgradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return UpgradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return UpgradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return UpgradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return UpgradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return UpgradeDataBase.Deserialize(buffer, (UpgradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return UpgradeDataBase.Deserialize(stream, (UpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return UpgradeDataBase.DeserializeLengthDelimited(stream, (UpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return UpgradeDataBase.DeserializeLength(stream, length, (UpgradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { UpgradeDataBase.Serialize(stream, (UpgradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return UpgradeDataBase.SerializeToBytes((UpgradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { UpgradeDataBase.SerializeLengthDelimited(stream, (UpgradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwLevel { get; set; }

        /// <summary> 人物等级</summary>
        public ulong qwExp { get; set; }

        /// <summary> 升级经验</summary>
        public uint dwMaxHp { get; set; }

        /// <summary> 最大生命</summary>
        public uint dwMaxSp { get; set; }

        /// <summary> 最大体力</summary>
        public uint dwMaxSpirit { get; set; }

        /// <summary> 最大精力</summary>
        public uint dwPropPoint { get; set; }

        /// <summary> 属性点数</summary>
        public string strEffect { get; set; }

        /// <summary> 升级特效</summary>
        public uint dwMoneyLimit { get; set; }

        /// <summary> 银币上限</summary>
        public uint dwIntroID { get; set; }

        /// <summary> 引导ID</summary>
        public uint dwMoneyTicketLimit { get; set; }

    }

    /// <summary> FILE: WeaponSoul.xlsx SHEET: 养成 KEY: id</summary>
    public partial class WeaponSoulGrowDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new WeaponSoulGrowDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return WeaponSoulGrowDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return WeaponSoulGrowDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return WeaponSoulGrowDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return WeaponSoulGrowDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return WeaponSoulGrowDataBase.Deserialize(buffer, (WeaponSoulGrowDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return WeaponSoulGrowDataBase.Deserialize(stream, (WeaponSoulGrowDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return WeaponSoulGrowDataBase.DeserializeLengthDelimited(stream, (WeaponSoulGrowDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return WeaponSoulGrowDataBase.DeserializeLength(stream, length, (WeaponSoulGrowDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { WeaponSoulGrowDataBase.Serialize(stream, (WeaponSoulGrowDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return WeaponSoulGrowDataBase.SerializeToBytes((WeaponSoulGrowDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { WeaponSoulGrowDataBase.SerializeLengthDelimited(stream, (WeaponSoulGrowDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 武魂ID</summary>
        public string name { get; set; }

        /// <summary> 名字</summary>
        public uint starLevel { get; set; }

        /// <summary> 星级</summary>
        public uint type { get; set; }

        /// <summary> 类型</summary>
        public uint blendCost { get; set; }

        /// <summary> 融合消耗金钱</summary>
        public uint blendMaterialId { get; set; }

        /// <summary> 融合所需物品ID</summary>
        public uint blendMaterialNum { get; set; }

        /// <summary> 融合所需物品数量</summary>
        public uint evolveNeedPlayerLevel { get; set; }

        /// <summary> 进化所需人物等级</summary>
        public uint evolveCost { get; set; }

        /// <summary> 进化消耗金钱</summary>
        public uint evolveMaterialId { get; set; }

        /// <summary> 进化所需物品ID</summary>
        public uint evolveMaterialNum { get; set; }

        /// <summary> 进化所需物品数量</summary>
        public uint preWeaponSoulId { get; set; }

        /// <summary> 上一阶武魂ID</summary>
        public uint nextWeaponSoulId { get; set; }

        /// <summary> 下一阶武魂ID</summary>
        public uint activeCost { get; set; }

        /// <summary> 激活消耗金钱</summary>
        public uint activeMaterialId { get; set; }

        /// <summary> 激活所需物品ID</summary>
        public uint activeMaterialNum { get; set; }

        /// <summary> 激活所需物品数量</summary>
        public uint removeCost { get; set; }

        /// <summary> 解除消耗金钱</summary>
        public uint removeMaterialId { get; set; }

        /// <summary> 解除激活所需物品ID</summary>
        public uint removeMaterialNum { get; set; }

    }

    /// <summary> FILE: WeaponSoul.xlsx SHEET: 档次 KEY: id</summary>
    public partial class WeaponSoulPropertyGradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new WeaponSoulPropertyGradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return WeaponSoulPropertyGradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return WeaponSoulPropertyGradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return WeaponSoulPropertyGradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return WeaponSoulPropertyGradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return WeaponSoulPropertyGradeDataBase.Deserialize(buffer, (WeaponSoulPropertyGradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return WeaponSoulPropertyGradeDataBase.Deserialize(stream, (WeaponSoulPropertyGradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return WeaponSoulPropertyGradeDataBase.DeserializeLengthDelimited(stream, (WeaponSoulPropertyGradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return WeaponSoulPropertyGradeDataBase.DeserializeLength(stream, length, (WeaponSoulPropertyGradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { WeaponSoulPropertyGradeDataBase.Serialize(stream, (WeaponSoulPropertyGradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return WeaponSoulPropertyGradeDataBase.SerializeToBytes((WeaponSoulPropertyGradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { WeaponSoulPropertyGradeDataBase.SerializeLengthDelimited(stream, (WeaponSoulPropertyGradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 附加属性ID</summary>
        public uint grade { get; set; }

    }

    /// <summary> FILE: WeaponSoul.xlsx SHEET: 升级 KEY: id + level</summary>
    public partial class WeaponSoulUpgradeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new WeaponSoulUpgradeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return WeaponSoulUpgradeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return WeaponSoulUpgradeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return WeaponSoulUpgradeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return WeaponSoulUpgradeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return WeaponSoulUpgradeDataBase.Deserialize(buffer, (WeaponSoulUpgradeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return WeaponSoulUpgradeDataBase.Deserialize(stream, (WeaponSoulUpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return WeaponSoulUpgradeDataBase.DeserializeLengthDelimited(stream, (WeaponSoulUpgradeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return WeaponSoulUpgradeDataBase.DeserializeLength(stream, length, (WeaponSoulUpgradeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { WeaponSoulUpgradeDataBase.Serialize(stream, (WeaponSoulUpgradeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return WeaponSoulUpgradeDataBase.SerializeToBytes((WeaponSoulUpgradeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { WeaponSoulUpgradeDataBase.SerializeLengthDelimited(stream, (WeaponSoulUpgradeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint id { get; set; }

        /// <summary> 武魂ID</summary>
        public string name { get; set; }

        /// <summary> 名称</summary>
        public uint starLevel { get; set; }

        /// <summary> 星级</summary>
        public uint level { get; set; }

        /// <summary> 等级</summary>
        public uint maxLevel { get; set; }

        /// <summary> 最高等级</summary>
        public uint apparelLevel { get; set; }

        /// <summary> 穿戴等级</summary>
        public uint upgradeExperience { get; set; }

        /// <summary> 升级经验</summary>
        public uint phyAttack { get; set; }

        /// <summary> 物理攻击</summary>
        public uint phyDef { get; set; }

        /// <summary> 物理防御</summary>
        public uint magicAttack { get; set; }

        /// <summary> 法术攻击</summary>
        public uint magicDef { get; set; }

        /// <summary> 法术防御</summary>
        public uint fight_power { get; set; }

    }

    /// <summary> FILE: welfare福利.xlsm SHEET: 福利礼包 KEY: dwID</summary>
    public partial class WelfareDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new WelfareDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return WelfareDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return WelfareDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return WelfareDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return WelfareDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return WelfareDataBase.Deserialize(buffer, (WelfareDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return WelfareDataBase.Deserialize(stream, (WelfareDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return WelfareDataBase.DeserializeLengthDelimited(stream, (WelfareDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return WelfareDataBase.DeserializeLength(stream, length, (WelfareDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { WelfareDataBase.Serialize(stream, (WelfareDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return WelfareDataBase.SerializeToBytes((WelfareDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { WelfareDataBase.SerializeLengthDelimited(stream, (WelfareDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> ID</summary>
        public string strDes { get; set; }

        /// <summary> 描述</summary>
        public uint dwType { get; set; }

        /// <summary> 类型ID</summary>
        public uint childType { get; set; }

        /// <summary> 子类型</summary>
        public uint dwParam { get; set; }

        /// <summary> 参数1</summary>
        public uint dwParam2 { get; set; }

        /// <summary> 参数2</summary>
        public string strReward { get; set; }

        /// <summary> 奖励列表</summary>
        public uint textureResID { get; set; }

        /// <summary> 美术字资源ID</summary>
        public uint sortID { get; set; }

        /// <summary> 排序ID</summary>
        public uint scheduleID { get; set; }

    }

    /// <summary> FILE: Homeland.xlsx SHEET: 许愿树 KEY: dwID</summary>
    public partial class WishingTreeDataBase : ProtoBuf.IExtensible, ProtoBuf.IMessage
    {
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing){ return null; }
        public byte[] SerializeToBytes(){return SerializeToBytes(this);}
        public void SerializeLengthDelimited(Stream stream){SerializeLengthDelimited(stream, this);}
        public struct stMessageOperator : ProtoBuf.IMessageOperator
        {
            public ProtoBuf.IMessage New() { return new WishingTreeDataBase(); }
            public ProtoBuf.IMessage Deserialize(Stream stream) { return WishingTreeDataBase.Deserialize(stream); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream) { return WishingTreeDataBase.DeserializeLengthDelimited(stream); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length) { return WishingTreeDataBase.DeserializeLength(stream, length); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer) { return WishingTreeDataBase.Deserialize(buffer); }
            public ProtoBuf.IMessage Deserialize(byte[] buffer, ProtoBuf.IMessage instance) { return WishingTreeDataBase.Deserialize(buffer, (WishingTreeDataBase)instance); }
            public ProtoBuf.IMessage Deserialize(Stream stream, ProtoBuf.IMessage instance) { return WishingTreeDataBase.Deserialize(stream, (WishingTreeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { return WishingTreeDataBase.DeserializeLengthDelimited(stream, (WishingTreeDataBase)instance); }
            public ProtoBuf.IMessage DeserializeLength(Stream stream, int length, ProtoBuf.IMessage instance) { return WishingTreeDataBase.DeserializeLength(stream, length, (WishingTreeDataBase)instance); }
            public void Serialize(Stream stream, ProtoBuf.IMessage instance) { WishingTreeDataBase.Serialize(stream, (WishingTreeDataBase)instance); }
            public byte[] SerializeToBytes(ProtoBuf.IMessage instance) { return WishingTreeDataBase.SerializeToBytes((WishingTreeDataBase)instance); }
            public void SerializeLengthDelimited(Stream stream, ProtoBuf.IMessage instance) { WishingTreeDataBase.SerializeLengthDelimited(stream, (WishingTreeDataBase)instance); }
        }
        public static ProtoBuf.IMessageOperator MessageOperator = new stMessageOperator();

        public uint dwID { get; set; }

        /// <summary> 许愿树索引ID</summary>
        public string treeName { get; set; }

        /// <summary> 许愿树名称</summary>
        public uint price { get; set; }

        /// <summary> 购买价格</summary>
        public uint treeGainTime { get; set; }

        /// <summary> 收获时间</summary>
        public uint loveMaxNum { get; set; }

        /// <summary> 集赞上限</summary>
        public uint level_min1 { get; set; }

        /// <summary> 区间1等级下限</summary>
        public uint level_max1 { get; set; }

        /// <summary> 区间1等级上限</summary>
        public uint level_min2 { get; set; }

        /// <summary> 区间2等级下限</summary>
        public uint level_max2 { get; set; }

        /// <summary> 区间2等级上限</summary>
        public uint master_exp_mul1 { get; set; }

        /// <summary> 园主收获经验系数1</summary>
        public uint master_exp_mul2 { get; set; }

        /// <summary> 园主收获经验系数2</summary>
        public uint friend_exp_mul1 { get; set; }

        /// <summary> 点赞经验系数1</summary>
        public uint friend_exp_mul2 { get; set; }

    }

}
